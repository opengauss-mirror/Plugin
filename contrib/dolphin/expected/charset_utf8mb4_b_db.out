CREATE DATABASE c_utf8mb4_b_db WITH ENCODING 'utf8mb4' LC_COLLATE='C' LC_CTYPE='C' DBCOMPATIBILITY 'B';
\c c_utf8mb4_b_db
-- test _charset syntax
-- -- test _charset COMPATIBILITY
SET b_format_behavior_compat_options = '';
SHOW b_format_behavior_compat_options;
 b_format_behavior_compat_options 
----------------------------------
 
(1 row)

SELECT _gbk'ABCD' = _utf8mb4'ABCD'; -- ERROR
ERROR:  syntax error at or near "="
LINE 1: SELECT _gbk'ABCD' = _utf8mb4'ABCD';
                          ^
CREATE TABLE test_charset_syntax(_utf8 text);
DROP TABLE test_charset_syntax;
SET b_format_behavior_compat_options = 'all';
SHOW b_format_behavior_compat_options;
 b_format_behavior_compat_options 
----------------------------------
 all
(1 row)

SELECT _gbk'ABCD' = _utf8mb4'ABCD';
 ?column? 
----------
 t
(1 row)

CREATE TABLE test_charset_syntax(_utf8 text); -- ERROR
ERROR:  syntax error at or near "_utf8"
LINE 1: CREATE TABLE test_charset_syntax(_utf8 text);
                                         ^
CREATE TABLE test_charset_syntax(_column text);
DROP TABLE test_charset_syntax;
-- -- test _charset + expression
SELECT _utf8mb4 10; -- ERROR
ERROR:  syntax error at or near "10"
LINE 1: SELECT _utf8mb4 10;
                        ^
SELECT _utf8mb4 CONCAT('é«˜æ–¯', 'DB'); -- ERROR
ERROR:  syntax error at or near "CONCAT"
LINE 1: SELECT _utf8mb4 CONCAT('é«˜æ–¯', 'DB');
                        ^
SELECT _utf8_mb4'ABCD' = _Utf-8mB4'ABCD'; -- ERROR
ERROR:  syntax error at or near "'ABCD'"
LINE 1: SELECT _utf8_mb4'ABCD' = _Utf-8mB4'ABCD';
                                          ^
SELECT __utf8mb4'ABCD' = __Utf8mB4'ABCD'; -- special
 ?column? 
----------
 t
(1 row)

SELECT _gbk'ABCD' = _GbK'ABCD';
 ?column? 
----------
 t
(1 row)

SELECT _binary E'', _binary E'' IS NULL;
 ?column? | ?column? 
----------+----------
 \x       | f
(1 row)

SELECT _binary E'\\xe9ab98e696af';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4 E'\\xe9ab98e696af';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _gbk E'\\xe9ab98e696af';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4 X'\\xe9ab98e696af'; -- ERROR, X'string' equal 'string'
ERROR:  "\" is not a valid hexadecimal digit
LINE 1: SELECT _utf8mb4 X'\\xe9ab98e696af';
                        ^
SELECT _binary X'', _binary X'' IS NULL;
 ?column? | ?column? 
----------+----------
 \x       | f
(1 row)

SELECT _binary X'E9AB98E696AF';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4 X'E9AB98E696AF';
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT _gbk X'E9AB98E696AF';
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _binary B'', _binary B'' IS NULL;
 ?column? | ?column? 
----------+----------
 \x       | f
(1 row)

SELECT _binary B'0';
 ?column? 
----------
 \x00
(1 row)

SELECT _binary B'111010011010101110011000111001101001011010101111';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4 B'111010011010101110011000111001101001011010101111';
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT _gbk B'111010011010101110011000111001101001011010101111';
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _utf8mb4 B'111010011010101110011000111001101001011010101111é«˜æ–¯'; -- ERROR
ERROR:  "é" is not a valid binary digit
LINE 1: SELECT _utf8mb4 B'111010011010101110011000111001101001011010...
                        ^
SELECT _binary X'000D' | X'0BC0'; -- ERROR not support yet
ERROR:  operator does not exist: "varbinary" | bit
LINE 1: SELECT _binary X'000D' | X'0BC0';
                               ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
-- ------------------------------------------
-- SET NAMES utf8mb4;
SET NAMES 'utf8mb4';
SHOW client_encoding;
 client_encoding 
-----------------
 UTF8
(1 row)

SHOW server_encoding;
 server_encoding 
-----------------
 UTF8
(1 row)

SHOW character_set_connection;
 character_set_connection 
--------------------------
 UTF8
(1 row)

SHOW collation_connection;
 collation_connection 
----------------------
 utf8mb4_general_ci
(1 row)

-- -- CONST charset and collation
SELECT _utf8mb4'é«˜æ–¯' COLLATE gbk_chinese_ci; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT _utf8mb4'é«˜æ–¯' COLLATE gbk_chinese_ci;
                              ^
SELECT _utf8mb4'é«˜æ–¯' COLLATE 'binary'; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT _utf8mb4'é«˜æ–¯' COLLATE 'binary';
                              ^
SELECT _utf8mb4'é«˜æ–¯' COLLATE "zh_CN.utf8"; -- support origin collation
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT _utf8mb4'é«˜æ–¯' COLLATE "C"; -- support origin collation
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT _gbk'é«˜æ–¯' COLLATE gbk_chinese_ci;
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _gbk'é«˜æ–¯' COLLATE 'binary'; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "GBK"
LINE 1: SELECT _gbk'é«˜æ–¯' COLLATE 'binary';
                          ^
SELECT _gbk'é«˜æ–¯' COLLATE "zh_CN.gbk"; -- ERROR
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _gbk'é«˜æ–¯' COLLATE "C"; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GBK" which is different from server_encoding
LINE 1: SELECT _gbk'é«˜æ–¯' COLLATE "C";
                          ^
SELECT _gb18030'é«˜æ–¯' COLLATE gb18030_chinese_ci;
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _gb18030'é«˜æ–¯' COLLATE gbk_chinese_ci; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "GB18030"
LINE 1: SELECT _gb18030'é«˜æ–¯' COLLATE gbk_chinese_ci;
                              ^
SELECT _gb18030'é«˜æ–¯' COLLATE 'binary'; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "GB18030"
LINE 1: SELECT _gb18030'é«˜æ–¯' COLLATE 'binary';
                              ^
SELECT _gb18030'é«˜æ–¯' COLLATE "zh_CN.gb18030"; -- ERROR
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _gb18030'é«˜æ–¯' COLLATE "C"; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GB18030" which is different from server_encoding
LINE 1: SELECT _gb18030'é«˜æ–¯' COLLATE "C";
                              ^
SELECT _binary'é«˜æ–¯' COLLATE gbk_chinese_ci; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for binary type
LINE 1: SELECT _binary'é«˜æ–¯' COLLATE gbk_chinese_ci;
                             ^
SELECT _binary'é«˜æ–¯' COLLATE 'binary';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _binary'é«˜æ–¯' COLLATE "zh_CN.utf8"; -- ERROR
ERROR:  COLLATION "zh_CN.utf8" is not valid for binary type
LINE 1: SELECT _binary'é«˜æ–¯' COLLATE "zh_CN.utf8";
                             ^
SELECT _binary'é«˜æ–¯' COLLATE "C"; -- ERROR
ERROR:  COLLATION "C" is not valid for binary type
LINE 1: SELECT _binary'é«˜æ–¯' COLLATE "C";
                             ^
SELECT _binary'' COLLATE utf8mb4_bin; -- ERROR
ERROR:  COLLATION "utf8mb4_bin" is not valid for binary type
LINE 1: SELECT _binary'' COLLATE utf8mb4_bin;
                         ^
SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE gbk_chinese_ci; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE gbk_chin...
                                                    ^
SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE 'binary'; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE 'binary'...
                                                    ^
SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE "zh_CN.utf8"; -- support origin collation
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE "C"; -- support origin collation
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT (_utf8mb4'é«˜æ–¯' COLLATE utf8mb4_bin) COLLATE utf8mb4_unicode_ci;
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT (_gbk'é«˜æ–¯' COLLATE "C") COLLATE utf8mb4_bin; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GBK" which is different from server_encoding
LINE 1: SELECT (_gbk'é«˜æ–¯' COLLATE "C") COLLATE utf8mb4_bin;
                           ^
SELECT (_gbk'é«˜æ–¯' COLLATE "C") COLLATE gbk_chinese_ci; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GBK" which is different from server_encoding
LINE 1: SELECT (_gbk'é«˜æ–¯' COLLATE "C") COLLATE gbk_chinese_ci;
                           ^
SELECT (_binary'é«˜æ–¯' COLLATE "binary") COLLATE utf8mb4_bin; -- ERROR
ERROR:  COLLATION "utf8mb4_bin" is not valid for binary type
LINE 1: SELECT (_binary'é«˜æ–¯' COLLATE "binary") COLLATE utf8mb4_bin;
                                                ^
-- -- CONST collation only
SELECT X'E9AB98E696AF' COLLATE "utf8mb4_unicode_ci"; -- ERROR
ERROR:  COLLATION "utf8mb4_unicode_ci" is not valid for binary type
LINE 1: SELECT X'E9AB98E696AF' COLLATE "utf8mb4_unicode_ci";
                               ^
SELECT X'E9AB98E696AF' COLLATE "binary";
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT B'111010011010101110011000111001101001011010101111' COLLATE "utf8mb4_unicode_ci"; -- ERROR
ERROR:  COLLATION "utf8mb4_unicode_ci" is not valid for binary type
LINE 1: ...111010011010101110011000111001101001011010101111' COLLATE "u...
                                                             ^
SELECT B'111010011010101110011000111001101001011010101111' COLLATE "binary";
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT 1 COLLATE "utf8mb4_unicode_ci"; -- not support yet
ERROR:  collations are not supported by type integer
LINE 1: SELECT 1 COLLATE "utf8mb4_unicode_ci";
                 ^
SELECT 1 COLLATE "binary"; -- not support yet
ERROR:  collations are not supported by type integer
LINE 1: SELECT 1 COLLATE "binary";
                 ^
SELECT CAST('é«˜æ–¯' AS binary) COLLATE "utf8mb4_unicode_ci"; -- ERROR
ERROR:  COLLATION "utf8mb4_unicode_ci" is not valid for binary type
LINE 1: SELECT CAST('é«˜æ–¯' AS binary) COLLATE "utf8mb4_unicode_ci";
                                      ^
CONTEXT:  referenced column: binary
SELECT CAST('é«˜æ–¯' AS binary) COLLATE "binary";
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST('E9AB98E696AF' AS blob) COLLATE "utf8mb4_unicode_ci"; -- ERROR
ERROR:  COLLATION "utf8mb4_unicode_ci" is not valid for binary type
LINE 1: SELECT CAST('E9AB98E696AF' AS blob) COLLATE "utf8mb4_unicode...
                                            ^
CONTEXT:  referenced column: blob
SELECT CAST('E9AB98E696AF' AS blob) COLLATE "binary";
     blob     
--------------
 E9AB98E696AF
(1 row)

SELECT 'é«˜æ–¯' COLLATE "utf8mb4_unicode_ci";
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT 'é«˜æ–¯' COLLATE "gbk_chinese_ci"; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT 'é«˜æ–¯' COLLATE "gbk_chinese_ci";
                      ^
SELECT 'é«˜æ–¯' COLLATE "gb18030_chinese_ci"; -- ERROR
ERROR:  COLLATION "gb18030_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT 'é«˜æ–¯' COLLATE "gb18030_chinese_ci";
                      ^
SELECT 'é«˜æ–¯' COLLATE "binary"; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT 'é«˜æ–¯' COLLATE "binary";
                      ^
-- test CollateExpr
CREATE TABLE t_collate_expr(
    ftext text collate utf8mb4_bin,
    fbytea bytea,
    fvbit varbit(8),
    fint int
);
-- -- test INSERT
INSERT INTO t_collate_expr(ftext) VALUES('01100001' collate "binary"); -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: ...SERT INTO t_collate_expr(ftext) VALUES('01100001' collate "b...
                                                             ^
CONTEXT:  referenced column: ftext
INSERT INTO t_collate_expr(ftext) VALUES('01100001' collate gbk_bin); -- ERROR
ERROR:  COLLATION "gbk_bin" is not valid for CHARACTER SET "UTF8"
LINE 1: ...SERT INTO t_collate_expr(ftext) VALUES('01100001' collate gb...
                                                             ^
CONTEXT:  referenced column: ftext
INSERT INTO t_collate_expr(ftext) VALUES('01100001' collate utf8mb4_unicode_ci);
INSERT INTO t_collate_expr(ftext) VALUES('01100001' collate gbk_bin collate utf8mb4_unicode_ci); -- only reserve top collate
INSERT INTO t_collate_expr(fbytea) VALUES('01100001' collate "binary"); -- do not check collate
INSERT INTO t_collate_expr(fbytea) VALUES('01100001' collate gbk_bin); -- do not check collate
INSERT INTO t_collate_expr(fbytea) VALUES('01100001' collate utf8mb4_unicode_ci);
INSERT INTO t_collate_expr(fvbit) VALUES('01100001' collate "binary"); -- do not check collate
INSERT INTO t_collate_expr(fvbit) VALUES('01100001' collate gbk_bin); -- do not check collate
INSERT INTO t_collate_expr(fvbit) VALUES('01100001' collate utf8mb4_unicode_ci);
INSERT INTO t_collate_expr(fint) VALUES('01100001' collate "binary"); -- do not check collate
INSERT INTO t_collate_expr(fint) VALUES('01100001' collate gbk_bin); -- do not check collate
INSERT INTO t_collate_expr(fint) VALUES('01100001' collate utf8mb4_unicode_ci);
INSERT INTO t_collate_expr(fbytea) VALUES('01100001' collate gbk_bin collate utf8mb4_unicode_ci); -- do not check collate
INSERT INTO t_collate_expr(fbytea) VALUES('01100001' collate utf8mb4_general_ci collate gbk_bin); -- do not check collate
INSERT INTO t_collate_expr(fvbit) VALUES('01100001' collate gbk_bin collate utf8mb4_unicode_ci); -- do not check collate
INSERT INTO t_collate_expr(fvbit) VALUES('01100001' collate utf8mb4_general_ci collate gbk_bin); -- do not check collate
INSERT INTO t_collate_expr(fint) VALUES('01100001' collate gbk_bin collate utf8mb4_unicode_ci); -- do not check collate
INSERT INTO t_collate_expr(fint) VALUES('01100001' collate utf8mb4_general_ci collate gbk_bin); -- do not check collate
-- -- test limit
select 1 from t_collate_expr limit(to_hex('11') collate "binary");
WARNING:  invalid input syntax for type bigint: "b"
 ?column? 
----------
(0 rows)

select 1 from t_collate_expr limit(to_hex('11') collate gbk_bin);
WARNING:  invalid input syntax for type bigint: "b"
 ?column? 
----------
(0 rows)

select 1 from t_collate_expr limit(to_hex('11') collate utf8mb4_unicode_ci);
WARNING:  invalid input syntax for type bigint: "b"
 ?column? 
----------
(0 rows)

select 1 from t_collate_expr limit(to_hex('11') collate gbk_bin collate utf8mb4_unicode_ci);  -- do not check collate
WARNING:  invalid input syntax for type bigint: "b"
 ?column? 
----------
(0 rows)

DROP TABLE t_collate_expr;
-- ä¸­æ–‡ const charset
SELECT CAST('é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST(_binary'é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST(_utf8mb4'é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST(_gbk'é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT _binary'é«˜æ–¯';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4'é«˜æ–¯';
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT _gbk'é«˜æ–¯';
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _gb18030'é«˜æ–¯';
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT _gbk X'e9ab98e696af';
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
(1 row)

SELECT CONVERT_TO(_utf8mb4'æ¥‚æ¨»æŸ‰', 'gbk');
   convert_to   
----------------
 \xe9ab98e696af
(1 row)

SELECT CONVERT_TO(_utf8mb4'é«˜æ–¯', 'gbk');
 convert_to 
------------
 \xb8dfcbb9
(1 row)

-- test datatype
-- -- ARRAY TEST
SELECT array[_utf8mb4'é«˜æ–¯'];
 array  
--------
 {é«˜æ–¯}
(1 row)

SELECT array[_gbk'é«˜æ–¯'];
  array   
----------
 {æ¥‚æ¨»æŸ‰}
(1 row)

create table tarray(a varchar[]);
insert into tarray values(array[_utf8mb4'é«˜æ–¯']);
insert into tarray values(array[_gbk'é«˜æ–¯']); -- ERROR
ERROR:  multi character set for datatype '_varchar' is not supported
CONTEXT:  referenced column: a
insert into tarray values(_utf8mb4'{é«˜æ–¯}'::varchar[]);
insert into tarray values(_gbk'{é«˜æ–¯}'::varchar[]); -- ERROR
ERROR:  multi character set for datatype '_varchar' is not supported
CONTEXT:  referenced column: a
drop table tarray;
-- -- JSON TEST
SELECT _utf8mb4'"é«˜æ–¯"'::json;
  json  
--------
 "é«˜æ–¯"
(1 row)

SELECT  _gbk'"é«˜æ–¯"'::json; -- ERROR
ERROR:  multi character set for datatype 'json' is not supported
create table tjson(a json);
insert into tjson values(_utf8mb4'"é«˜æ–¯"'::json);
insert into tjson values(_gbk'"é«˜æ–¯"'::json); -- ERROR
ERROR:  multi character set for datatype 'json' is not supported
drop table tjson;
-- -- XML
SELECT xmlelement(NAME a, _utf8mb4'é«˜æ–¯');
 xmlelement  
-------------
 <a>é«˜æ–¯</a>
(1 row)

SELECT xmlelement(NAME a, _gbk'é«˜æ–¯'); -- ERROR
ERROR:  multi character set for datatype 'xml' is not supported
create table txml(a xml);
insert into txml values(_utf8mb4'é«˜æ–¯'::xml);
insert into txml values(_gbk'é«˜æ–¯'::xml); -- ERROR
ERROR:  multi character set for datatype 'xml' is not supported
drop table txml;
-- -- tsvector
SELECT to_tsvector( _utf8mb4'é«˜æ–¯');
 to_tsvector 
-------------
 'é«˜æ–¯':1
(1 row)

SELECT to_tsvector(_gbk'é«˜æ–¯'); -- ERROR
ERROR:  multi character set for datatype 'tsvector' is not supported
create table ttsvector(a tsvector);
insert into ttsvector values(_utf8mb4'é«˜æ–¯'::tsvector);
insert into ttsvector values(_gbk'é«˜æ–¯'::tsvector); -- ERROR
ERROR:  multi character set for datatype 'tsvector' is not supported
drop table ttsvector;
-- -- hll
SELECT hll_hash_text( _utf8mb4'é«˜æ–¯');
    hll_hash_text     
----------------------
 -1822827932029241973
(1 row)

SELECT hll_hash_text(_gbk'é«˜æ–¯'); -- ERROR
ERROR:  multi character set for datatype 'hll_hashval' is not supported
-- test implicit type converion
select _gbk'111' collate "gbk_bin" = 111;
 ?column? 
----------
 t
(1 row)

-- -- ä¸­æ–‡ const compare
-- -- -- same charset & explicit collation
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_bin" and "utf8mb4_unicode_ci"
LINE 1: ...b4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE ut...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_general_ci = _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_general_ci" and "utf8mb4_unicode_ci"
LINE 1: ...DB' COLLATE utf8mb4_general_ci = _utf8mb4'é«˜æ–¯DB' COLLATE ut...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE "C"; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_bin" and "C"
LINE 1: ...b4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE "C...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE "zh_CN.utf8"; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_bin" and "zh_CN.utf8"
LINE 1: ...b4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE "z...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE "DEFAULT"; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_bin" and "default"
LINE 1: ...b4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _utf8mb4'é«˜æ–¯DB' COLLATE "D...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = 'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_bin" and "utf8mb4_unicode_ci"
LINE 1: ...T _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = 'é«˜æ–¯DB' COLLATE ut...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = 'é«˜æ–¯DB' COLLATE utf8mb4_bin;
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = 'é«˜æ–¯DB' COLLATE "C"; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_unicode_ci" and "C"
LINE 1: ...mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = 'é«˜æ–¯DB' COLLATE "C...
                                                             ^
SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = 'é«˜æ–¯DB' COLLATE "zh_CN.utf8"; -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_unicode_ci" and "zh_CN.utf8"
LINE 1: ...mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = 'é«˜æ–¯DB' COLLATE "z...
                                                             ^
SELECT _gbk'é«˜æ–¯db' COLLATE gbk_bin = _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci; -- ERROR
ERROR:  collation mismatch between explicit collations "gbk_bin" and "gbk_chinese_ci"
LINE 1: ...ELECT _gbk'é«˜æ–¯db' COLLATE gbk_bin = _gbk'é«˜æ–¯DB' COLLATE gb...
                                                             ^
SELECT _gb18030'é«˜æ–¯db' COLLATE gb18030_bin = _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci; -- ERROR
ERROR:  collation mismatch between collations "gb18030_bin" and "gbk_chinese_ci"
LINE 1: ...' COLLATE gb18030_bin = _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci;
                                                                       ^
-- -- -- same charset & implicit collation
SELECT _utf8mb4'é«˜æ–¯DB' = 'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

-- -- -- diff charset & explicit collation
SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _gbk'é«˜æ–¯DB' COLLATE gbk_bin;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _binary'é«˜æ–¯DB' COLLATE 'binary';
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _gbk'é«˜æ–¯DB' COLLATE gbk_bin;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _gb18030'é«˜æ–¯db' COLLATE gb18030_chinese_ci;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin;
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci = _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...bk_chinese_ci = _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci;
                                                                       ^
SELECT _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_bin"
LINE 1: ...LLATE gbk_chinese_ci = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin;
                                                                       ^
SELECT _gbk'é«˜æ–¯DB' COLLATE gbk_bin = _gb18030'é«˜æ–¯db' COLLATE gb18030_chinese_ci; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_chinese_ci"
LINE 1: ...LLATE gbk_bin = _gb18030'é«˜æ–¯db' COLLATE gb18030_chinese_ci;
                                                                       ^
SELECT _gbk'é«˜æ–¯DB' COLLATE gbk_bin = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...DB' COLLATE gbk_bin = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin;
                                                                      ^
-- -- -- diff charset & implicit collation
SELECT _utf8mb4'é«˜æ–¯DB' = _binary'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = _gbk'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯DB' = 'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯DB' = _utf8mb4'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯DB' = _binary'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _gbk'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB'; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: SELECT _gbk'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB';
                                               ^
SELECT _gb18030'é«˜æ–¯DB' = 'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gb18030'é«˜æ–¯DB' = _utf8mb4'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gb18030'é«˜æ–¯DB' = _binary'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT 'é«˜æ–¯DB' = _utf8mb4'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT 'é«˜æ–¯DB' = _gbk'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT 'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _binary'é«˜æ–¯DB' = _utf8mb4'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _binary'é«˜æ–¯DB' = _gbk'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _binary'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

-- -- -- explicit & implicit
SELECT _utf8mb4'é«˜æ–¯DB' = 'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci;
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = 'é«˜æ–¯DB' COLLATE utf8mb4_bin;
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = 'é«˜æ–¯DB' COLLATE "C";
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = 'é«˜æ–¯DB' COLLATE "zh_CN.utf8";
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DB' = _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci;
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = _gbk'é«˜æ–¯DB' COLLATE gbk_bin;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DB' = _gb18030'é«˜æ–¯db' COLLATE gb18030_chinese_ci;
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin;
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = 'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _binary'é«˜æ–¯DB'; -- binary compare, false
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _gbk'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = 'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _binary'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _gbk'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯DB' = _gb18030'é«˜æ–¯db' COLLATE gb18030_chinese_ci;
 ?column? 
----------
 t
(1 row)

SELECT _gbk'é«˜æ–¯DB' = _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin;
 ?column? 
----------
 t
(1 row)

SELECT _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci = 'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

SELECT _gbk'é«˜æ–¯DB' COLLATE gbk_bin = 'é«˜æ–¯DB';
 ?column? 
----------
 f
(1 row)

SELECT _gbk'é«˜æ–¯DB' COLLATE gbk_bin = _gb18030'é«˜æ–¯DB';
 ?column? 
----------
 t
(1 row)

-- -- ä¸­æ–‡ const concat
-- -- -- same charset & explicit collation
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE "C"); -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_unicode_ci" and "C"
LINE 1: ...mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE "C...
                                                             ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE "zh_CN.utf8"); -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_unicode_ci" and "zh_CN.utf8"
LINE 1: ...mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE "z...
                                                             ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci);
    concat    
--------------
 é«˜æ–¯DBé«˜æ–¯DB
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE utf8mb4_bin); -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_unicode_ci" and "utf8mb4_bin"
LINE 1: ...mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB' COLLATE ut...
                                                             ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , 'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci); -- ERROR
ERROR:  collation mismatch between explicit collations "utf8mb4_bin" and "utf8mb4_unicode_ci"
LINE 1: ...T(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , 'é«˜æ–¯DB' COLLATE ut...
                                                             ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , 'é«˜æ–¯DB' COLLATE utf8mb4_bin);
    concat    
--------------
 é«˜æ–¯DBé«˜æ–¯DB
(1 row)

-- -- -- same charset & implicit collation
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , 'é«˜æ–¯DB') result, pg_collation_for(result);
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_general_ci
(1 row)

-- -- -- diff charset & explicit collation
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gbk'é«˜æ–¯DB' COLLATE gbk_bin) result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci) result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _gbk'é«˜æ–¯DB' COLLATE gbk_bin) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci , _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci) result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...OLLATE gb18030_chinese_ci) result, pg_collation_for(result);
                                                                       ^
SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci , _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_bin"
LINE 1: ...æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result);
                                                                       ^
SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_bin , _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci) result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_chinese_ci"
LINE 1: ...OLLATE gb18030_chinese_ci) result, pg_collation_for(result);
                                                                       ^
SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_bin , _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result);
                                                                       ^
-- -- -- diff charset & implicit collation
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _binary'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' , 'é«˜æ–¯DB') result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' , _binary'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...æ–¯DB' , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result);
                                                                      ^
SELECT CONCAT(_gb18030'é«˜æ–¯DB' , 'é«˜æ–¯DB') result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_gb18030'é«˜æ–¯DB' , _binary'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT( _binary'é«˜æ–¯DB', _utf8mb4'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 \xe9ab98e696af4442é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT( _binary'é«˜æ–¯DB', 'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 \xe9ab98e696af4442é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

-- -- -- explicit & implicit
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , 'é«˜æ–¯DB' COLLATE "C") result, pg_collation_for(result);
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | "C"
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , 'é«˜æ–¯DB' COLLATE "zh_CN.utf8") result, pg_collation_for(result);
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | "zh_CN.utf8"
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , 'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci) result, pg_collation_for(result);
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , 'é«˜æ–¯DB' COLLATE utf8mb4_bin) result, pg_collation_for(result);
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'æ¥‚æ¨»æŸ‰DB' , _gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci) result, pg_collation_for(result);
      result      | pg_collation_for 
------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰db | gbk_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB' COLLATE gbk_bin) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | gbk_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci) result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | gb18030_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'æ¥‚æ¨»æŸ‰DB' , _gb18030'é«˜æ–¯db' COLLATE gb18030_chinese_ci) result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰db | gb18030_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | gb18030_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , 'é«˜æ–¯DB') result, pg_collation_for(result);
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _binary'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , 'é«˜æ–¯DB') result, pg_collation_for(result);
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _binary'é«˜æ–¯DB') result, pg_collation_for(result);
          result          | pg_collation_for 
--------------------------+------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_bin , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' , _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci) result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gb18030_chinese_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' , _gb18030'é«˜æ–¯DB' COLLATE gb18030_bin) result, pg_collation_for(result);
      result      | pg_collation_for 
------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gb18030_bin
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci , 'é«˜æ–¯DB') result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result);
      result      | pg_collation_for 
------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_bin , 'é«˜æ–¯DB') result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_bin
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB' COLLATE gbk_bin , _gb18030'é«˜æ–¯DB') result, pg_collation_for(result);
      result      | pg_collation_for 
------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gbk_bin
(1 row)

SELECT CONCAT(_binary'é«˜æ–¯DB', _utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci) result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 \xe9ab98e696af4442é«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(_binary'é«˜æ–¯DB' COLLATE 'binary', _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 \xe9ab98e696af4442é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

-- -- -- concat 3 args
SELECT CONCAT(_binary'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
             result             |  pg_collation_for  
--------------------------------+--------------------
 \xe9ab98e696af4442é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_binary'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) result, pg_collation_for(result);
               result               | pg_collation_for 
------------------------------------+------------------
 \xe9ab98e696af4442æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
         result         |  pg_collation_for  
------------------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) result, pg_collation_for(result);
         result         | pg_collation_for 
------------------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB', _binary'é«˜æ–¯DB') result, pg_collation_for(result);
             result             |  pg_collation_for  
--------------------------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci, _binary'é«˜æ–¯DB') result, pg_collation_for(result);
              result              |  pg_collation_for  
----------------------------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB\xe9ab98e696af4442 | gb18030_chinese_ci
(1 row)

SELECT CONCAT(_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB', _utf8mb4'é«˜æ–¯DB') result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_chinese_ci"
LINE 1: ...é«˜æ–¯DB', _utf8mb4'é«˜æ–¯DB') result, pg_collation_for(result);
                                                                       ^
SELECT CONCAT(_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB', _binary'é«˜æ–¯DB') result, pg_collation_for(result); -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_chinese_ci"
LINE 1: ...'é«˜æ–¯DB', _binary'é«˜æ–¯DB') result, pg_collation_for(result);
                                                                       ^
SELECT CONCAT(_gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci, _gbk'é«˜æ–¯DB', _utf8mb4'é«˜æ–¯DB') result, pg_collation_for(result);
         result         |  pg_collation_for  
------------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gb18030_chinese_ci
(1 row)

SELECT CONCAT(_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci, _binary'é«˜æ–¯DB') result, pg_collation_for(result);
               result               | pg_collation_for 
------------------------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB\xe9ab98e696af4442 | gbk_chinese_ci
(1 row)

-- -- -- const compare CONCAT
SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DB' = CONCAT(_gbk'é«˜æ–¯DB');
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB' = CONCAT(_gbk'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci);
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DB' COLLATE utf8mb4_bin = CONCAT(_gbk'é«˜æ–¯DB');
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB' COLLATE utf8mb4_bin = CONCAT(_gbk'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci);
 ?column? 
----------
 t
(1 row)

SELECT _utf8mb4'æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB' = CONCAT(_gbk'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB'); -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...'æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB' = CONCAT(_gbk'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB');
                                                                       ^
-- -- -- const CONCAT CONCAT
SELECT CONCAT(_utf8mb4'æ¥‚æ¨»æŸ‰DB', CONCAT(_gbk'é«˜æ–¯DB')) result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_utf8mb4'æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB', CONCAT(_gbk'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci)) result, pg_collation_for(result);
              result              |  pg_collation_for  
----------------------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | gb18030_chinese_ci
(1 row)

SELECT CONCAT(_utf8mb4'æ¥‚æ¨»æŸ‰DB' COLLATE utf8mb4_bin, CONCAT(_gbk'é«˜æ–¯DB')) result, pg_collation_for(result);
      result      | pg_collation_for 
------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB' COLLATE utf8mb4_bin, CONCAT(_gbk'é«˜æ–¯DB', _gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci)) result, pg_collation_for(result);
              result              | pg_collation_for 
----------------------------------+------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

-- -- -- const CONCAT with other diff DERIVATION
-- -- -- -- same charset
SELECT CONCAT('é«˜æ–¯DB', opengauss_version()) result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 é«˜æ–¯DB5.1.1 | utf8_general_ci
(1 row)

SELECT CONCAT(opengauss_version(), 'é«˜æ–¯DB') result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 5.1.1é«˜æ–¯DB | utf8_general_ci
(1 row)

SELECT CONCAT('é«˜æ–¯DB', 123) result, pg_collation_for(result);
  result   |  pg_collation_for  
-----------+--------------------
 é«˜æ–¯DB123 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(123, 'é«˜æ–¯DB') result, pg_collation_for(result);
  result   |  pg_collation_for  
-----------+--------------------
 123é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT('é«˜æ–¯DB', DATE '2023-05-01') result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 é«˜æ–¯DB2023-05-01 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(DATE '2023-05-01', 'é«˜æ–¯DB') result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 2023-05-01é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT('é«˜æ–¯DB', NULL) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(NULL, 'é«˜æ–¯DB') result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

-- -- -- -- diff charset
SELECT CONCAT(_gbk'é«˜æ–¯DB', opengauss_version()) result, pg_collation_for(result);
    result     | pg_collation_for 
---------------+------------------
 æ¥‚æ¨»æŸ‰DB5.1.1 | utf8_general_ci
(1 row)

SELECT CONCAT(opengauss_version(), _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
    result     | pg_collation_for 
---------------+------------------
 5.1.1æ¥‚æ¨»æŸ‰DB | utf8_general_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB', 123) result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 æ¥‚æ¨»æŸ‰DB123 | gbk_chinese_ci
(1 row)

SELECT CONCAT(123, _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 123æ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB', DATE '2023-05-01') result, pg_collation_for(result);
       result       | pg_collation_for 
--------------------+------------------
 æ¥‚æ¨»æŸ‰DB2023-05-01 | gbk_chinese_ci
(1 row)

SELECT CONCAT(DATE '2023-05-01', _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
       result       | pg_collation_for 
--------------------+------------------
 2023-05-01æ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(_gbk'é«˜æ–¯DB', NULL) result, pg_collation_for(result);
 result | pg_collation_for 
--------+------------------
        | gbk_chinese_ci
(1 row)

SELECT CONCAT(NULL, _gbk'é«˜æ–¯DB') result, pg_collation_for(result);
 result | pg_collation_for 
--------+------------------
        | gbk_chinese_ci
(1 row)

-- -- -- CONCAT CONCAT with other diff DERIVATION
-- -- -- -- same charset
SELECT CONCAT(CONCAT('é«˜æ–¯DB'), opengauss_version()) result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 é«˜æ–¯DB5.1.1 | utf8_general_ci
(1 row)

SELECT CONCAT(opengauss_version(), CONCAT('é«˜æ–¯DB')) result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 5.1.1é«˜æ–¯DB | utf8_general_ci
(1 row)

SELECT CONCAT(CONCAT('é«˜æ–¯DB'), 123) result, pg_collation_for(result);
  result   |  pg_collation_for  
-----------+--------------------
 é«˜æ–¯DB123 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(123, CONCAT('é«˜æ–¯DB')) result, pg_collation_for(result);
  result   |  pg_collation_for  
-----------+--------------------
 123é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT('é«˜æ–¯DB'), DATE '2023-05-01') result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 é«˜æ–¯DB2023-05-01 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(DATE '2023-05-01', CONCAT('é«˜æ–¯DB')) result, pg_collation_for(result);
      result      |  pg_collation_for  
------------------+--------------------
 2023-05-01é«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT('é«˜æ–¯DB'), NULL) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(NULL, CONCAT('é«˜æ–¯DB')) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

-- -- -- -- diff charset
SELECT CONCAT(CONCAT(_gbk'é«˜æ–¯DB'), opengauss_version()) result, pg_collation_for(result);
    result     | pg_collation_for 
---------------+------------------
 æ¥‚æ¨»æŸ‰DB5.1.1 | utf8_general_ci
(1 row)

SELECT CONCAT(opengauss_version(), CONCAT(_gbk'é«˜æ–¯DB')) result, pg_collation_for(result);
    result     | pg_collation_for 
---------------+------------------
 5.1.1æ¥‚æ¨»æŸ‰DB | utf8_general_ci
(1 row)

SELECT CONCAT(CONCAT(_gbk'é«˜æ–¯DB'), 123) result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 æ¥‚æ¨»æŸ‰DB123 | gbk_chinese_ci
(1 row)

SELECT CONCAT(123, CONCAT(_gbk'é«˜æ–¯DB')) result, pg_collation_for(result);
   result    | pg_collation_for 
-------------+------------------
 123æ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(CONCAT(_gbk'é«˜æ–¯DB'), DATE '2023-05-01') result, pg_collation_for(result);
       result       | pg_collation_for 
--------------------+------------------
 æ¥‚æ¨»æŸ‰DB2023-05-01 | gbk_chinese_ci
(1 row)

SELECT CONCAT(DATE '2023-05-01', CONCAT(_gbk'é«˜æ–¯DB')) result, pg_collation_for(result);
       result       | pg_collation_for 
--------------------+------------------
 2023-05-01æ¥‚æ¨»æŸ‰DB | gbk_chinese_ci
(1 row)

SELECT CONCAT(CONCAT(_gbk'é«˜æ–¯DB'), NULL) result, pg_collation_for(result);
 result | pg_collation_for 
--------+------------------
        | gbk_chinese_ci
(1 row)

SELECT CONCAT(NULL, CONCAT(_gbk'é«˜æ–¯DB')) result, pg_collation_for(result);
 result | pg_collation_for 
--------+------------------
        | gbk_chinese_ci
(1 row)

-- -- -- CONCAT NUMBERS
SELECT CONCAT('100', 200) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
 100200 | utf8mb4_general_ci
(1 row)

SELECT CONCAT('100', date'2021-01-01') result, pg_collation_for(result);
    result     |  pg_collation_for  
---------------+--------------------
 1002021-01-01 | utf8mb4_general_ci
(1 row)

SELECT CONCAT('100', NULL) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT('100', NULL::varbinary(16)) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT('100', NULL::text) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(100, 200) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
 100200 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(100, date'2021-01-01') result, pg_collation_for(result);
    result     |  pg_collation_for  
---------------+--------------------
 1002021-01-01 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(100, NULL) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(100, NULL::varbinary(16)) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(100, NULL::text) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(NULL, NULL::varbinary(16)) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(NULL, NULL::text) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT(100, NULL), '100') result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT(100, NULL::varbinary(16)), '100') result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT(100, NULL::text), '100') result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT(100, NULL), 100) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT(100, NULL::varbinary(16)), 100) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

SELECT CONCAT(CONCAT(100, NULL::text), 100) result, pg_collation_for(result);
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_general_ci
(1 row)

-- -- ä¸­æ–‡ with column charset
CREATE TABLE t_diff_charset_columns(
    futf8_bin varchar(16) CHARSET utf8mb4 COLLATE 'utf8mb4_bin',
    futf8_uni varchar(16) CHARSET utf8mb4 COLLATE 'utf8mb4_unicode_ci',
    futf8_gen varchar(16) CHARSET utf8mb4 COLLATE 'utf8mb4_general_ci',
    fgbk_bin varchar(16) CHARSET gbk COLLATE 'gbk_bin',
    fgbk_chi varchar(16) CHARSET gbk COLLATE 'gbk_chinese_ci',
    fgb18030_bin varchar(16) CHARSET gb18030 COLLATE 'gb18030_bin',
    fgb18030_chi varchar(16) CHARSET gb18030 COLLATE 'gb18030_chinese_ci',
    fbin varbinary(16),
    fblob blob,
    fbit bit varying(64)
);
INSERT INTO t_diff_charset_columns(futf8_bin, futf8_uni, futf8_gen, fgbk_bin, fgbk_chi, fgb18030_bin, fgb18030_chi, fbin, fblob, fbit)
    VALUES('é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'E9AB98E696AF', B'111010011010101110011000111001101001011010101111');
-- -- test character length
SELECT futf8_bin,
       futf8_uni,
       fgbk_bin,
       fgbk_chi,
       fgb18030_bin,
       fgb18030_chi,
       fbin FROM t_diff_charset_columns;
 futf8_bin | futf8_uni | fgbk_bin | fgbk_chi | fgb18030_bin | fgb18030_chi |        fbin        
-----------+-----------+----------+----------+--------------+--------------+--------------------
 é«˜æ–¯DB    | é«˜æ–¯db    | é«˜æ–¯DB   | é«˜æ–¯db   | é«˜æ–¯DB       | é«˜æ–¯db       | \xe9ab98e696af4442
(1 row)

SELECT char_length(futf8_bin),
       char_length(futf8_uni),
       char_length(fgbk_bin),
       char_length(fgbk_chi),
       char_length(fgb18030_bin),
       char_length(fgb18030_chi),
       length(fbin) FROM t_diff_charset_columns;
 char_length | char_length | char_length | char_length | char_length | char_length | length 
-------------+-------------+-------------+-------------+-------------+-------------+--------
           4 |           4 |           4 |           4 |           4 |           4 |      8
(1 row)

SELECT lengthb(futf8_bin),
       lengthb(futf8_uni),
       lengthb(fgbk_bin),
       lengthb(fgbk_chi),
       lengthb(fgb18030_bin),
       lengthb(fgb18030_chi),
       length(fbin) FROM t_diff_charset_columns;
 lengthb | lengthb | lengthb | lengthb | lengthb | lengthb | length 
---------+---------+---------+---------+---------+---------+--------
       8 |       8 |       6 |       6 |       6 |       6 |      8
(1 row)

-- test prefixkey index
CREATE INDEX idx_prefixkey_futf8_bin on t_diff_charset_columns (futf8_bin(2) text_pattern_ops);
set enable_seqscan=off;
EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin LIKE 'é«˜æ–¯%';
                             QUERY PLAN                             
--------------------------------------------------------------------
 Index Scan using idx_prefixkey_futf8_bin on t_diff_charset_columns
   Index Cond: ((futf8_bin)::text = 'é«˜æ–¯'::text)
   Filter: ((futf8_bin)::text ~~ 'é«˜æ–¯%'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin LIKE 'é«˜æ–¯%';
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin = 'é«˜æ–¯DB';
                             QUERY PLAN                             
--------------------------------------------------------------------
 Index Scan using idx_prefixkey_futf8_bin on t_diff_charset_columns
   Index Cond: ((futf8_bin)::text = 'é«˜æ–¯'::text)
   Filter: ((futf8_bin)::text = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin = 'é«˜æ–¯DB';
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

CREATE INDEX idx_prefixkey_fgbk_bin on t_diff_charset_columns (fgbk_bin(2) text_pattern_ops);
EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin LIKE 'é«˜æ–¯%';
                            QUERY PLAN                             
-------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgbk_bin on t_diff_charset_columns
   Index Cond: ((fgbk_bin)::text = 'é«˜æ–¯'::text)
   Filter: ((fgbk_bin)::text ~~ 'é«˜æ–¯%'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin LIKE 'é«˜æ–¯%';
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin = 'é«˜æ–¯DB';
                            QUERY PLAN                             
-------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgbk_bin on t_diff_charset_columns
   Index Cond: ((fgbk_bin)::text = 'é«˜æ–¯'::text)
   Filter: ((fgbk_bin)::text = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin = 'é«˜æ–¯DB';
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

CREATE INDEX idx_prefixkey_fgb18030_bin on t_diff_charset_columns (fgb18030_bin(2) text_pattern_ops);
EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin LIKE 'é«˜æ–¯%';
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgb18030_bin on t_diff_charset_columns
   Index Cond: ((fgb18030_bin)::text = 'é«˜æ–¯'::text)
   Filter: ((fgb18030_bin)::text ~~ 'é«˜æ–¯%'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin LIKE 'é«˜æ–¯%';
 fgb18030_bin 
--------------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin = 'é«˜æ–¯DB';
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgb18030_bin on t_diff_charset_columns
   Index Cond: ((fgb18030_bin)::text = 'é«˜æ–¯'::text)
   Filter: ((fgb18030_bin)::text = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin = 'é«˜æ–¯DB';
 fgb18030_bin 
--------------
 é«˜æ–¯DB
(1 row)

reset enable_seqscan;
-- -- COLUMN collation only
SELECT futf8_bin COLLATE gbk_chinese_ci FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT futf8_bin COLLATE gbk_chinese_ci FROM t_diff_charset_...
                         ^
SELECT futf8_bin COLLATE 'binary' FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT futf8_bin COLLATE 'binary' FROM t_diff_charset_column...
                         ^
SELECT futf8_bin COLLATE "zh_CN.utf8" FROM t_diff_charset_columns; -- support origin collation
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

SELECT futf8_bin COLLATE "C" FROM t_diff_charset_columns; -- support origin collation
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

SELECT fgbk_bin COLLATE gbk_chinese_ci FROM t_diff_charset_columns;
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

SELECT fgbk_bin COLLATE 'binary' FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "GBK"
LINE 1: SELECT fgbk_bin COLLATE 'binary' FROM t_diff_charset_columns...
                        ^
SELECT fgbk_bin COLLATE "zh_CN.gbk" FROM t_diff_charset_columns; -- ERROR
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

SELECT fgbk_bin COLLATE "C" FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GBK" which is different from server_encoding
LINE 1: SELECT fgbk_bin COLLATE "C" FROM t_diff_charset_columns;
                        ^
SELECT fgb18030_bin COLLATE gb18030_chinese_ci FROM t_diff_charset_columns;
 fgb18030_bin 
--------------
 é«˜æ–¯DB
(1 row)

SELECT fgb18030_bin COLLATE gbk_chinese_ci FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "GB18030"
LINE 1: SELECT fgb18030_bin COLLATE gbk_chinese_ci FROM t_diff_chars...
                            ^
SELECT fgb18030_bin COLLATE 'binary' FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "GB18030"
LINE 1: SELECT fgb18030_bin COLLATE 'binary' FROM t_diff_charset_col...
                            ^
SELECT fgb18030_bin COLLATE "zh_CN.gb18030" FROM t_diff_charset_columns; -- ERROR
 fgb18030_bin 
--------------
 é«˜æ–¯DB
(1 row)

SELECT fgb18030_bin COLLATE "C" FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GB18030" which is different from server_encoding
LINE 1: SELECT fgb18030_bin COLLATE "C" FROM t_diff_charset_columns;
                            ^
SELECT fbin COLLATE gbk_chinese_ci FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for binary type
LINE 1: SELECT fbin COLLATE gbk_chinese_ci FROM t_diff_charset_colum...
                    ^
CONTEXT:  referenced column: fbin
SELECT fbin COLLATE 'binary' FROM t_diff_charset_columns;
        fbin        
--------------------
 \xe9ab98e696af4442
(1 row)

SELECT fbin COLLATE "zh_CN.utf8" FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "zh_CN.utf8" is not valid for binary type
LINE 1: SELECT fbin COLLATE "zh_CN.utf8" FROM t_diff_charset_columns...
                    ^
CONTEXT:  referenced column: fbin
SELECT fbin COLLATE "C" FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "C" is not valid for binary type
LINE 1: SELECT fbin COLLATE "C" FROM t_diff_charset_columns;
                    ^
CONTEXT:  referenced column: fbin
SELECT fblob COLLATE gbk_chinese_ci FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for binary type
LINE 1: SELECT fblob COLLATE gbk_chinese_ci FROM t_diff_charset_colu...
                     ^
CONTEXT:  referenced column: fblob
SELECT fblob COLLATE 'binary' FROM t_diff_charset_columns;
    fblob     
--------------
 E9AB98E696AF
(1 row)

SELECT fblob COLLATE "zh_CN.utf8" FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "zh_CN.utf8" is not valid for binary type
LINE 1: SELECT fblob COLLATE "zh_CN.utf8" FROM t_diff_charset_column...
                     ^
CONTEXT:  referenced column: fblob
SELECT fblob COLLATE "C" FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "C" is not valid for binary type
LINE 1: SELECT fblob COLLATE "C" FROM t_diff_charset_columns;
                     ^
CONTEXT:  referenced column: fblob
SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE gbk_chinese_ci FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE gbk_chinese_c...
                                               ^
SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE 'binary' FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE 'binary' FROM...
                                               ^
SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE "zh_CN.utf8" FROM t_diff_charset_columns; -- support origin collation
 futf8_uni 
-----------
 é«˜æ–¯db
(1 row)

SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE "C" FROM t_diff_charset_columns; -- support origin collation
 futf8_uni 
-----------
 é«˜æ–¯db
(1 row)

SELECT (futf8_uni COLLATE utf8mb4_bin) COLLATE utf8mb4_unicode_ci FROM t_diff_charset_columns;
 futf8_uni 
-----------
 é«˜æ–¯db
(1 row)

SELECT (fgbk_chi COLLATE "C") COLLATE utf8mb4_bin FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GBK" which is different from server_encoding
LINE 1: SELECT (fgbk_chi COLLATE "C") COLLATE utf8mb4_bin FROM t_dif...
                         ^
SELECT (fgbk_chi COLLATE "C") COLLATE gbk_chinese_ci FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "C" is not valid for CHARACTER SET "GBK" which is different from server_encoding
LINE 1: SELECT (fgbk_chi COLLATE "C") COLLATE gbk_chinese_ci FROM t_...
                         ^
SELECT (fblob COLLATE "binary") COLLATE utf8mb4_bin FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "utf8mb4_bin" is not valid for binary type
LINE 1: SELECT (fblob COLLATE "binary") COLLATE utf8mb4_bin FROM t_d...
                                        ^
CONTEXT:  referenced column: fblob
SELECT fbit COLLATE 'binary' FROM t_diff_charset_columns; -- ERROR
ERROR:  collations are not supported by type bit varying
LINE 1: SELECT fbit COLLATE 'binary' FROM t_diff_charset_columns;
                    ^
CONTEXT:  referenced column: fbit
-- -- COLUMN compare COLUMN
-- -- -- same charset & implicit collation
SELECT futf8_bin = futf8_uni, futf8_uni = futf8_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT fgbk_bin = fgbk_chi, fgbk_chi = fgbk_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT fgb18030_bin = fgb18030_chi, fgb18030_chi = fgb18030_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT futf8_gen = futf8_uni, futf8_uni = futf8_gen FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_gen > futf8_uni, futf8_uni > futf8_gen FROM t_diff_charset_columns; -- ERROR
ERROR:  could not determine which collation to use for string comparison
HINT:  Use the COLLATE clause to set the collation explicitly.
-- -- -- diff charset & implicit collation
SELECT futf8_bin = fgbk_bin, fgbk_bin = futf8_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_bin = fgbk_chi, fgbk_chi = futf8_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT futf8_bin = fgb18030_bin, fgb18030_bin = futf8_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_bin = fgb18030_chi, fgb18030_chi = futf8_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT futf8_uni = fgbk_bin, fgbk_bin = futf8_uni FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_uni = fgbk_chi, fgbk_chi = futf8_uni FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_uni = fgb18030_bin, fgb18030_bin = futf8_uni FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_uni = fgb18030_chi, fgb18030_chi = futf8_uni FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT fgbk_bin = fgb18030_bin, fgb18030_bin = fgbk_bin FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...30_bin, fgb18030_bin = fgbk_bin FROM t_diff_charset_columns;
                                                                       ^
SELECT fgbk_bin = fgb18030_chi, fgb18030_chi = fgbk_bin FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_chinese_ci"
LINE 1: ...30_chi, fgb18030_chi = fgbk_bin FROM t_diff_charset_columns;
                                                                       ^
SELECT fgbk_chi = fgb18030_chi, fgb18030_chi = fgbk_chi FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...30_chi, fgb18030_chi = fgbk_chi FROM t_diff_charset_columns;
                                                                       ^
-- -- -- with binary & implicit collation
SELECT futf8_bin = fbin, fbin = futf8_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

SELECT futf8_bin = fblob, fblob = futf8_bin FROM t_diff_charset_columns; -- NOT SUPPORTED
ERROR:  invalid hexadecimal digit: "é"
SELECT futf8_uni = fbin, fbin = futf8_uni FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT futf8_uni = fblob, fblob = futf8_uni FROM t_diff_charset_columns; -- NOT SUPPORTED
ERROR:  invalid hexadecimal digit: "é"
SELECT fgbk_bin = fbin, fbin = fgbk_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT fgbk_bin = fblob, fblob = fgbk_bin FROM t_diff_charset_columns; -- NOT SUPPORTED
ERROR:  invalid hexadecimal digit: "¸"
SELECT fgb18030_bin = fbin, fbin = fgb18030_bin FROM t_diff_charset_columns;
 ?column? | ?column? 
----------+----------
 f        | f
(1 row)

SELECT fgb18030_bin = fblob, fblob = fgb18030_bin FROM t_diff_charset_columns; -- NOT SUPPORTED
ERROR:  invalid hexadecimal digit: "¸"
-- -- COLUMN concat COLUMN
-- -- -- same charset & implicit collation
SELECT CONCAT(futf8_bin, futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CONCAT(fgbk_bin, fgbk_chi) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯db | gbk_bin
(1 row)

SELECT CONCAT(fgb18030_bin, fgb18030_chi) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯db | gb18030_bin
(1 row)

SELECT CONCAT(futf8_gen, futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns; -- result is _bin
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯dbé«˜æ–¯db | 
(1 row)

-- -- -- diff charset & implicit collation
SELECT CONCAT(futf8_bin, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CONCAT(futf8_bin, fgbk_chi) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CONCAT(futf8_bin, fgb18030_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CONCAT(futf8_bin, fgb18030_chi) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CONCAT(futf8_uni, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, fgbk_chi) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, fgb18030_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, fgb18030_chi) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(fgbk_bin, fgb18030_bin) result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
SELECT CONCAT(fgbk_bin, fgb18030_chi) result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_chinese_ci"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
SELECT CONCAT(fgbk_chi, fgb18030_chi) result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- -- with binary & implicit collation
SELECT CONCAT(futf8_bin, fbin) result, pg_collation_for(result) FROM t_diff_charset_columns;
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(futf8_bin, fblob) result, pg_collation_for(result) FROM t_diff_charset_columns;
       result       |  pg_collation_for  
--------------------+--------------------
 é«˜æ–¯DBE9AB98E696AF | utf8mb4_general_ci
(1 row)

SELECT CONCAT(futf8_uni, fbin) result, pg_collation_for(result) FROM t_diff_charset_columns;
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯db\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(futf8_uni, fblob) result, pg_collation_for(result) FROM t_diff_charset_columns;
       result       |  pg_collation_for  
--------------------+--------------------
 é«˜æ–¯dbE9AB98E696AF | utf8mb4_general_ci
(1 row)

SELECT CONCAT(fgbk_bin, fbin) result, pg_collation_for(result) FROM t_diff_charset_columns;
        result         |  pg_collation_for  
-----------------------+--------------------
 Ë¹DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(fgbk_bin, fblob) result, pg_collation_for(result) FROM t_diff_charset_columns;
     result      |  pg_collation_for  
-----------------+--------------------
 Ë¹DBE9AB98E696AF | utf8mb4_general_ci
(1 row)

SELECT CONCAT(fgb18030_bin, fbin) result, pg_collation_for(result) FROM t_diff_charset_columns;
        result         |  pg_collation_for  
-----------------------+--------------------
 Ë¹DB\xe9ab98e696af4442 | utf8mb4_general_ci
(1 row)

SELECT CONCAT(fgb18030_bin, fblob) result, pg_collation_for(result) FROM t_diff_charset_columns;
     result      |  pg_collation_for  
-----------------+--------------------
 Ë¹DBE9AB98E696AF | utf8mb4_general_ci
(1 row)

SELECT CONCAT(fbin, fblob) result, pg_collation_for(result) FROM t_diff_charset_columns;
             result             |  pg_collation_for  
--------------------------------+--------------------
 \xe9ab98e696af4442E9AB98E696AF | utf8mb4_general_ci
(1 row)

-- -- concat column and @uservar
set enable_set_variable_b_format=on;
-- -- -- string var utf8mb4_general_ci
set @var_utf8_uni = 'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci; -- should support
SELECT pg_collation_for(@var_utf8_uni);
  pg_collation_for  
--------------------
 utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_gen, @var_utf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns; -- null collation
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯dbé«˜æ–¯DB | 
(1 row)

SELECT CONCAT(fgbk_bin, @var_utf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns; -- utf8mb4_unicode_ci
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(@var_utf8_uni, futf8_bin) result, pg_collation_for(result) FROM t_diff_charset_columns; -- _bin
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_bin
(1 row)

-- -- -- string var gbk_chinese_ci
set @var_gbk_chi = _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci; -- should support
SELECT pg_collation_for(@var_gbk_chi);
 pg_collation_for 
------------------
 gbk_chinese_ci
(1 row)

SELECT CONCAT(futf8_uni, @var_gbk_chi) result, pg_collation_for(result) FROM t_diff_charset_columns; -- futf8_uni
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(@var_gbk_chi, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns; -- fgbk_bin
     result     | pg_collation_for 
----------------+------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_bin
(1 row)

-- -- -- number var
set @var_num = 5.0;
SELECT CONCAT(futf8_bin, @var_num) result, pg_collation_for(result) FROM t_diff_charset_columns; -- futf8_bin
 result  | pg_collation_for 
---------+------------------
 é«˜æ–¯DB5 | utf8mb4_bin
(1 row)

SELECT CONCAT(@var_num, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns; -- fgbk_bin
 result  | pg_collation_for 
---------+------------------
 5é«˜æ–¯DB | gbk_bin
(1 row)

-- -- -- varbinary var
set @var_binary = _binary'é«˜æ–¯DB';
SELECT CONCAT(futf8_bin, @var_binary) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(@var_binary, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
  result   |  pg_collation_for  
-----------+--------------------
 é«˜æ–¯DBË¹DB | utf8mb4_general_ci
(1 row)

-- -- concat column and bind parameter
-- -- -- -- PBE with implicit collation
PREPARE test_merge_collation(text) AS
SELECT CONCAT(futf8_uni, $1) result, pg_collation_for(result) FROM t_diff_charset_columns;
-- -- -- -- -- _utf8mb4
SET @pbe_param1 = _utf8mb4'é«˜æ–¯DB';
EXECUTE test_merge_collation(@pbe_param1); -- futf8_uni collation has priority
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

EXECUTE test_merge_collation(_utf8mb4'é«˜æ–¯DB'); -- same as above
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, _utf8mb4'é«˜æ–¯DB') result, pg_collation_for(result) FROM t_diff_charset_columns; -- same as above
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

-- -- -- -- -- _gbk
SET @pbe_param1 = _gbk'é«˜æ–¯DB';
EXECUTE test_merge_collation(@pbe_param1); -- _gbk noneffective, futf8_uni collation has priority,  _gbk'é«˜æ–¯DB' will not convert to utf8mb4
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

EXECUTE test_merge_collation(_gbk'é«˜æ–¯DB'); -- same as above
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, _gbk'é«˜æ–¯DB') result, pg_collation_for(result) FROM t_diff_charset_columns; -- same as above
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci
(1 row)

-- -- -- -- -- _utf8mb4 utf8mb4_unicode_ci
SET @pbe_param1 = _utf8mb4'é«˜æ–¯DB' collate utf8mb4_bin;
EXECUTE test_merge_collation(@pbe_param1); -- explicit noneffective, futf8_uni collation has priority
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

EXECUTE test_merge_collation(_utf8mb4'é«˜æ–¯DB' collate utf8mb4_unicode_ci); -- explicit noneffective, futf8_uni collation has priority
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

DEALLOCATE test_merge_collation;
-- -- -- -- PBE with explicit collation,
PREPARE test_merge_collation(text) AS
SELECT CONCAT($1 collate utf8mb4_unicode_ci, futf8_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
-- -- -- -- -- _utf8mb4
SET @pbe_param1 = _utf8mb4'é«˜æ–¯DB';
EXECUTE test_merge_collation(@pbe_param1);
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

EXECUTE test_merge_collation(_utf8mb4'é«˜æ–¯DB'); -- utf8mb4_unicode_ci
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

-- -- -- -- -- _gbk
SET @pbe_param1 = _gbk'é«˜æ–¯DB';
EXECUTE test_merge_collation(@pbe_param1);
     result     |  pg_collation_for  
----------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

EXECUTE test_merge_collation(_gbk'é«˜æ–¯DB'); -- utf8mb4_unicode_ci
     result     |  pg_collation_for  
----------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

DEALLOCATE test_merge_collation;
-- -- -- -- PBE with explicit collation,
PREPARE test_merge_collation(text) AS
SELECT CONCAT($1 collate gbk_chinese_ci, futf8_bin) result, pg_collation_for(result) FROM t_diff_charset_columns; -- $1 use collation_connection, ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 2: SELECT CONCAT($1 collate gbk_chinese_ci, futf8_bin) result, ...
                         ^
-- -- -- -- test revalidate
SELECT fgbk_chi result FROM t_diff_charset_columns WHERE fgbk_chi=_utf8mb4'é«˜æ–¯db'; -- 1 rows
 result 
--------
 é«˜æ–¯db
(1 row)

PREPARE test_revalidate(text) AS
SELECT fgbk_chi result FROM t_diff_charset_columns WHERE fgbk_chi=$1;
EXECUTE test_revalidate(_utf8mb4'é«˜æ–¯db'); -- fgbk_chi collation has priority, 1 rows
 result 
--------
 é«˜æ–¯db
(1 row)

ALTER INDEX idx_prefixkey_futf8_bin UNUSABLE;
EXECUTE test_revalidate(_utf8mb4'é«˜æ–¯db'); -- fgbk_chi collation has priority, 1 rows
 result 
--------
 é«˜æ–¯db
(1 row)

SET NAMES utf8mb4 COLLATE utf8mb4_bin;
EXECUTE test_revalidate(_utf8mb4'é«˜æ–¯db'); -- fgbk_chi collation has priority, 1 rows
 result 
--------
 é«˜æ–¯db
(1 row)

ALTER INDEX idx_prefixkey_futf8_bin REBUILD;
EXECUTE test_revalidate(_utf8mb4'é«˜æ–¯db'); -- fgbk_chi collation has priority, 1 rows
 result 
--------
 é«˜æ–¯db
(1 row)

SET NAMES gbk COLLATE gbk_bin;
EXECUTE test_revalidate(_utf8mb4'é«˜æ–¯db'); -- fgbk_chi collation has priority, 1 rows
 result 
--------
 ¸ßË¹db
(1 row)

ALTER INDEX idx_prefixkey_futf8_bin REBUILD;
EXECUTE test_revalidate(_utf8mb4'é«˜æ–¯db'); -- fgbk_chi collation has priority, 1 rows
 result 
--------
 ¸ßË¹db
(1 row)

DEALLOCATE test_revalidate;
SET NAMES utf8mb4;
-- -- concat column and PROCEDURE parameter with CURSOR
-- -- -- implicit collation && string
create or replace procedure merge_collation_func(p1 text, p2 text)
as
DECLARE
    concat_res text;
    collation_res text;
    concat_res_assign varchar(64);
    CURSOR c1 IS
        SELECT CONCAT(p1, p2) result, pg_collation_for(result);
begin
    OPEN c1;
    LOOP
        FETCH c1 INTO concat_res, collation_res;
        EXIT;
    END LOOP;
    CLOSE c1;
    concat_res_assign = concat_res;
    set @concat_res = concat_res;
    set @collation_res = collation_res;
    set @concat_res_assign = concat_res_assign;
end;
/
CALL merge_collation_func('é«˜æ–¯DB', _gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation,@concat_res_assign; -- utf8mb4_general_ci
  @concat_res   |   @collation_res   |   real_collation   | @concat_res_assign 
----------------+--------------------+--------------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci | utf8mb4_general_ci | é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB
(1 row)

CALL merge_collation_func(_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation,@concat_res_assign; -- utf8mb4_general_ci
   @concat_res    |   @collation_res   |   real_collation   | @concat_res_assign 
------------------+--------------------+--------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci | utf8mb4_general_ci | æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB
(1 row)

CALL merge_collation_func(_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB' collate gbk_chinese_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation,@concat_res_assign; -- utf8mb4_general_ci
   @concat_res    |   @collation_res   |   real_collation   | @concat_res_assign 
------------------+--------------------+--------------------+--------------------
 æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci | utf8mb4_general_ci | æ¥‚æ¨»æŸ‰DBæ¥‚æ¨»æŸ‰DB
(1 row)

DROP procedure merge_collation_func;
-- -- -- implicit collation && string
create or replace procedure merge_collation_func(p1 text)
as
DECLARE
    concat_res text;
    collation_res text;
    CURSOR c1 IS
        SELECT CONCAT(futf8_uni, p1) result, pg_collation_for(result) FROM t_diff_charset_columns;
begin
    OPEN c1;
    LOOP
        FETCH c1 INTO concat_res, collation_res;
        EXIT;
    END LOOP;
    CLOSE c1;
    set @concat_res = concat_res;
    set @collation_res = collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- conflict
 @concat_res  | @collation_res |   real_collation   
--------------+----------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB |                | utf8mb4_general_ci
(1 row)

CALL merge_collation_func('é«˜æ–¯DB' collate utf8mb4_general_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- conflict
 @concat_res  | @collation_res |   real_collation   
--------------+----------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB |                | utf8mb4_general_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation;; -- conflict
  @concat_res   | @collation_res |   real_collation   
----------------+----------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB |                | utf8mb4_general_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB' collate gbk_chinese_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation;; -- conflict
  @concat_res   | @collation_res |   real_collation   
----------------+----------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB |                | utf8mb4_general_ci
(1 row)

DROP procedure merge_collation_func;
-- -- -- implicit collation && string
create or replace procedure merge_collation_func(p1 text)
as
DECLARE
    concat_res text;
    collation_res text;
    CURSOR c1 IS
        SELECT CONCAT(p1, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
begin
    OPEN c1;
    LOOP
        FETCH c1 INTO concat_res, collation_res;
        EXIT;
    END LOOP;
    CLOSE c1;
    set @concat_res = concat_res;
    set @collation_res = collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- utf8mb4_general_ci
 @concat_res  |   @collation_res   |   real_collation   
--------------+--------------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_general_ci | utf8mb4_general_ci
(1 row)

CALL merge_collation_func('é«˜æ–¯DB' collate utf8mb4_general_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- utf8mb4_general_ci
 @concat_res  |   @collation_res   |   real_collation   
--------------+--------------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_general_ci | utf8mb4_general_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- utf8mb4_general_ci
  @concat_res   |   @collation_res   |   real_collation   
----------------+--------------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | utf8mb4_general_ci | utf8mb4_general_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB' collate gbk_chinese_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- utf8mb4_general_ci
  @concat_res   |   @collation_res   |   real_collation   
----------------+--------------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | utf8mb4_general_ci | utf8mb4_general_ci
(1 row)

DROP procedure merge_collation_func;
-- -- -- explicit collation && string
create or replace procedure merge_collation_func(p1 text)
as
DECLARE
    concat_res text;
    collation_res text;
    CURSOR c1 IS
        SELECT CONCAT(p1, fgbk_bin collate gbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
begin
    OPEN c1;
    LOOP
        FETCH c1 INTO concat_res, collation_res;
        EXIT;
    END LOOP;
    CLOSE c1;
    set @concat_res = concat_res;
    set @collation_res = collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
 @concat_res  | @collation_res |   real_collation   
--------------+----------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | gbk_bin        | utf8mb4_general_ci
(1 row)

CALL merge_collation_func('é«˜æ–¯DB' collate utf8mb4_general_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
 @concat_res  | @collation_res |   real_collation   
--------------+----------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | gbk_bin        | utf8mb4_general_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
  @concat_res   | @collation_res |   real_collation   
----------------+----------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_bin        | utf8mb4_general_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB' collate gbk_chinese_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
  @concat_res   | @collation_res |   real_collation   
----------------+----------------+--------------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_bin        | utf8mb4_general_ci
(1 row)

DROP procedure merge_collation_func;
-- -- -- implicit collation && int
create or replace procedure merge_collation_func(p1 int)
as
DECLARE
    concat_res text;
    collation_res text;
    CURSOR c1 IS
        SELECT CONCAT(fgbk_bin, p1) result, pg_collation_for(result) FROM t_diff_charset_columns;
begin
    OPEN c1;
    LOOP
        FETCH c1 INTO concat_res, collation_res;
        EXIT;
    END LOOP;
    CLOSE c1;
    set @concat_res = concat_res;
    set @collation_res = collation_res;
end;
/
CALL merge_collation_func(100);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
 @concat_res | @collation_res |   real_collation   
-------------+----------------+--------------------
 é«˜æ–¯DB100   | gbk_bin        | utf8mb4_general_ci
(1 row)

DROP procedure merge_collation_func;
-- -- -- explicit collation && string
create or replace procedure merge_collation_func(p1 text)
as
DECLARE
    concat_res text;
    collation_res text;
    CURSOR c1 IS
        SELECT CONCAT(futf8_uni, p1 COLLATE gbk_chinese_ci) result, pg_collation_for(result) FROM t_diff_charset_columns;
begin
    OPEN c1;
    LOOP
        FETCH c1 INTO concat_res, collation_res;
        EXIT;
    END LOOP;
    CLOSE c1;
    set @concat_res = concat_res;
    set @collation_res = collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB'); -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_uni, p1 COLLATE gbk_chinese_ci)result, p...
                                    ^
QUERY:  SELECT CONCAT(futf8_uni, p1 COLLATE gbk_chinese_ci)result, pg_collation_for(result)FROM t_diff_charset_columns
CONTEXT:  PL/pgSQL function merge_collation_func(text) line 7 at OPEN
DROP procedure merge_collation_func;
-- -- concat column and PROCEDURE parameter with select into
-- -- -- implicit collation
create or replace procedure merge_collation_func(p1 text)
as
begin
    SELECT CONCAT(futf8_uni, p1) result, pg_collation_for(result) FROM t_diff_charset_columns into @concat_res,@collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- conflict
 @concat_res  |   @collation_res   |   real_collation   
--------------+--------------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci | utf8mb4_unicode_ci
(1 row)

CALL merge_collation_func('é«˜æ–¯DB' collate utf8mb4_general_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- conflict
 @concat_res  |   @collation_res   |   real_collation   
--------------+--------------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci | utf8mb4_unicode_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- utf8mb4_unicode_ci
  @concat_res   |   @collation_res   |   real_collation   
----------------+--------------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci | utf8mb4_unicode_ci
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB' collate gbk_chinese_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- utf8mb4_unicode_ci
  @concat_res   |   @collation_res   |   real_collation   
----------------+--------------------+--------------------
 é«˜æ–¯dbæ¥‚æ¨»æŸ‰DB | utf8mb4_unicode_ci | utf8mb4_unicode_ci
(1 row)

DROP procedure merge_collation_func;
-- -- -- implicit collation
create or replace procedure merge_collation_func(p1 text)
as
begin
    SELECT CONCAT(p1, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns into @concat_res,@collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
 @concat_res  | @collation_res | real_collation 
--------------+----------------+----------------
 é«˜æ–¯DBé«˜æ–¯DB | gbk_bin        | gbk_bin
(1 row)

CALL merge_collation_func('é«˜æ–¯DB' collate utf8mb4_general_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
 @concat_res  | @collation_res | real_collation 
--------------+----------------+----------------
 é«˜æ–¯DBé«˜æ–¯DB | gbk_bin        | gbk_bin
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB');
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
  @concat_res   | @collation_res | real_collation 
----------------+----------------+----------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_bin        | gbk_bin
(1 row)

CALL merge_collation_func(_gbk'é«˜æ–¯DB' collate gbk_chinese_ci);
 merge_collation_func 
----------------------
 
(1 row)

SELECT @concat_res,@collation_res,pg_collation_for(@concat_res) real_collation; -- gbk_bin
  @concat_res   | @collation_res | real_collation 
----------------+----------------+----------------
 æ¥‚æ¨»æŸ‰DBé«˜æ–¯DB | gbk_bin        | gbk_bin
(1 row)

DROP procedure merge_collation_func;
-- -- -- explicit collation
create or replace procedure merge_collation_func(p1 text)
as
begin
    SELECT CONCAT(futf8_uni, p1 COLLATE gbk_chinese_ci) result, pg_collation_for(result) FROM t_diff_charset_columns into @concat_res,@collation_res;
end;
/
CALL merge_collation_func('é«˜æ–¯DB'); -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_uni, p1 COLLATE gbk_chinese_ci) result, ...
                                    ^
QUERY:  SELECT CONCAT(futf8_uni, p1 COLLATE gbk_chinese_ci) result, pg_collation_for(result) FROM t_diff_charset_columns into @concat_res,@collation_res
CONTEXT:  PL/pgSQL function merge_collation_func(text) line 2 at SQL statement
DROP procedure merge_collation_func;
-- -- concat for DERIVATION
-- -- -- same charset & diff DERIVATION
SELECT CONCAT(CONCAT(futf8_gen, futf8_uni), futf8_bin) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict in concat inside
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯DB | 
(1 row)

SELECT CONCAT(futf8_bin, CONCAT(futf8_gen, futf8_uni)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict in concat inside
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯DBé«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(CONCAT(futf8_gen, futf8_uni), futf8_bin collate utf8mb4_unicode_ci) result, pg_collation_for(result) FROM t_diff_charset_columns; -- utf8mb4_unicode_ci
       result       |  pg_collation_for  
--------------------+--------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_bin collate utf8mb4_unicode_ci, CONCAT(futf8_gen, futf8_uni)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- utf8mb4_unicode_ci
       result       |  pg_collation_for  
--------------------+--------------------
 é«˜æ–¯DBé«˜æ–¯dbé«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(CONCAT(futf8_gen), futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(futf8_uni, CONCAT(futf8_gen)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(futf8_uni, opengauss_version()) result, pg_collation_for(result) FROM t_diff_charset_columns;
   result    |  pg_collation_for  
-------------+--------------------
 é«˜æ–¯db5.1.1 | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(opengauss_version(), futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
   result    |  pg_collation_for  
-------------+--------------------
 5.1.1é«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, 'é«˜æ–¯DB') result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯dbé«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT('é«˜æ–¯DB', futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, 123) result, pg_collation_for(result) FROM t_diff_charset_columns;
  result   |  pg_collation_for  
-----------+--------------------
 é«˜æ–¯db123 | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(123, futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
  result   |  pg_collation_for  
-----------+--------------------
 123é«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, DATE '2023-05-01') result, pg_collation_for(result) FROM t_diff_charset_columns;
      result      |  pg_collation_for  
------------------+--------------------
 é«˜æ–¯db2023-05-01 | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(DATE '2023-05-01', futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
      result      |  pg_collation_for  
------------------+--------------------
 2023-05-01é«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, NULL) result, pg_collation_for(result) FROM t_diff_charset_columns;
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(NULL, futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
 result |  pg_collation_for  
--------+--------------------
        | utf8mb4_unicode_ci
(1 row)

-- -- -- diff charset & diff DERIVATION
SELECT CONCAT(CONCAT(futf8_gen, futf8_uni), CONCAT(fgbk_chi, fgb18030_chi)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict in concat inside
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
SELECT CONCAT(CONCAT(fgbk_chi, fgb18030_chi), CONCAT(futf8_gen, futf8_uni)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict in concat inside
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
SELECT CONCAT(CONCAT(futf8_gen, futf8_uni), fgbk_chi) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict in concat inside
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(fgbk_chi, CONCAT(futf8_gen, futf8_uni)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict in concat inside
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(CONCAT(futf8_gen, futf8_uni), fgbk_chi COLLATE gbk_chinese_ci) result, pg_collation_for(result) FROM t_diff_charset_columns; -- gbk_chinese_ci
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯db | gbk_chinese_ci
(1 row)

SELECT CONCAT(fgbk_chi COLLATE gbk_chinese_ci, CONCAT(futf8_gen, futf8_uni)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- gbk_chinese_ci
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯db | gbk_chinese_ci
(1 row)

SELECT CONCAT(CONCAT(futf8_gen, fgbk_chi), futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(futf8_uni, CONCAT(futf8_gen, fgbk_chi)) result, pg_collation_for(result) FROM t_diff_charset_columns; -- conflict
       result       | pg_collation_for 
--------------------+------------------
 é«˜æ–¯dbé«˜æ–¯dbé«˜æ–¯db | 
(1 row)

SELECT CONCAT(fgbk_chi, CONCAT(fgb18030_chi)) result, pg_collation_for(result) FROM t_diff_charset_columns;
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
SELECT CONCAT(CONCAT(fgb18030_bin), fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
ERROR:  collation mismatch between collations "gb18030_bin" and "gbk_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
SELECT CONCAT(fgbk_chi, opengauss_version()) result, pg_collation_for(result) FROM t_diff_charset_columns;
   result    | pg_collation_for 
-------------+------------------
 é«˜æ–¯db5.1.1 | gbk_chinese_ci
(1 row)

SELECT CONCAT(opengauss_version(), fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
   result    | pg_collation_for 
-------------+------------------
 5.1.1é«˜æ–¯DB | gbk_bin
(1 row)

SELECT CONCAT(fgbk_chi, 'é«˜æ–¯DB') result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯dbé«˜æ–¯DB | gbk_chinese_ci
(1 row)

SELECT CONCAT('é«˜æ–¯DB', fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯DBé«˜æ–¯DB | gbk_bin
(1 row)

SELECT CONCAT(fgbk_chi, 123) result, pg_collation_for(result) FROM t_diff_charset_columns;
  result   | pg_collation_for 
-----------+------------------
 é«˜æ–¯db123 | gbk_chinese_ci
(1 row)

SELECT CONCAT(123, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
  result   | pg_collation_for 
-----------+------------------
 123é«˜æ–¯DB | gbk_bin
(1 row)

SELECT CONCAT(fgbk_chi, DATE '2023-05-01') result, pg_collation_for(result) FROM t_diff_charset_columns;
      result      | pg_collation_for 
------------------+------------------
 é«˜æ–¯db2023-05-01 | gbk_chinese_ci
(1 row)

SELECT CONCAT(DATE '2023-05-01', fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
      result      | pg_collation_for 
------------------+------------------
 2023-05-01é«˜æ–¯DB | gbk_bin
(1 row)

SELECT CONCAT(fgbk_chi, NULL) result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
        | gbk_chinese_ci
(1 row)

SELECT CONCAT(NULL, fgbk_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
        | gbk_bin
(1 row)

-- -- test explicit collate on concat
-- -- -- same charset & implicit collation
SELECT CONCAT(futf8_bin, futf8_uni) COLLATE utf8mb4_general_ci result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯db | utf8mb4_general_ci
(1 row)

SELECT CONCAT(futf8_bin, futf8_uni) COLLATE gbk_chinese_ci result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_bin, futf8_uni) COLLATE gbk_chinese_ci r...
                                            ^
-- -- -- diff charset & implicit collation
SELECT CONCAT(futf8_bin, fgbk_bin) COLLATE utf8mb4_general_ci result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    |  pg_collation_for  
--------------+--------------------
 é«˜æ–¯DBé«˜æ–¯DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(futf8_bin, fgbk_bin) COLLATE gbk_chinese_ci result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_bin, fgbk_bin) COLLATE gbk_chinese_ci re...
                                           ^
-- -- -- with binary & implicit collation
SELECT CONCAT(fbin, futf8_uni) COLLATE "binary" result, pg_collation_for(result) FROM t_diff_charset_columns; -- return datatype still text
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(fbin, futf8_uni) COLLATE "binary" result, pg_c...
                                       ^
SELECT CONCAT(fbin, futf8_uni) COLLATE utf8mb4_general_ci result, pg_collation_for(result) FROM t_diff_charset_columns; -- return datatype still text
          result          |  pg_collation_for  
--------------------------+--------------------
 \xe9ab98e696af4442é«˜æ–¯db | utf8mb4_general_ci
(1 row)

-- -- test explicit collate on blob result
SELECT CAST('DEADBEEF' AS blob) COLLATE utf8mb4_general_ci result; -- ERROR
ERROR:  COLLATION "utf8mb4_general_ci" is not valid for binary type
LINE 1: SELECT CAST('DEADBEEF' AS blob) COLLATE utf8mb4_general_ci r...
                                        ^
CONTEXT:  referenced column: result
SELECT CAST('DEADBEEF' AS blob) COLLATE "binary" result;
  result  
----------
 DEADBEEF
(1 row)

-- -- case when
-- -- -- condition same charset & result same charset & implicit collation
-- -- -- -- bool condition
SELECT CASE WHEN (fgbk_chi = fgbk_bin) THEN (futf8_bin) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CASE WHEN (futf8_bin = futf8_uni) THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | gbk_bin
(1 row)

SELECT CASE WHEN (fgbk_chi = fgbk_bin) THEN (futf8_gen) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- null collation
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | 
(1 row)

SELECT CASE WHEN (futf8_gen = futf8_uni) THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | gbk_bin
(1 row)

-- -- -- -- case condition
SELECT CASE fgbk_chi WHEN fgbk_bin THEN (futf8_bin) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CASE futf8_bin WHEN futf8_uni THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | gbk_bin
(1 row)

SELECT CASE fgbk_chi WHEN fgbk_bin THEN (futf8_gen) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- null collation
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | 
(1 row)

SELECT CASE futf8_gen WHEN futf8_uni THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | gbk_bin
(1 row)

-- -- -- condition same charset & result diff charset & implicit collation
-- -- -- -- bool condition
SELECT CASE WHEN (fgbk_chi = fgbk_bin) THEN (fgbk_bin) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result |  pg_collation_for  
--------+--------------------
 é«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CASE WHEN (futf8_bin = futf8_uni) THEN (futf8_uni) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result |  pg_collation_for  
--------+--------------------
 é«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

SELECT CASE WHEN (futf8_bin = futf8_uni) THEN (fgb18030_bin) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gb18030_bin" and "gbk_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- -- -- case condition
SELECT CASE fgbk_chi WHEN fgbk_bin THEN (futf8_bin) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CASE futf8_bin WHEN futf8_uni THEN (futf8_uni) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result |  pg_collation_for  
--------+--------------------
 é«˜æ–¯DB | utf8mb4_unicode_ci
(1 row)

-- -- -- condition diff charset & result same charset & implicit collation
-- -- -- -- bool condition
SELECT CASE WHEN (futf8_uni = fgbk_bin) THEN (futf8_bin) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CASE WHEN (fgbk_bin = futf8_uni) THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | gbk_bin
(1 row)

SELECT CASE WHEN (fgbk_bin = fgb18030_bin) THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- -- -- case condition
SELECT CASE futf8_uni WHEN fgbk_bin THEN (futf8_bin) ELSE (futf8_uni) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CASE fgbk_bin WHEN futf8_uni THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | gbk_bin
(1 row)

SELECT CASE fgbk_bin WHEN fgb18030_bin THEN (fgbk_chi) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- -- condition diff charset & result diff charset & implicit collation
-- -- -- -- bool condition
SELECT CASE WHEN (futf8_uni = fgbk_bin) THEN (fgbk_bin) ELSE (futf8_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CASE WHEN (fgbk_bin = futf8_uni) THEN (futf8_bin) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CASE WHEN (fgbk_bin = fgb18030_bin) THEN (fgb18030_chi) ELSE (fgbk_chi) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_bin" and "gb18030_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- -- -- case condition
SELECT CASE futf8_uni WHEN fgbk_bin THEN (fgbk_bin) ELSE (futf8_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CASE fgbk_bin WHEN futf8_uni THEN (futf8_bin) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯DB | utf8mb4_bin
(1 row)

SELECT CASE fgb18030_chi WHEN fgbk_chi THEN (fgb18030_bin) ELSE (fgbk_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_chinese_ci"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- -- -- conflict
SELECT CASE _gb18030'é«˜æ–¯' WHEN fgbk_bin THEN (fgbk_bin) ELSE (futf8_bin) END result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_bin"
LINE 1: ...esult, pg_collation_for(result) FROM t_diff_charset_columns;
                                                                       ^
-- -- in
-- -- -- column utf8
EXPLAIN (costs off)
SELECT futf8_bin FROM t_diff_charset_columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB'); -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_chinese_ci"
LINE 2: ...columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB');
                                                                       ^
SELECT futf8_bin FROM t_diff_charset_columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB'); -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_chinese_ci"
LINE 1: ...columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB', _gbk'é«˜æ–¯DB');
                                                                       ^
EXPLAIN (costs off)
SELECT futf8_bin FROM t_diff_charset_columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci, 'é«˜æ–¯DB');
                            QUERY PLAN                             
-------------------------------------------------------------------
 Seq Scan on t_diff_charset_columns
   Filter: ((futf8_bin)::text = ANY ('{æ¥‚æ¨»æŸ‰DB,é«˜æ–¯DB}'::text[]))
(2 rows)

SELECT futf8_bin FROM t_diff_charset_columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB' COLLATE gb18030_chinese_ci, 'é«˜æ–¯DB');
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT futf8_bin FROM t_diff_charset_columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB', concat('é«˜æ–¯DB'));
                                                         QUERY PLAN                                                          
-----------------------------------------------------------------------------------------------------------------------------
 Seq Scan on t_diff_charset_columns
   Filter: ((futf8_bin)::text = ANY ((ARRAY['æ¥‚æ¨»æŸ‰DB'::character varying, (concat('é«˜æ–¯DB'))::character varying])::text[]))
(2 rows)

SELECT futf8_bin FROM t_diff_charset_columns WHERE futf8_bin in (_gb18030'é«˜æ–¯DB', concat('é«˜æ–¯DB'));
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE futf8_bin in (SELECT t2.futf8_gen FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
(0 rows)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE futf8_bin in (SELECT t2.fgbk_bin FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE futf8_gen in (SELECT t2.fgbk_bin FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE futf8_gen in (SELECT t2.futf8_uni FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

-- -- -- column gbk
EXPLAIN (costs off)
SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in (_gb18030'é«˜æ–¯DB', 'é«˜æ–¯DB');
                            QUERY PLAN                            
------------------------------------------------------------------
 Seq Scan on t_diff_charset_columns
   Filter: ((fgbk_bin)::text = ANY ('{æ¥‚æ¨»æŸ‰DB,é«˜æ–¯DB}'::text[]))
(2 rows)

EXPLAIN (costs off)
SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in (_gb18030'é«˜æ–¯DB', 'é«˜æ–¯DB' COLLATE utf8mb4_bin);
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Seq Scan on t_diff_charset_columns
   Filter: ((fgbk_bin)::text = ANY ('{æ¥‚æ¨»æŸ‰DB,é«˜æ–¯DB}'::text[] COLLATE utf8mb4_bin))
(2 rows)

SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in (_gb18030'é«˜æ–¯DB', 'é«˜æ–¯DB' COLLATE utf8mb4_bin);
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in (_utf8mb4'é«˜æ–¯DB', _gbk'é«˜æ–¯DB');
                            QUERY PLAN                            
------------------------------------------------------------------
 Seq Scan on t_diff_charset_columns
   Filter: ((fgbk_bin)::text = ANY ('{é«˜æ–¯DB,æ¥‚æ¨»æŸ‰DB}'::text[]))
(2 rows)

SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in (_utf8mb4'é«˜æ–¯DB', _gbk'é«˜æ–¯DB');
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in ('é«˜æ–¯DB', concat(_gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci));
                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Seq Scan on t_diff_charset_columns
   Filter: ((fgbk_bin)::text = ANY ((ARRAY['é«˜æ–¯DB'::character varying, (concat('æ¥‚æ¨»æŸ‰DB'::character varying))::character varying])::text[]))
(2 rows)

SELECT fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin in ('é«˜æ–¯DB', concat(_gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci));
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE fgbk_bin in (SELECT t2.fgbk_chi FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
(0 rows)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE fgbk_bin in (SELECT t2.futf8_bin FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE fgbk_chi in (SELECT t2.fgbk_bin FROM t_diff_charset_columns t2);
 futf8_bin 
-----------
(0 rows)

SELECT futf8_bin FROM t_diff_charset_columns t1 WHERE fgbk_chi in (SELECT t2.fgb18030_bin FROM t_diff_charset_columns t2); -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_bin"
LINE 1: ... in (SELECT t2.fgb18030_bin FROM t_diff_charset_columns t2);
                                                                       ^
-- -- COALESCE
SELECT COALESCE(fgbk_chi, futf8_bin) result, pg_collation_for(result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT COALESCE(futf8_gen, futf8_bin) result, pg_collation_for (result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT COALESCE(futf8_uni, futf8_gen) result, pg_collation_for (result) FROM t_diff_charset_columns; -- conflict
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | 
(1 row)

SELECT COALESCE(fgbk_chi, fgb18030_chi) result, pg_collation_for (result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...sult, pg_collation_for (result) FROM t_diff_charset_columns;
                                                                       ^
-- -- GREATEST
SELECT GREATEST(fgbk_chi, futf8_bin) result, pg_collation_for (result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT GREATEST(futf8_gen, futf8_bin) result, pg_collation_for (result) FROM t_diff_charset_columns;
 result | pg_collation_for 
--------+------------------
 é«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT GREATEST(futf8_uni, futf8_gen) result, pg_collation_for (result) FROM t_diff_charset_columns; -- conflict
ERROR:  could not determine which collation to use for string comparison
HINT:  Use the COLLATE clause to set the collation explicitly.
CONTEXT:  referenced column: result
SELECT GREATEST(fgbk_chi, fgb18030_chi) result, pg_collation_for (result) FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gbk_chinese_ci" and "gb18030_chinese_ci"
LINE 1: ...sult, pg_collation_for (result) FROM t_diff_charset_columns;
                                                                       ^
-- -- rowcompare
SELECT futf8_bin, futf8_uni, fgbk_bin, fgbk_chi, fgb18030_bin, fgb18030_chi FROM t_diff_charset_columns
    WHERE (futf8_bin, futf8_uni, fgbk_bin, fgbk_chi, fgb18030_bin, fgb18030_chi) = ('é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'é«˜æ–¯db');
 futf8_bin | futf8_uni | fgbk_bin | fgbk_chi | fgb18030_bin | fgb18030_chi 
-----------+-----------+----------+----------+--------------+--------------
 é«˜æ–¯DB    | é«˜æ–¯db    | é«˜æ–¯DB   | é«˜æ–¯db   | é«˜æ–¯DB       | é«˜æ–¯db
(1 row)

SELECT futf8_bin, futf8_uni, fgbk_bin, fgbk_chi, fgb18030_bin, fgb18030_chi FROM t_diff_charset_columns
    WHERE (futf8_bin, futf8_uni, fgbk_bin, fgbk_chi, fgb18030_bin, fgb18030_chi) = ('é«˜æ–¯DB', 'é«˜æ–¯DB', 'é«˜æ–¯DB', 'é«˜æ–¯DB', 'é«˜æ–¯DB', 'é«˜æ–¯DB');
 futf8_bin | futf8_uni | fgbk_bin | fgbk_chi | fgb18030_bin | fgb18030_chi 
-----------+-----------+----------+----------+--------------+--------------
 é«˜æ–¯DB    | é«˜æ–¯db    | é«˜æ–¯DB   | é«˜æ–¯db   | é«˜æ–¯DB       | é«˜æ–¯db
(1 row)

-- -- aggregate
SELECT count(futf8_bin), futf8_bin FROM t_diff_charset_columns GROUP BY futf8_bin;
 count | futf8_bin 
-------+-----------
     1 | é«˜æ–¯DB
(1 row)

SELECT count(fgbk_bin), fgbk_bin FROM t_diff_charset_columns GROUP BY fgbk_bin;
 count | fgbk_bin 
-------+----------
     1 | é«˜æ–¯DB
(1 row)

SELECT count(fgb18030_bin), fgb18030_bin FROM t_diff_charset_columns GROUP BY fgb18030_bin;
 count | fgb18030_bin 
-------+--------------
     1 | é«˜æ–¯DB
(1 row)

SELECT group_concat(futf8_bin, fgbk_chi), fgb18030_bin FROM t_diff_charset_columns GROUP BY fgb18030_bin;
 group_concat | fgb18030_bin 
--------------+--------------
 é«˜æ–¯DBé«˜æ–¯db | é«˜æ–¯DB
(1 row)

SELECT group_concat(fgbk_bin, fgbk_chi order by futf8_bin), fgb18030_bin FROM t_diff_charset_columns GROUP BY fgb18030_bin;
 group_concat | fgb18030_bin 
--------------+--------------
 é«˜æ–¯DBé«˜æ–¯db | é«˜æ–¯DB
(1 row)

SELECT group_concat(DISTINCT fgbk_bin, futf8_bin order by fgbk_bin, futf8_bin), fgb18030_bin FROM t_diff_charset_columns GROUP BY fgb18030_bin;
 group_concat | fgb18030_bin 
--------------+--------------
 é«˜æ–¯DBé«˜æ–¯DB | é«˜æ–¯DB
(1 row)

-- -- UNION
-- -- -- const
select _utf8mb4'é«˜æ–¯' union select _gbk'é«˜æ–¯';
 ?column? 
----------
 æ¥‚æ¨»æŸ‰
 é«˜æ–¯
(2 rows)

select _gb18030'é«˜æ–¯' union select _gbk'é«˜æ–¯'; -- ERROR
ERROR:  collation mismatch between collations "gb18030_chinese_ci" and "gbk_chinese_ci"
LINE 1: select _gb18030'é«˜æ–¯' union select _gbk'é«˜æ–¯';
                                               ^
HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
-- -- -- column
select futf8_bin FROM t_diff_charset_columns
    union
    select fgbk_bin FROM t_diff_charset_columns;
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

select fgb18030_bin FROM t_diff_charset_columns
    union
    select fgbk_bin FROM t_diff_charset_columns; -- ERROR
ERROR:  collation mismatch between collations "gb18030_bin" and "gbk_bin"
LINE 3:     select fgbk_bin FROM t_diff_charset_columns;
                   ^
HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
-- -- -- explicit
select fgbk_chi COLLATE gbk_chinese_ci FROM t_diff_charset_columns
    union
    select fgbk_bin FROM t_diff_charset_columns;
 fgbk_chi 
----------
 é«˜æ–¯db
(1 row)

select fgbk_chi COLLATE gbk_chinese_ci FROM t_diff_charset_columns
    union all
    select fgbk_bin FROM t_diff_charset_columns;
 fgbk_chi 
----------
 é«˜æ–¯db
 é«˜æ–¯DB
(2 rows)

select fgbk_chi COLLATE gbk_chinese_ci FROM t_diff_charset_columns
    INTERSECT
    select fgbk_bin FROM t_diff_charset_columns;
 fgbk_chi 
----------
 é«˜æ–¯db
(1 row)

-- -- -- mixed
select _utf8mb4'é«˜æ–¯', futf8_bin FROM t_diff_charset_columns
    union
    select _gbk'é«˜æ–¯', fgbk_bin FROM t_diff_charset_columns;
 ?column? | futf8_bin 
----------+-----------
 æ¥‚æ¨»æŸ‰   | é«˜æ–¯DB
 é«˜æ–¯     | é«˜æ–¯DB
(2 rows)

select _utf8mb4'GS', futf8_bin FROM t_diff_charset_columns
    union
    select _gbk'GS', fgbk_bin FROM t_diff_charset_columns;
 ?column? | futf8_bin 
----------+-----------
 GS       | é«˜æ–¯DB
(1 row)

select _utf8mb4'GS', fgbk_bin FROM t_diff_charset_columns
    union
    select _gbk'GS', fgbk_chi FROM t_diff_charset_columns;
 ?column? | fgbk_bin 
----------+----------
 GS       | é«˜æ–¯DB
 GS       | é«˜æ–¯db
(2 rows)

-- -- -- 3 select
select _utf8mb4'GS', fgbk_bin FROM t_diff_charset_columns
    union
    select _gbk'GS', futf8_bin FROM t_diff_charset_columns
    union
    select _gb18030'GS', fgb18030_bin FROM t_diff_charset_columns;
 ?column? | fgbk_bin 
----------+----------
 GS       | é«˜æ–¯DB
(1 row)

select _utf8mb4'GS', fgbk_bin FROM t_diff_charset_columns
    union
    select _gbk'GS', futf8_bin FROM t_diff_charset_columns
    union
    select _gb18030'GS', fgb18030_chi COLLATE gb18030_chinese_ci FROM t_diff_charset_columns;
 ?column? | fgbk_bin 
----------+----------
 GS       | é«˜æ–¯DB
(1 row)

-- -- -- complex select
select _utf8mb4'GS', GROUP_CONCAT(fgbk_bin, fgbk_chi), fgbk_bin FROM t_diff_charset_columns GROUP BY fgbk_bin
    union
    select _gbk'GS', GROUP_CONCAT(futf8_bin, futf8_uni), futf8_bin FROM t_diff_charset_columns GROUP BY futf8_bin
    union
    select _gb18030'GS', GROUP_CONCAT(fgb18030_bin, fgb18030_chi), fgb18030_bin FROM t_diff_charset_columns GROUP BY fgb18030_bin;
 ?column? | group_concat | fgbk_bin 
----------+--------------+----------
 GS       | é«˜æ–¯DBé«˜æ–¯db | é«˜æ–¯DB
(1 row)

select _utf8mb4'GS', GROUP_CONCAT(fgbk_bin, fgbk_chi), fgbk_bin FROM t_diff_charset_columns GROUP BY fgbk_bin
    union
    select _gbk'GS', GROUP_CONCAT(futf8_bin, futf8_uni), futf8_bin FROM t_diff_charset_columns GROUP BY futf8_bin
    union
    select _gb18030'GS', GROUP_CONCAT(fgb18030_bin, fgb18030_chi  COLLATE gb18030_chinese_ci), fgb18030_chi COLLATE gb18030_chinese_ci FROM t_diff_charset_columns GROUP BY fgb18030_chi;
 ?column? | group_concat | fgbk_bin 
----------+--------------+----------
 GS       | é«˜æ–¯DBé«˜æ–¯db | é«˜æ–¯DB
(1 row)

-- -- test COLLATE for function
-- -- -- for string function
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) COLLATE utf8mb4_general_ci result, pg_collation_for(result);
     result     |  pg_collation_for  
----------------+--------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_general_ci
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' COLLATE utf8mb4_unicode_ci , _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) COLLATE gbk_chinese_ci result, pg_collation_for(result); -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: ...unicode_ci , _gbk'é«˜æ–¯DB' COLLATE gbk_chinese_ci) COLLATE gb...
                                                             ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB') COLLATE utf8mb4_bin result, pg_collation_for(result);
     result     | pg_collation_for 
----------------+------------------
 é«˜æ–¯DBæ¥‚æ¨»æŸ‰DB | utf8mb4_bin
(1 row)

SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB') COLLATE gbk_chinese_ci result, pg_collation_for(result); -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB') COLLATE gbk_c...
                                                       ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB') COLLATE "binary" result, pg_collation_for(result); -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(_utf8mb4'é«˜æ–¯DB' , _gbk'é«˜æ–¯DB') COLLATE "bina...
                                                       ^
SELECT CONCAT(futf8_uni , futf8_gen) COLLATE utf8mb4_bin result, pg_collation_for(result) FROM t_diff_charset_columns;
    result    | pg_collation_for 
--------------+------------------
 é«˜æ–¯dbé«˜æ–¯db | utf8mb4_bin
(1 row)

SELECT CONCAT(futf8_uni , futf8_gen) COLLATE gbk_chinese_ci result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_uni , futf8_gen) COLLATE gbk_chinese_ci ...
                                             ^
-- -- -- for binary argument string function
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _binary'é«˜æ–¯DB') COLLATE "binary" result, pg_collation_for(result); -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _binary'é«˜æ–¯DB') COLLATE "bi...
                                                         ^
SELECT CONCAT(_utf8mb4'é«˜æ–¯DB', _binary'é«˜æ–¯DB') COLLATE utf8mb4_unicode_ci result, pg_collation_for(result);
          result          |  pg_collation_for  
--------------------------+--------------------
 é«˜æ–¯DB\xe9ab98e696af4442 | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(futf8_uni, fbin) COLLATE "binary" result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_uni, fbin) COLLATE "binary" result, pg_c...
                                       ^
SELECT CONCAT(futf8_uni, fbin) COLLATE gbk_chinese_ci result, pg_collation_for(result) FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: SELECT CONCAT(futf8_uni, fbin) COLLATE gbk_chinese_ci result...
                                       ^
-- -- -- for convert function
SELECT CONVERT(futf8_uni USING 'GBK') result, pg_collation_for(result) FROM t_diff_charset_columns;
  result  | pg_collation_for 
----------+------------------
 æ¥‚æ¨»æŸ‰db | gbk_chinese_ci
(1 row)

SELECT CONVERT(futf8_uni USING 'GBK') COLLATE gbk_bin result FROM t_diff_charset_columns;
  result  
----------
 æ¥‚æ¨»æŸ‰db
(1 row)

SELECT CONVERT(futf8_uni USING 'GBK') COLLATE "binary" result FROM t_diff_charset_columns; -- ERROR
ERROR:  COLLATION "binary" is not valid for CHARACTER SET "GBK"
LINE 1: SELECT CONVERT(futf8_uni USING 'GBK') COLLATE "binary" resul...
                                              ^
SELECT CONCAT(CONVERT(futf8_uni USING 'GBK'), futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
     result     |  pg_collation_for  
----------------+--------------------
 æ¥‚æ¨»æŸ‰dbé«˜æ–¯db | utf8mb4_unicode_ci
(1 row)

SELECT CONCAT(CONVERT(futf8_uni USING 'GBK') COLLATE gbk_bin, futf8_uni) result, pg_collation_for(result) FROM t_diff_charset_columns;
     result     | pg_collation_for 
----------------+------------------
 æ¥‚æ¨»æŸ‰dbé«˜æ–¯db | gbk_bin
(1 row)

DROP TABLE t_diff_charset_columns;
-- -- -- DML ä¸­æ–‡ utf8mb4 COLUMNS
DROP TABLE IF EXISTS t_charset_utf8mb4;
NOTICE:  table "t_charset_utf8mb4" does not exist, skipping
CREATE TABLE t_charset_utf8mb4(
	id int auto_increment primary key,
	a text charset utf8mb4 collate 'utf8mb4_bin',
	b varbinary(16)
);
NOTICE:  CREATE TABLE will create implicit sequence "t_charset_utf8mb4_id_seq" for serial column "t_charset_utf8mb4.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t_charset_utf8mb4_pkey" for table "t_charset_utf8mb4"
INSERT INTO t_charset_utf8mb4(a,b) VALUES('é«˜æ–¯', 'é«˜æ–¯');
INSERT INTO t_charset_utf8mb4(a,b) VALUES('æ¥‚æ¨»æŸ‰', 'æ¥‚æ¨»æŸ‰');
INSERT INTO t_charset_utf8mb4(a,b) VALUES('é«˜æ–¯DB', 'é«˜æ–¯DB');
INSERT INTO t_charset_utf8mb4(a,b) VALUES(_gbk'é«˜æ–¯DB', (_gbk'é«˜æ–¯DB')::varbinary(16));
INSERT INTO t_charset_utf8mb4(a,b) VALUES(_gbk'é«˜æ–¯DB' COLLATE 'gbk_chinese_ci',
    (_gbk'é«˜æ–¯DB' COLLATE 'gbk_chinese_ci')::varbinary(16));
INSERT INTO t_charset_utf8mb4 SELECT 6,_gbk'é«˜æ–¯DB', (_gbk'é«˜æ–¯DB')::varbinary(16);
-- -- -- -- test deparse for explain and select into
EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯DB' LIMIT 1;
                         QUERY PLAN                         
------------------------------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: (a = 'æ¥‚æ¨»æŸ‰DB'::text COLLATE utf8mb4_bin)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯DB' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       4 | æ¥‚æ¨»æŸ‰DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci LIMIT 1;
                   QUERY PLAN                   
------------------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: ((a)::text = 'æ¥‚æ¨»æŸ‰db'::text)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci LIMIT 1 into @id_res,@a_res;
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: ...bk'é«˜æ–¯db' COLLATE gbk_chinese_ci LIMIT 1 into @id_res,@a_re...
                                                             ^
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       4 | æ¥‚æ¨»æŸ‰DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a COLLATE utf8mb4_unicode_ci =_gbk'é«˜æ–¯db' LIMIT 1;
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: ((a)::text = 'æ¥‚æ¨»æŸ‰db'::text COLLATE utf8mb4_unicode_ci)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a COLLATE utf8mb4_unicode_ci =_gbk'é«˜æ–¯db' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       4 | æ¥‚æ¨»æŸ‰DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1;
              QUERY PLAN              
--------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: (a = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: (a = 'é«˜æ–¯db'::text COLLATE utf8mb4_unicode_ci)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | é«˜æ–¯DB
(1 row)

-- -- -- -- test condition
SELECT * FROM t_charset_utf8mb4 WHERE a='æ¥‚æ¨»æŸ‰' ORDER BY id;
 id |   a    |          b           
----+--------+----------------------
  2 | æ¥‚æ¨»æŸ‰ | \xe6a582e6a8bbe69f89
(1 row)

SELECT * FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯' ORDER BY id;
 id |  a   |       b        
----+------+----------------
  1 | é«˜æ–¯ | \xe9ab98e696af
(1 row)

SELECT * FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  3 | é«˜æ–¯DB | \xe9ab98e696af4442
(1 row)

SELECT * FROM t_charset_utf8mb4 WHERE a=_binary'é«˜æ–¯DB' ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  3 | é«˜æ–¯DB | \xe9ab98e696af4442
(1 row)

SELECT * FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯DB' ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  4 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  5 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  6 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  4 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  5 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  6 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
(3 rows)

UPDATE t_charset_utf8mb4 SET a='é«˜æ–¯DB', b='é«˜æ–¯DB'
    WHERE a=_gbk'é«˜æ–¯DB' COLLATE 'gbk_chinese_ci';
UPDATE t_charset_utf8mb4 SET a=_gbk'é«˜æ–¯DB', b=(_gbk'é«˜æ–¯DB')::varbinary(16)
	WHERE a='æ¥‚æ¨»æŸ‰';
UPDATE t_charset_utf8mb4 SET a=_utf8mb4'é«˜æ–¯DB', b=(_utf8mb4'é«˜æ–¯DB')::varbinary(16)
	WHERE a=_gbk'é«˜æ–¯DB';
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  1 | é«˜æ–¯   | \xe9ab98e696af
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
  3 | é«˜æ–¯DB | \xe9ab98e696af4442
  4 | é«˜æ–¯DB | \xe9ab98e696af4442
  5 | é«˜æ–¯DB | \xe9ab98e696af4442
  6 | é«˜æ–¯DB | \xe9ab98e696af4442
(6 rows)

DELETE FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯';
DELETE FROM t_charset_utf8mb4 WHERE a::varbinary(16)=_binary'é«˜æ–¯DB';
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id | a | b 
----+---+---
(0 rows)

-- -- -- -- test assign expr
INSERT INTO t_charset_utf8mb4(a,b) VALUES(CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16));
INSERT INTO t_charset_utf8mb4 SELECT 0, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16);
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  7 | é«˜æ–¯DB | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

INSERT INTO t_charset_utf8mb4(id,a,b) VALUES(7, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16)) ON DUPLICATE KEY UPDATE a=CONCAT('é«˜æ–¯','db');
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

UPDATE t_charset_utf8mb4 SET a=CONCAT('DB','é«˜æ–¯'), b=(CONCAT('DB','é«˜æ–¯'))::varbinary(16)
	WHERE a=CONCAT('é«˜æ–¯','DB');
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | DBé«˜æ–¯ | \x4442e9ab98e696af
(2 rows)

DROP TABLE IF EXISTS t_charset_utf8mb4;
-- -- -- DML ä¸­æ–‡ gbk COLUMNS
DROP TABLE IF EXISTS t_charset_gbk;
NOTICE:  table "t_charset_gbk" does not exist, skipping
CREATE TABLE t_charset_gbk(
	id int auto_increment primary key,
	a text charset gbk collate "gbk_bin",
	b varbinary(16)
);
NOTICE:  CREATE TABLE will create implicit sequence "t_charset_gbk_id_seq" for serial column "t_charset_gbk.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t_charset_gbk_pkey" for table "t_charset_gbk"
INSERT INTO t_charset_gbk(a,b) VALUES('é«˜æ–¯', 'é«˜æ–¯');
INSERT INTO t_charset_gbk(a,b) VALUES('é«˜æ–¯DB', 'é«˜æ–¯DB');
INSERT INTO t_charset_gbk(a,b) VALUES(_gbk'é«˜æ–¯DB', (_gbk'é«˜æ–¯DB')::varbinary(16));
INSERT INTO t_charset_gbk(a,b) VALUES(_gbk'é«˜æ–¯DB' COLLATE 'gbk_chinese_ci',
    (_gbk'é«˜æ–¯DB' COLLATE 'gbk_chinese_ci')::varbinary(16));
INSERT INTO t_charset_gbk(a,b) VALUES('æ¥‚æ¨»æŸ‰', 'æ¥‚æ¨»æŸ‰');
INSERT INTO t_charset_gbk SELECT 6,_gbk'é«˜æ–¯DB', (_gbk'é«˜æ–¯DB')::varbinary(16);
-- -- -- -- test deparse for explain and select into
EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯DB' LIMIT 1;
               QUERY PLAN               
----------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: (a = 'æ¥‚æ¨»æŸ‰DB'::text)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯DB' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       3 | æ¥‚æ¨»æŸ‰DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci LIMIT 1;
               QUERY PLAN               
----------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: (a = 'æ¥‚æ¨»æŸ‰db'::text)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci LIMIT 1 into @id_res,@a_res;
ERROR:  COLLATION "gbk_chinese_ci" is not valid for CHARACTER SET "UTF8"
LINE 1: ...E a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci LIMIT 1 into @id_res...
                                                             ^
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       3 | æ¥‚æ¨»æŸ‰DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1;
              QUERY PLAN              
--------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: (a = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: ((a)::text = 'é«˜æ–¯db'::text COLLATE utf8mb4_unicode_ci)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a COLLATE gbk_chinese_ci =_utf8mb4'é«˜æ–¯db' LIMIT 1;
                  QUERY PLAN                  
----------------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: ((a)::text = 'é«˜æ–¯db'::text)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a COLLATE gbk_chinese_ci =_utf8mb4'é«˜æ–¯db' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       2 | é«˜æ–¯DB
(1 row)

-- -- -- -- test condition
SELECT * FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯' ORDER BY id;
 id |  a   |       b        
----+------+----------------
  1 | é«˜æ–¯ | \xe9ab98e696af
(1 row)

SELECT * FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
(1 row)

SELECT * FROM t_charset_gbk WHERE a=_binary'é«˜æ–¯DB' ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  3 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  4 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  6 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯DB' ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  3 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  4 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  6 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  3 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  4 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
  6 | æ¥‚æ¨»æŸ‰DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯' ORDER BY id;
 id |   a    |          b           
----+--------+----------------------
  5 | æ¥‚æ¨»æŸ‰ | \xe6a582e6a8bbe69f89
(1 row)

SELECT * FROM t_charset_gbk WHERE a='æ¥‚æ¨»æŸ‰' ORDER BY id;
 id |   a    |          b           
----+--------+----------------------
  5 | æ¥‚æ¨»æŸ‰ | \xe6a582e6a8bbe69f89
(1 row)

UPDATE t_charset_gbk SET a='é«˜æ–¯DB', b='é«˜æ–¯DB'
	WHERE a=_gbk'é«˜æ–¯DB' COLLATE 'gbk_chinese_ci';
UPDATE t_charset_gbk SET a=_gbk'é«˜æ–¯DB', b=(_gbk'é«˜æ–¯DB')::varbinary(16)
	WHERE a='æ¥‚æ¨»æŸ‰';
UPDATE t_charset_gbk SET a=_utf8mb4'é«˜æ–¯DB', b=(_utf8mb4'é«˜æ–¯DB')::varbinary(16)
	WHERE a=_gbk'é«˜æ–¯DB';
SELECT * FROM t_charset_gbk ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  1 | é«˜æ–¯   | \xe9ab98e696af
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
  3 | é«˜æ–¯DB | \xe9ab98e696af4442
  4 | é«˜æ–¯DB | \xe9ab98e696af4442
  5 | é«˜æ–¯DB | \xe9ab98e696af4442
  6 | é«˜æ–¯DB | \xe9ab98e696af4442
(6 rows)

DELETE FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯';
DELETE FROM t_charset_gbk WHERE a::varbinary(16)=_binary'é«˜æ–¯DB'; -- DELETE 0
DELETE FROM t_charset_gbk WHERE a::varbinary(16)= E'\\xB8DFCBB94442'::varbinary(16);
SELECT * FROM t_charset_gbk ORDER BY id;
 id | a | b 
----+---+---
(0 rows)

-- -- -- -- test assign expr
INSERT INTO t_charset_gbk(a,b) VALUES(CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16));
INSERT INTO t_charset_gbk SELECT 0, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16);
SELECT * FROM t_charset_gbk ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  7 | é«˜æ–¯DB | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

INSERT INTO t_charset_gbk(id,a,b) VALUES(7, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16)) ON DUPLICATE KEY UPDATE a=CONCAT('é«˜æ–¯','db');
SELECT * FROM t_charset_gbk ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

UPDATE t_charset_gbk SET a=CONCAT('DB','é«˜æ–¯'), b=(CONCAT('DB','é«˜æ–¯'))::varbinary(16)
	WHERE a=CONCAT('é«˜æ–¯','DB');
SELECT * FROM t_charset_gbk ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | DBé«˜æ–¯ | \x4442e9ab98e696af
(2 rows)

DROP TABLE IF EXISTS t_charset_gbk;
-- -- test partkey
CREATE TABLE t_multi_charset_partkey (part varchar(32) collate utf8mb4_general_ci, a int)
    PARTITION BY RANGE(part) (
        partition p1 values less than('é«˜æ–¯DB'),
        partition p2 values less than('é«˜æ–¯db'),
        partition p3 values less than(MAXVALUE)
); -- ERROR
ERROR:  partition bound of partition "p2" is too low
CREATE TABLE t_multi_charset_partkey (part varchar(32) collate utf8mb4_general_ci, a int)
    PARTITION BY RANGE(part) (
        partition p1 values less than('æ¥‚æ¨»æŸ‰DB'),
        partition p2 values less than(_gbk'é«˜æ–¯db'),
        partition p3 values less than(MAXVALUE)
); -- ERROR
ERROR:  partition bound of partition "p2" is too low
CREATE TABLE t_multi_charset_partkey (part varchar(32) collate utf8mb4_general_ci, a int)
    PARTITION BY LIST(part) (
        partition p1 values('é«˜æ–¯DB'),
        partition p2 values('é«˜æ–¯db')
); -- ERROR
ERROR:  list partition p1 and p2 has overlapped value
CREATE TABLE t_multi_charset_partkey (part varchar(32) collate utf8mb4_general_ci, a int)
    PARTITION BY RANGE(part) (
        PARTITION pass START('é«˜æ–¯DB') END('é«˜æ–¯db'),
        PARTITION excellent START('é«˜æ–¯db') END(MAXVALUE)
); -- unsupported
ERROR:  datatype of column "part" is unsupported for partition key in start/end clause.
HINT:  Valid datatypes are: tinyint [unsigned], smallint [unsigned], int [unsigned], bigint [unsigned], float4/real, float8/double, numeric, date and timestamp [with time zone].
-- -- -- utf8mb4
CREATE TABLE t_multi_charset_partkey (part text collate utf8mb4_bin, a int)
    PARTITION BY HASH(part) (
        partition p1,
        partition p2,
        partition p3,
        partition p4
);
-- -- -- insert
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯DB', 1);
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯db', 2);
INSERT INTO t_multi_charset_partkey VALUES(_utf8mb4'é«˜æ–¯DB1', 3);
INSERT INTO t_multi_charset_partkey VALUES(_utf8mb4'é«˜æ–¯db1', 4);
-- -- -- select
SELECT * FROM t_multi_charset_partkey PARTITION(p1) order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | 2
(2 rows)

SELECT * FROM t_multi_charset_partkey PARTITION(p2) order by 1,2;
  part   | a 
---------+---
 é«˜æ–¯db1 | 4
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION(p3) order by 1,2;
 part | a 
------+---
(0 rows)

SELECT * FROM t_multi_charset_partkey PARTITION FOR(_gbk'é«˜æ–¯db') order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | 2
(2 rows)

SELECT * FROM t_multi_charset_partkey PARTITION FOR(_utf8mb4'é«˜æ–¯DB1') order by 1,2;
  part   | a 
---------+---
 é«˜æ–¯DB1 | 3
(1 row)

-- -- -- partition pruning
EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' order by 1,2;
                             QUERY PLAN                              
---------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 1
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: (part = 'æ¥‚æ¨»æŸ‰DB'::text COLLATE utf8mb4_bin)
               Selected Partitions:  1
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
(1 row)

EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_utf8mb4'é«˜æ–¯db1' order by 1,2;
                         QUERY PLAN                          
-------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 1
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: (part = 'é«˜æ–¯db1'::text)
               Selected Partitions:  2
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_utf8mb4'é«˜æ–¯db1' order by 1,2;
  part   | a 
---------+---
 é«˜æ–¯db1 | 4
(1 row)

EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' collate gbk_chinese_ci order by 1,2; -- ALL PARTS
                         QUERY PLAN                          
-------------------------------------------------------------
 Sort
   Sort Key: part COLLATE utf8mb4_bin, a
   ->  Partition Iterator
         Iterations: 4
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: ((part)::text = 'æ¥‚æ¨»æŸ‰DB'::text)
               Selected Partitions:  1..4
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' collate gbk_chinese_ci order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | 2
(2 rows)

-- -- -- partiton ddl
ALTER TABLE t_multi_charset_partkey SPLIT PARTITION p1 AT ( 'é«˜æ–¯DB' ) INTO ( PARTITION p1, PARTITION p4); -- not support
ERROR:  can not split LIST/HASH partition table
ALTER TABLE t_multi_charset_partkey RENAME PARTITION FOR(_gbk'é«˜æ–¯db') TO newp1;
SELECT * FROM t_multi_charset_partkey PARTITION(newp1) order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | 2
(2 rows)

DROP TABLE t_multi_charset_partkey;
-- -- -- utf8mb4
CREATE TABLE t_multi_charset_partkey (part text collate utf8mb4_bin, a int)
    PARTITION BY RANGE(part) (
        partition p1 values less than('æ¥‚æ¨»æŸ‰DB'),
        partition p2 values less than('æ¥‚æ¨»æŸ‰db'),
        partition p3 values less than('é«˜æ–¯DB'),
        partition p4 values less than('é«˜æ–¯db'),
        partition p5 values less than(MAXVALUE)
);
-- -- -- insert
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯DB', 1);
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯db', 2);
INSERT INTO t_multi_charset_partkey VALUES(_utf8mb4'é«˜æ–¯DB', 3);
INSERT INTO t_multi_charset_partkey VALUES(_utf8mb4'é«˜æ–¯db', 4);
-- -- -- select
SELECT * FROM t_multi_charset_partkey PARTITION(p1) order by 1,2;
 part | a 
------+---
(0 rows)

SELECT * FROM t_multi_charset_partkey PARTITION(p2) order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION(p3) order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰db | 2
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION(p4) order by 1,2;
  part  | a 
--------+---
 é«˜æ–¯DB | 3
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION(p5) order by 1,2;
  part  | a 
--------+---
 é«˜æ–¯db | 4
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION FOR(_gbk'é«˜æ–¯db') order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰db | 2
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION FOR(_utf8mb4'é«˜æ–¯DB') order by 1,2;
  part  | a 
--------+---
 é«˜æ–¯DB | 3
(1 row)

-- -- -- partition pruning
EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' order by 1,2;
                             QUERY PLAN                              
---------------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 1
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: (part = 'æ¥‚æ¨»æŸ‰DB'::text COLLATE utf8mb4_bin)
               Selected Partitions:  2
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
(1 row)

EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_utf8mb4'é«˜æ–¯db' order by 1,2;
                         QUERY PLAN                          
-------------------------------------------------------------
 Sort
   Sort Key: a
   ->  Partition Iterator
         Iterations: 1
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: (part = 'é«˜æ–¯db'::text)
               Selected Partitions:  5
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_utf8mb4'é«˜æ–¯db' order by 1,2;
  part  | a 
--------+---
 é«˜æ–¯db | 4
(1 row)

EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' collate gbk_chinese_ci order by 1,2; -- ALL PARTS
                         QUERY PLAN                          
-------------------------------------------------------------
 Sort
   Sort Key: part COLLATE utf8mb4_bin, a
   ->  Partition Iterator
         Iterations: 5
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: ((part)::text = 'æ¥‚æ¨»æŸ‰DB'::text)
               Selected Partitions:  1..5
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' collate gbk_chinese_ci order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | 2
(2 rows)

-- -- -- partiton ddl
ALTER TABLE t_multi_charset_partkey SPLIT PARTITION FOR(_gbk'é«˜æ–¯DB') AT (_gbk'é«˜æ–¯DB1 ') INTO (PARTITION p2_1, PARTITION p2_2);
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯DB1', 1);
SELECT * FROM t_multi_charset_partkey PARTITION(p2_1) order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰DB | 1
(1 row)

SELECT * FROM t_multi_charset_partkey PARTITION(p2_2) order by 1,2;
   part    | a 
-----------+---
 æ¥‚æ¨»æŸ‰DB1 | 1
(1 row)

ALTER TABLE t_multi_charset_partkey RENAME PARTITION FOR(_gbk'é«˜æ–¯db') TO p3_1;
SELECT * FROM t_multi_charset_partkey PARTITION(p3_1) order by 1,2;
   part   | a 
----------+---
 æ¥‚æ¨»æŸ‰db | 2
(1 row)

DROP TABLE t_multi_charset_partkey;
-- -- -- utf8mb4
CREATE TABLE t_multi_charset_partkey (part varchar(32) collate utf8mb4_unicode_ci, part2 varchar(32) collate utf8mb4_general_ci, a int)
    PARTITION BY LIST COLUMNS(part, part2) (
        partition p1 values in(('æ¥‚æ¨»æŸ‰DB', 'æ¥‚æ¨»æŸ‰db')),
        partition p2 values in(('é«˜æ–¯db', 'é«˜æ–¯DB'))
);
-- -- -- insert
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯DB', _gbk'é«˜æ–¯DB', 1);
INSERT INTO t_multi_charset_partkey VALUES(_gbk'é«˜æ–¯db', _gbk'é«˜æ–¯db', 2);
INSERT INTO t_multi_charset_partkey VALUES(_utf8mb4'é«˜æ–¯DB', _utf8mb4'é«˜æ–¯DB', 3);
INSERT INTO t_multi_charset_partkey VALUES(_utf8mb4'é«˜æ–¯db', _utf8mb4'é«˜æ–¯db', 4);
-- -- -- select
SELECT * FROM t_multi_charset_partkey PARTITION(p1) order by 1,2;
   part   |  part2   | a 
----------+----------+---
 æ¥‚æ¨»æŸ‰DB | æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | æ¥‚æ¨»æŸ‰db | 2
(2 rows)

SELECT * FROM t_multi_charset_partkey PARTITION(p2) order by 1,2;
  part  | part2  | a 
--------+--------+---
 é«˜æ–¯DB | é«˜æ–¯DB | 3
 é«˜æ–¯db | é«˜æ–¯db | 4
(2 rows)

SELECT * FROM t_multi_charset_partkey PARTITION FOR(_gbk'é«˜æ–¯DB', _gbk'é«˜æ–¯db') order by 1,2;
   part   |  part2   | a 
----------+----------+---
 æ¥‚æ¨»æŸ‰DB | æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | æ¥‚æ¨»æŸ‰db | 2
(2 rows)

SELECT * FROM t_multi_charset_partkey PARTITION FOR(_utf8mb4'é«˜æ–¯db', _utf8mb4'é«˜æ–¯db') order by 1,2;
  part  | part2  | a 
--------+--------+---
 é«˜æ–¯DB | é«˜æ–¯DB | 3
 é«˜æ–¯db | é«˜æ–¯db | 4
(2 rows)

-- -- -- partition pruning
EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' order by 1,2;
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Sort
   Sort Key: part2 COLLATE utf8mb4_general_ci
   ->  Partition Iterator
         Iterations: 1
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: ((part)::text = 'æ¥‚æ¨»æŸ‰DB'::text COLLATE utf8mb4_unicode_ci)
               Selected Partitions:  1
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' order by 1,2;
   part   |  part2   | a 
----------+----------+---
 æ¥‚æ¨»æŸ‰DB | æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | æ¥‚æ¨»æŸ‰db | 2
(2 rows)

EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_utf8mb4'é«˜æ–¯db' order by 1,2;
                         QUERY PLAN                          
-------------------------------------------------------------
 Sort
   Sort Key: part2 COLLATE utf8mb4_general_ci
   ->  Partition Iterator
         Iterations: 1
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: ((part)::text = 'é«˜æ–¯db'::text)
               Selected Partitions:  2
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_utf8mb4'é«˜æ–¯db' order by 1,2;
  part  | part2  | a 
--------+--------+---
 é«˜æ–¯DB | é«˜æ–¯DB | 3
 é«˜æ–¯db | é«˜æ–¯db | 4
(2 rows)

EXPLAIN (costs off)
SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' collate gbk_chinese_ci order by 1,2; -- ALL PARTS
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Sort
   Sort Key: part COLLATE utf8mb4_unicode_ci, part2 COLLATE utf8mb4_general_ci
   ->  Partition Iterator
         Iterations: 2
         ->  Partitioned Seq Scan on t_multi_charset_partkey
               Filter: ((part)::text = 'æ¥‚æ¨»æŸ‰DB'::text)
               Selected Partitions:  1..2
(7 rows)

SELECT * FROM t_multi_charset_partkey WHERE part=_gbk'é«˜æ–¯DB' collate gbk_chinese_ci order by 1,2;
   part   |  part2   | a 
----------+----------+---
 æ¥‚æ¨»æŸ‰DB | æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | æ¥‚æ¨»æŸ‰db | 2
(2 rows)

-- -- -- partiton ddl
ALTER TABLE t_multi_charset_partkey RENAME PARTITION FOR(_gbk'é«˜æ–¯DB', _gbk'é«˜æ–¯db') TO p1_1;
SELECT * FROM t_multi_charset_partkey PARTITION(p1_1) order by 1,2;
   part   |  part2   | a 
----------+----------+---
 æ¥‚æ¨»æŸ‰DB | æ¥‚æ¨»æŸ‰DB | 1
 æ¥‚æ¨»æŸ‰db | æ¥‚æ¨»æŸ‰db | 2
(2 rows)

DROP TABLE t_multi_charset_partkey;
-- -- -- gbk
CREATE TABLE t_multi_charset_partkey (part varchar(32) CHARACTER set gbk collate gbk_bin, a int)
    PARTITION BY RANGE(part) (
        partition p1 values less than('é«˜æ–¯DB'),
        partition p2 values less than(MAXVALUE)
); -- error
ERROR:  difference between the charset of column part and the database encoding has not supported
-- -- test column default value
CREATE TABLE t_default_charset(
    a varchar(32) character set gbk collate gbk_bin DEFAULT 'é«˜æ–¯DB',
    b varchar(32) character set utf8mb4 collate utf8mb4_unicode_ci GENERATED ALWAYS AS (a) STORED,
    c varchar(32) character set utf8mb4 collate utf8mb4_unicode_ci GENERATED ALWAYS AS (a||_utf8mb4'é«˜æ–¯DB') STORED);
INSERT INTO t_default_charset VALUES(DEFAULT, DEFAULT, DEFAULT);
select * from t_default_charset;
   a    |   b    |      c       
--------+--------+--------------
 é«˜æ–¯DB | é«˜æ–¯DB | é«˜æ–¯DBé«˜æ–¯DB
(1 row)

DROP TABLE t_default_charset;
-- -- test cstore
create table charset_cstore(id int, val varchar(32) charset gbk collate "gbk_bin") with (orientation=column); -- not support yet
ERROR:  difference between the charset of column val and the database encoding has not supported
create table charset_cstore(id int, val varchar(32) charset utf8mb4 collate "utf8mb4_bin") with (orientation=column);
EXPLAIN (COSTS OFF)
SELECT * FROM charset_cstore ORDER BY val; -- b collation is not supported by vector plan
                   QUERY PLAN                    
-------------------------------------------------
 Sort
   Sort Key: val COLLATE utf8mb4_bin
   ->  Result
         ->  Row Adapter
               ->  CStore Scan on charset_cstore
(5 rows)

DROP TABLE charset_cstore;
-- ------------------------------------------
-- SET NAMES GBK;
SET NAMES 'GBK';
SHOW client_encoding;
 client_encoding 
-----------------
 GBK
(1 row)

SHOW server_encoding;
 server_encoding 
-----------------
 UTF8
(1 row)

SHOW character_set_connection;
 character_set_connection 
--------------------------
 GBK
(1 row)

SHOW collation_connection;
 collation_connection 
----------------------
 gbk_chinese_ci
(1 row)

-- ä¸­æ–‡
SELECT CAST('é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST(_binary'é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST(_utf8mb4'é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT CAST(_gbk'é«˜æ–¯' AS binary);
     binary     
----------------
 \xe9ab98e696af
(1 row)

SELECT _binary'é«˜æ–¯';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4'é«˜æ–¯';
 ?column? 
----------
 ¸ßË¹
(1 row)

SELECT _gbk'é«˜æ–¯';
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT _binary X'E9AB98E696AF';
    ?column?    
----------------
 \xe9ab98e696af
(1 row)

SELECT _utf8mb4 X'E9AB98E696AF';
 ?column? 
----------
 ¸ßË¹
(1 row)

SELECT _gbk X'E9AB98E696AF';
 ?column? 
----------
 é«˜æ–¯
(1 row)

SELECT 'æ¥‚æ¨»æŸ‰'; -- ERROR 'æ¥‚æ¨»æŸ‰'(\xe6a582e6a8bbe69f89) will be converted to utf8 first
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
SELECT CONVERT_TO(_utf8mb4'æ¥‚æ¨»æŸ‰', 'gbk'); -- ERROR 'æ¥‚æ¨»æŸ‰'(\xe6a582e6a8bbe69f89) will be converted to utf8 first
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
SELECT CONVERT_TO(_utf8mb4'é«˜æ–¯', 'gbk');
 convert_to 
------------
 \xb8dfcbb9
(1 row)

-- -- -- DML ä¸­æ–‡ utf8mb4 COLUMNS
DROP TABLE IF EXISTS t_charset_utf8mb4;
NOTICE:  table "t_charset_utf8mb4" does not exist, skipping
CREATE TABLE t_charset_utf8mb4(
	id int auto_increment primary key,
	a text charset utf8mb4 collate 'utf8mb4_bin',
	b varbinary(16)
);
NOTICE:  CREATE TABLE will create implicit sequence "t_charset_utf8mb4_id_seq" for serial column "t_charset_utf8mb4.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t_charset_utf8mb4_pkey" for table "t_charset_utf8mb4"
INSERT INTO t_charset_utf8mb4(a,b) VALUES('é«˜æ–¯', 'é«˜æ–¯');
INSERT INTO t_charset_utf8mb4(a,b) VALUES('æ¥‚æ¨»æŸ‰', 'æ¥‚æ¨»æŸ‰'); -- ERROR
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
INSERT INTO t_charset_utf8mb4(a,b) VALUES('é«˜æ–¯DB', 'é«˜æ–¯DB');
INSERT INTO t_charset_utf8mb4(a,b) VALUES(_utf8mb4'é«˜æ–¯DB', (_utf8mb4'é«˜æ–¯DB')::varbinary(16));
INSERT INTO t_charset_utf8mb4(a,b) VALUES(_utf8mb4'é«˜æ–¯DB' COLLATE 'utf8mb4_unicode_ci',
    (_utf8mb4'é«˜æ–¯DB' COLLATE 'utf8mb4_unicode_ci')::varbinary(16));
INSERT INTO t_charset_utf8mb4 SELECT 6,_utf8mb4'é«˜æ–¯DB', (_utf8mb4'é«˜æ–¯DB')::varbinary(16);
-- -- -- -- test deparse for explain and select into
EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯DB';
            QUERY PLAN            
----------------------------------
 Seq Scan on t_charset_utf8mb4
   Filter: (a = 'é«˜æ–¯DB'::text)
(2 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯DB' into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci;
                QUERY PLAN                
------------------------------------------
 Seq Scan on t_charset_utf8mb4
   Filter: ((a)::text = 'é«˜æ–¯db'::text)
(2 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a COLLATE utf8mb4_unicode_ci =_gbk'é«˜æ–¯db';
                QUERY PLAN                
------------------------------------------
 Seq Scan on t_charset_utf8mb4
   Filter: ((a)::text = 'é«˜æ–¯db'::text)
(2 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a COLLATE utf8mb4_unicode_ci =_gbk'é«˜æ–¯db' into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1;
              QUERY PLAN              
--------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: (a = '¸ßË¹DB'::text)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | ¸ßË¹DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1;
              QUERY PLAN              
--------------------------------------
 Limit
   ->  Seq Scan on t_charset_utf8mb4
         Filter: (a = '¸ßË¹db'::text)
(3 rows)

SELECT id,a FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1 into @id_res,@a_res;
ERROR:  COLLATION "utf8mb4_unicode_ci" is not valid for CHARACTER SET "GBK"
LINE 1: ...E a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1 in...
                                                             ^
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | ¸ßË¹DB
(1 row)

-- -- -- -- test condition
SELECT * FROM t_charset_utf8mb4 WHERE a='æ¥‚æ¨»æŸ‰' ORDER BY id; -- ERROR
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
SELECT * FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯' ORDER BY id;
 id |   a    |       b        
----+--------+----------------
  1 | é«˜æ–¯ | \xe9ab98e696af
(1 row)

SELECT * FROM t_charset_utf8mb4 WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
(1 row)

SELECT * FROM t_charset_utf8mb4 WHERE a=_binary'é«˜æ–¯DB' ORDER BY id; -- ERROR
 id |   a    |         b          
----+--------+--------------------
  3 | ¸ßË¹DB | \xe9ab98e696af4442
  4 | ¸ßË¹DB | \xe9ab98e696af4442
  6 | ¸ßË¹DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯DB' ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  3 | ¸ßË¹DB | \xe9ab98e696af4442
  4 | ¸ßË¹DB | \xe9ab98e696af4442
  6 | ¸ßË¹DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_utf8mb4 WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  3 | ¸ßË¹DB | \xe9ab98e696af4442
  4 | ¸ßË¹DB | \xe9ab98e696af4442
  6 | ¸ßË¹DB | \xe9ab98e696af4442
(3 rows)

UPDATE t_charset_utf8mb4 SET a='é«˜æ–¯DB', b='é«˜æ–¯DB'
    WHERE a=_utf8mb4'é«˜æ–¯DB' COLLATE 'utf8mb4_unicode_ci';
UPDATE t_charset_utf8mb4 SET a=_utf8mb4'é«˜æ–¯DB', b=(_utf8mb4'é«˜æ–¯DB')::varbinary(16)
	WHERE a='æ¥‚æ¨»æŸ‰'; -- ERROR
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
UPDATE t_charset_utf8mb4 SET a=_utf8mb4'é«˜æ–¯DB', b=(_utf8mb4'é«˜æ–¯DB')::varbinary(16)
	WHERE a=_utf8mb4'é«˜æ–¯DB';
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  1 | é«˜æ–¯   | \xe9ab98e696af
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
  3 | é«˜æ–¯DB | \xe9ab98e696af4442
  4 | é«˜æ–¯DB | \xe9ab98e696af4442
  6 | é«˜æ–¯DB | \xe9ab98e696af4442
(5 rows)

DELETE FROM t_charset_utf8mb4 WHERE a='é«˜æ–¯';
DELETE FROM t_charset_utf8mb4 WHERE a='é«˜æ–¯DB';
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id | a | b 
----+---+---
(0 rows)

-- -- -- -- test assign expr
INSERT INTO t_charset_utf8mb4(a,b) VALUES(CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16));
INSERT INTO t_charset_utf8mb4 SELECT 0, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16);
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  7 | é«˜æ–¯DB | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

INSERT INTO t_charset_utf8mb4(id,a,b) VALUES(7, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16)) ON DUPLICATE KEY UPDATE a=CONCAT('é«˜æ–¯','db');
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

UPDATE t_charset_utf8mb4 SET a=CONCAT('DB','é«˜æ–¯'), b=(CONCAT('DB','é«˜æ–¯'))::varbinary(16)
	WHERE a=CONCAT('é«˜æ–¯','DB');
SELECT * FROM t_charset_utf8mb4 ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | DBé«˜æ–¯ | \x4442e9ab98e696af
(2 rows)

DROP TABLE IF EXISTS t_charset_utf8mb4;
-- -- -- DML ä¸­æ–‡ gbk COLUMNS
DROP TABLE IF EXISTS t_charset_gbk;
NOTICE:  table "t_charset_gbk" does not exist, skipping
CREATE TABLE t_charset_gbk(
	id int auto_increment primary key,
	a text charset gbk collate "gbk_bin",
	b varbinary(16)
);
NOTICE:  CREATE TABLE will create implicit sequence "t_charset_gbk_id_seq" for serial column "t_charset_gbk.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t_charset_gbk_pkey" for table "t_charset_gbk"
INSERT INTO t_charset_gbk(a,b) VALUES('é«˜æ–¯', 'é«˜æ–¯');
INSERT INTO t_charset_gbk(a,b) VALUES('é«˜æ–¯DB', 'é«˜æ–¯DB');
INSERT INTO t_charset_gbk(a,b) VALUES(_utf8mb4'é«˜æ–¯DB', (_utf8mb4'é«˜æ–¯DB')::varbinary(16));
INSERT INTO t_charset_gbk(a,b) VALUES(_utf8mb4'é«˜æ–¯DB' COLLATE 'utf8mb4_unicode_ci',
    (_utf8mb4'é«˜æ–¯DB' COLLATE 'utf8mb4_unicode_ci')::varbinary(16));
INSERT INTO t_charset_gbk(a,b) VALUES('æ¥‚æ¨»æŸ‰', 'æ¥‚æ¨»æŸ‰'); -- ERROR
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
INSERT INTO t_charset_gbk SELECT 6,_utf8mb4'é«˜æ–¯DB', (_utf8mb4'é«˜æ–¯DB')::varbinary(16);
-- -- -- -- test deparse for explain and select into
EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯DB';
            QUERY PLAN            
----------------------------------
 Seq Scan on t_charset_gbk
   Filter: (a = 'é«˜æ–¯DB'::text)
(2 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯DB' into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci;
            QUERY PLAN            
----------------------------------
 Seq Scan on t_charset_gbk
   Filter: (a = 'é«˜æ–¯db'::text)
(2 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res |  @a_res  
---------+----------
       2 | é«˜æ–¯DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: (a = '¸ßË¹DB'::text COLLATE pg_catalog.gbk_bin)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯DB' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | ¸ßË¹DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1;
                  QUERY PLAN                  
----------------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: ((a)::text = '¸ßË¹db'::text)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1 into @id_res,@a_res;
ERROR:  COLLATION "utf8mb4_unicode_ci" is not valid for CHARACTER SET "GBK"
LINE 1: ...tf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci LIMIT 1 into @id...
                                                             ^
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | ¸ßË¹DB
(1 row)

EXPLAIN (costs off)
SELECT id,a FROM t_charset_gbk WHERE a COLLATE gbk_chinese_ci =_utf8mb4'é«˜æ–¯db' LIMIT 1;
                  QUERY PLAN                  
----------------------------------------------
 Limit
   ->  Seq Scan on t_charset_gbk
         Filter: ((a)::text = '¸ßË¹db'::text)
(3 rows)

SELECT id,a FROM t_charset_gbk WHERE a COLLATE gbk_chinese_ci =_utf8mb4'é«˜æ–¯db' LIMIT 1 into @id_res,@a_res;
SELECT @id_res,@a_res;
 @id_res | @a_res 
---------+--------
       3 | ¸ßË¹DB
(1 row)

-- -- -- -- test condition
SELECT * FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯' ORDER BY id;
 id |   a    |       b        
----+--------+----------------
  1 | é«˜æ–¯ | \xe9ab98e696af
(1 row)

SELECT * FROM t_charset_gbk WHERE a=_gbk'é«˜æ–¯db' COLLATE gbk_chinese_ci ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
(1 row)

SELECT * FROM t_charset_gbk WHERE a=_binary'é«˜æ–¯DB' ORDER BY id; -- ERROR
 id |    a     |         b          
----+----------+--------------------
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
(1 row)

SELECT * FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯DB' ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  3 | ¸ßË¹DB | \xe9ab98e696af4442
  4 | ¸ßË¹DB | \xe9ab98e696af4442
  6 | ¸ßË¹DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯db' COLLATE utf8mb4_unicode_ci ORDER BY id;
 id |   a    |         b          
----+--------+--------------------
  3 | ¸ßË¹DB | \xe9ab98e696af4442
  4 | ¸ßË¹DB | \xe9ab98e696af4442
  6 | ¸ßË¹DB | \xe9ab98e696af4442
(3 rows)

SELECT * FROM t_charset_gbk WHERE a=_utf8mb4'é«˜æ–¯' ORDER BY id;
 id | a | b 
----+---+---
(0 rows)

SELECT * FROM t_charset_gbk WHERE a='æ¥‚æ¨»æŸ‰' ORDER BY id; -- ERROR
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
UPDATE t_charset_gbk SET a='é«˜æ–¯DB', b='é«˜æ–¯DB'
	WHERE a=_utf8mb4'é«˜æ–¯DB' COLLATE 'utf8mb4_unicode_ci';
UPDATE t_charset_gbk SET a=_utf8mb4'é«˜æ–¯DB', b=(_utf8mb4'é«˜æ–¯DB')::varbinary(16)
	WHERE a='æ¥‚æ¨»æŸ‰'; -- ERROR
ERROR:  invalid byte sequence for encoding "GBK": 0x89 0x27
UPDATE t_charset_gbk SET a=_utf8mb4'é«˜æ–¯DB', b=(_utf8mb4'é«˜æ–¯DB')::varbinary(16)
	WHERE a=_utf8mb4'é«˜æ–¯DB';
SELECT * FROM t_charset_gbk ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  1 | é«˜æ–¯   | \xe9ab98e696af
  2 | é«˜æ–¯DB | \xe9ab98e696af4442
  3 | é«˜æ–¯DB | \xe9ab98e696af4442
  4 | é«˜æ–¯DB | \xe9ab98e696af4442
  6 | é«˜æ–¯DB | \xe9ab98e696af4442
(5 rows)

DELETE FROM t_charset_gbk WHERE a='é«˜æ–¯';
DELETE FROM t_charset_gbk WHERE a::varbinary(16)= _binary'é«˜æ–¯DB';
SELECT * FROM t_charset_gbk ORDER BY id;
 id | a | b 
----+---+---
(0 rows)

-- -- -- -- test assign expr
INSERT INTO t_charset_gbk(a,b) VALUES(CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16));
INSERT INTO t_charset_gbk SELECT 0, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16);
SELECT * FROM t_charset_gbk ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  7 | é«˜æ–¯DB | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

INSERT INTO t_charset_gbk(id,a,b) VALUES(7, CONCAT('é«˜æ–¯','DB'), (CONCAT('é«˜æ–¯','DB'))::varbinary(16)) ON DUPLICATE KEY UPDATE a=CONCAT('é«˜æ–¯','db');
SELECT * FROM t_charset_gbk ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | é«˜æ–¯DB | \xe9ab98e696af4442
(2 rows)

UPDATE t_charset_gbk SET a=CONCAT('DB','é«˜æ–¯'), b=(CONCAT('DB','é«˜æ–¯'))::varbinary(16)
	WHERE a=CONCAT('é«˜æ–¯','DB');
SELECT * FROM t_charset_gbk ORDER BY id;
 id |    a     |         b          
----+----------+--------------------
  7 | é«˜æ–¯db | \xe9ab98e696af4442
  8 | DBé«˜æ–¯ | \x4442e9ab98e696af
(2 rows)

DROP TABLE IF EXISTS t_charset_gbk;
-- test multi charset
CREATE TABLE t_diff_charset_columns(
    futf8_bin varchar(16) CHARSET utf8mb4 COLLATE 'utf8mb4_bin',
    futf8_uni varchar(16) CHARSET utf8mb4 COLLATE 'utf8mb4_unicode_ci',
    futf8_gen varchar(16) CHARSET utf8mb4 COLLATE 'utf8mb4_general_ci',
    fgbk_bin varchar(16) CHARSET gbk COLLATE 'gbk_bin',
    fgbk_chi varchar(16) CHARSET gbk COLLATE 'gbk_chinese_ci',
    fgb18030_bin varchar(16) CHARSET gb18030 COLLATE 'gb18030_bin',
    fgb18030_chi varchar(16) CHARSET gb18030 COLLATE 'gb18030_chinese_ci',
    fbin varbinary(16),
    fblob blob,
    fbit bit varying(64)
);
INSERT INTO t_diff_charset_columns(futf8_bin, futf8_uni, futf8_gen, fgbk_bin, fgbk_chi, fgb18030_bin, fgb18030_chi, fbin, fblob, fbit)
    VALUES('é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'é«˜æ–¯db', 'é«˜æ–¯DB', 'E9AB98E696AF', B'111010011010101110011000111001101001011010101111');
-- -- test character length
SELECT futf8_bin,
       futf8_uni,
       fgbk_bin,
       fgbk_chi,
       fgb18030_bin,
       fgb18030_chi,
       fbin FROM t_diff_charset_columns;
 futf8_bin | futf8_uni | fgbk_bin | fgbk_chi | fgb18030_bin | fgb18030_chi |        fbin        
-----------+-----------+----------+----------+--------------+--------------+--------------------
 é«˜æ–¯DB  | é«˜æ–¯db  | é«˜æ–¯DB | é«˜æ–¯db | é«˜æ–¯DB     | é«˜æ–¯db     | \xe9ab98e696af4442
(1 row)

SELECT char_length(futf8_bin),
       char_length(futf8_uni),
       char_length(fgbk_bin),
       char_length(fgbk_chi),
       char_length(fgb18030_bin),
       char_length(fgb18030_chi),
       length(fbin) FROM t_diff_charset_columns; -- 5
 char_length | char_length | char_length | char_length | char_length | char_length | length 
-------------+-------------+-------------+-------------+-------------+-------------+--------
           5 |           5 |           5 |           5 |           5 |           5 |      8
(1 row)

SELECT lengthb(futf8_bin),
       lengthb(futf8_uni),
       lengthb(fgbk_bin),
       lengthb(fgbk_chi),
       lengthb(fgb18030_bin),
       lengthb(fgb18030_chi),
       length(fbin) FROM t_diff_charset_columns;
 lengthb | lengthb | lengthb | lengthb | lengthb | lengthb | length 
---------+---------+---------+---------+---------+---------+--------
      11 |      11 |       8 |       8 |       8 |       8 |      8
(1 row)

-- test prefixkey index
CREATE INDEX idx_prefixkey_futf8_bin on t_diff_charset_columns (futf8_bin(2) text_pattern_ops);
set enable_seqscan=off;
EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin LIKE 'é«˜æ–¯%';
                             QUERY PLAN                             
--------------------------------------------------------------------
 Index Scan using idx_prefixkey_futf8_bin on t_diff_charset_columns
   Index Cond: ((futf8_bin)::text = 'é«˜æ'::text)
   Filter: ((futf8_bin)::text ~~ 'é«˜æ–¯%'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin LIKE 'é«˜æ–¯%';
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin = 'é«˜æ–¯DB';
                             QUERY PLAN                             
--------------------------------------------------------------------
 Index Scan using idx_prefixkey_futf8_bin on t_diff_charset_columns
   Index Cond: ((futf8_bin)::text = 'é«˜æ'::text)
   Filter: ((futf8_bin)::text = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_futf8_bin) */ futf8_bin FROM t_diff_charset_columns WHERE futf8_bin = 'é«˜æ–¯DB';
 futf8_bin 
-----------
 é«˜æ–¯DB
(1 row)

CREATE INDEX idx_prefixkey_fgbk_bin on t_diff_charset_columns (fgbk_bin(2) text_pattern_ops);
EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin LIKE 'é«˜æ–¯%';
                            QUERY PLAN                             
-------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgbk_bin on t_diff_charset_columns
   Index Cond: ((fgbk_bin)::text = 'é«˜æ'::text)
   Filter: ((fgbk_bin)::text ~~ 'é«˜æ–¯%'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin LIKE 'é«˜æ–¯%';
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin = 'é«˜æ–¯DB';
                            QUERY PLAN                             
-------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgbk_bin on t_diff_charset_columns
   Index Cond: ((fgbk_bin)::text = 'é«˜æ'::text)
   Filter: ((fgbk_bin)::text = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgbk_bin) */ fgbk_bin FROM t_diff_charset_columns WHERE fgbk_bin = 'é«˜æ–¯DB';
 fgbk_bin 
----------
 é«˜æ–¯DB
(1 row)

CREATE INDEX idx_prefixkey_fgb18030_bin on t_diff_charset_columns (fgb18030_bin(2) text_pattern_ops);
EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin LIKE 'é«˜æ–¯%';
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgb18030_bin on t_diff_charset_columns
   Index Cond: ((fgb18030_bin)::text = 'é«˜æ'::text)
   Filter: ((fgb18030_bin)::text ~~ 'é«˜æ–¯%'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin LIKE 'é«˜æ–¯%';
 fgb18030_bin 
--------------
 é«˜æ–¯DB
(1 row)

EXPLAIN (costs false)
SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin = 'é«˜æ–¯DB';
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Index Scan using idx_prefixkey_fgb18030_bin on t_diff_charset_columns
   Index Cond: ((fgb18030_bin)::text = 'é«˜æ'::text)
   Filter: ((fgb18030_bin)::text = 'é«˜æ–¯DB'::text)
(3 rows)

SELECT /*+ indexscan(t_diff_charset_columns idx_prefixkey_fgb18030_bin) */ fgb18030_bin FROM t_diff_charset_columns WHERE fgb18030_bin = 'é«˜æ–¯DB';
 fgb18030_bin 
--------------
 é«˜æ–¯DB
(1 row)

reset enable_seqscan;
DROP TABLE t_diff_charset_columns;
\c postgres
