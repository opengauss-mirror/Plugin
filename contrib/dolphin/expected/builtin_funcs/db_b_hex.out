create schema db_b_hex;
set current_schema to 'db_b_hex';
select hex(int1(255));
WARNING:  tinyint out of range
CONTEXT:  referenced column: to_number
SQL function "int1" statement 1
referenced column: hex
 hex 
-----
 7F
(1 row)

select hex(int1(256));
WARNING:  tinyint out of range
CONTEXT:  referenced column: to_number
SQL function "int1" statement 1
referenced column: hex
 hex 
-----
 7F
(1 row)

-- max value for int32
select hex(2147483647);
   hex    
----------
 7FFFFFFF
(1 row)

-- max value for int64
select hex(9223372036854775807);
       hex        
------------------
 7FFFFFFFFFFFFFFF
(1 row)

-- out of range for int64
select hex(9223372036854775808);
WARNING:  bigint out of range
CONTEXT:  referenced column: hex
       hex        
------------------
 7fffffffffffffff
(1 row)

select hex(9223372036854775811);
WARNING:  bigint out of range
CONTEXT:  referenced column: hex
       hex        
------------------
 7fffffffffffffff
(1 row)

select hex(1546546574654561321324564564543453);
WARNING:  bigint out of range
CONTEXT:  referenced column: hex
       hex        
------------------
 ffffffffffffffff
(1 row)

-- test for negative numbers
select hex(-1);
       hex        
------------------
 FFFFFFFFFFFFFFFF
(1 row)

select hex(-2);
       hex        
------------------
 FFFFFFFFFFFFFFFE
(1 row)

select hex(-123123123);
       hex        
------------------
 FFFFFFFFF8A94A4D
(1 row)

select hex(-9223372036854775808);
       hex        
------------------
 8000000000000000
(1 row)

-- test for float
select hex(12.34);
 hex 
-----
 C
(1 row)

select hex(12.55);
 hex 
-----
 D
(1 row)

-- test for bit
select hex(b'0');
 hex 
-----
 00
(1 row)

select hex(b'1');
 hex 
-----
 01
(1 row)

select hex(b'1111');
 hex 
-----
 0F
(1 row)

select hex(b'111100');
 hex 
-----
 3C
(1 row)

select hex(B'1110110');
 hex 
-----
 76
(1 row)

select hex(B'1110110111111100001110111110111');
   hex    
----------
 76FE1DF7
(1 row)

select hex(b'0000');
 hex 
-----
 00
(1 row)

select hex(b'00001');
 hex 
-----
 01
(1 row)

select hex(b'00000000');
 hex 
-----
 00
(1 row)

select hex(b'000000001');
 hex  
------
 0001
(1 row)

select hex(b'000000000000');
 hex  
------
 0000
(1 row)

select hex(b'0000000000001');
 hex  
------
 0001
(1 row)

select hex(TRUE);
 hex 
-----
 1
(1 row)

select hex(FALSE);
 hex 
-----
 0
(1 row)

select hex('abcde');
    hex     
------------
 6162636465
(1 row)

select hex('12.34');
    hex     
------------
 31322E3334
(1 row)

select hex(NULL);
 hex 
-----
 
(1 row)

select hex('');
 hex 
-----
 
(1 row)

create table bytea_to_hex_test(c1 bytea);
insert into bytea_to_hex_test values ('123');
insert into bytea_to_hex_test values ('abc');
select hex(c1) from bytea_to_hex_test;
  hex   
--------
 313233
 616263
(2 rows)

-- test for bytea with hex format
drop table if exists bytea_to_hex_test;
create table bytea_to_hex_test(c1 bytea);
insert into bytea_to_hex_test values (E'\\xDEADBEEF');
select hex(c1) from bytea_to_hex_test;
   hex    
----------
 DEADBEEF
(1 row)

-- test for blob with hex format
set dolphin.b_compatibility_mode to on;
create table t1 (c1 tinyblob, c2 blob, c3 mediumblob, c4 longblob);
insert into t1 values('aa', 'aa', 'aa', 'aa');
insert into t1 values(12312, 12312, 12312, 12312);
select hex(c1) as "tinyblob_result", hex(c2) as "blob_result", hex(c3) as "mediumblob_result", hex(c4) as "longblob_result" from t1;
 tinyblob_result | blob_result | mediumblob_result | longblob_result 
-----------------+-------------+-------------------+-----------------
 6161            | 6161        | 6161              | 6161
 3132333132      | 3132333132  | 3132333132        | 3132333132
(2 rows)

set b_format_behavior_compat_options=enable_set_variables;
set bytea_output=escape;
create table t_binary(
c1 int not null,
c2 binary,
c3 binary(10),
c4 binary(255),
c5 varbinary(1),
c6 varbinary(10),
c7 varbinary(255)) charset utf8mb3;
WARNING:  utf8mb3 is not a valid encoding name. default value set
insert into t_binary values (
1, substr(hex('a熊猫竹竹爱吃竹子'),1,1), substr(hex('a熊猫竹竹爱吃竹子'),1,4), substr(repeat(hex('a熊猫竹竹爱吃竹子'), 10),1,255),
substr(hex('a熊猫竹竹爱吃竹子'),1,1), substr(hex('a熊猫竹竹爱吃竹子'),1,4), substr(repeat(hex('a熊猫竹竹爱吃竹子'), 10),1,255));
select c1, cast(c2 as char), cast(c3 as char), cast(c4 as char), cast(c5 as
char), cast(c6 as char), cast(c7 as char) from t_binary order by
1,2,3,4,5,6,7;
 c1 | c2 |  c3  |                                                                                                                               c4                                                                                                                                | c5 |  c6  |                                                                                                                               c7                                                                                                                                

  1 | 6  | 61E7 | 61E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E78 | 6  | 61E7 | 61E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E7868AE78CABE7ABB9E7ABB9E788B1E59083E7ABB9E5AD9061E78
(1 row)

drop table if exists t_binary;
drop table if exists t1;
-- test for enum with hex format
create table enum_to_hex_test_table(c enum('a', 'b', 'c'));
insert into enum_to_hex_test_table values(1);
insert into enum_to_hex_test_table values(2);
insert into enum_to_hex_test_table values(3);
select hex(c) from enum_to_hex_test_table;
 hex 
-----
 61
 62
 63
(3 rows)

create table test_hex as select hex(c) from enum_to_hex_test_table;
\d test_hex
       Table "db_b_hex.test_hex"
 Column |       Type        | Modifiers 
--------+-------------------+-----------
 hex    | character varying | 

drop table test_hex;
drop table enum_to_hex_test_table;
drop schema db_b_hex cascade;
NOTICE:  drop cascades to table bytea_to_hex_test
reset current_schema;
