create schema test_charset;
set current_schema to 'test_charset';
set dolphin.b_compatibility_mode = off;
create database test1;
create database test2 encoding 'utf8';
create database test2 charset 'utf8';
ERROR:  create schema/database with charset need to set b_compatibility_mode on.
drop database if exists test1;
drop database if exists test2;
set dolphin.b_compatibility_mode = on;
create database test3;
select nspcollation from pg_namespace where nspname='test3';
 nspcollation 
--------------
             
(1 row)

create table test3.test33(a varchar(10));
drop table test3.test33;
create database test4 encoding 'utf8';
create database test5 charset 'utf8';
create database test6 with charset 'utf8';
ERROR:  syntax error at or near "charset"
LINE 1: create database test6 with charset 'utf8';
                                   ^
create database test7 with encoding 'utf8';
drop database if exists test3;
drop database if exists test4;
NOTICE:  schema "test4" does not exist, skipping
drop database if exists test5;
drop database if exists test6;
NOTICE:  schema "test6" does not exist, skipping
drop database if exists test7;
NOTICE:  schema "test7" does not exist, skipping
create database if not exists test4 encoding 'utf8';
NOTICE:  database "test4" already exists, skipping
drop database test4;
ERROR:  schema "test4" does not exist
create database if not exists test5 charset 'utf8';
drop database test5;
set dolphin.b_compatibility_mode = off;
create database test1;
alter database test1 connection limit 200;
alter database test1;
alter database test1 charset 'utf8';
ERROR:  create database with charset need to set b_compatibility_mode on.
alter database test1 collate 'utf8';
ERROR:  create database with charset need to set b_compatibility_mode on.
drop database if exists test1;
set dolphin.b_compatibility_mode = on;
alter database test1 connection limit 200;
ERROR:  database "test1" does not exist
alter database test1 ;
ERROR:  database "test1" does not exist
alter database test1 charset 'utf8';
ERROR:  schema "test1" does not exist
create database test1;
alter database test1 charset 'utf8';
alter database test1 collate 'utf8';
WARNING:  Invalid collation detected. default value set
drop database if exists test1;
select 'a' > 'A' collate 'aaa';
WARNING:  Invalid collation detected. default value set
 ?column? 
----------
 f
(1 row)

select 'a' > 'A' collate 'utf8mb4_bin';
 ?column? 
----------
 t
(1 row)

-- invalid column collate
create table test_collate0(c1 text charset 'utf8mb4' collate 'binary');
create table test_collate1 (c1 text collate 'aaa', c2 text collate 'utf8mb4_bin', c3 text charset 'aaa' collate 'aaa');
WARNING:  aaa is not a valid encoding name. default value set
WARNING:  Invalid collation for column c1 detected. default value set
WARNING:  Invalid collation for column c3 detected. default value set
alter table test_collate1 add column c4 text charset 'aaa' collate 'aaa';
WARNING:  aaa is not a valid encoding name. default value set
WARNING:  Invalid collation for column c4 detected. default value set
alter table test_collate1 modify column c1 text collate 'bbb';
WARNING:  Invalid collation for column c1 detected. default value set
select pg_get_tabledef('test_collate1');
                    pg_get_tabledef                    
-------------------------------------------------------
 SET search_path = test_charset;                      +
 CREATE TABLE test_collate1 (                         +
     c1 text,                                         +
     c2 text CHARACTER SET "UTF8" COLLATE utf8mb4_bin,+
     c3 text,                                         +
     c4 text                                          +
 )                                                    +
 WITH (orientation=row, compression=no);
(1 row)

-- invalid table collate
create table test_collate2(c1 text collate 'aaa', c2 text collate 'utf8mb4_bin')charset 'aaa';
WARNING:  aaa is not a valid encoding name. default value set
WARNING:  Invalid collation for column c1 detected. default value set
alter table test_collate2 add column c4 text charset 'aaa' collate 'aaa';
WARNING:  aaa is not a valid encoding name. default value set
WARNING:  Invalid collation for column c4 detected. default value set
alter table test_collate2 modify column c1 text collate 'bbb';
WARNING:  Invalid collation for column c1 detected. default value set
select pg_get_tabledef('test_collate2');
                    pg_get_tabledef                    
-------------------------------------------------------
 SET search_path = test_charset;                      +
 CREATE TABLE test_collate2 (                         +
     c1 text,                                         +
     c2 text CHARACTER SET "UTF8" COLLATE utf8mb4_bin,+
     c4 text                                          +
 )                                                    +
 CHARACTER SET = "UTF8" COLLATE = "utf8mb4_general_ci"+
 WITH (orientation=row, compression=no);
(1 row)

create table test_collate3(c1 text collate 'aaa', c2 text collate 'utf8mb4_bin')charset 'utf8' collate 'aaa';
WARNING:  Invalid collation for column c1 detected. default value set
WARNING:  Invalid collation detected. default value set
create table test_collate4(c1 text collate 'aaa', c2 text charset 'aaa', c3 text collate 'utf8mb4_general_ci')charset 'utf8mb4' collate 'utf8mb4_bin';
WARNING:  aaa is not a valid encoding name. default value set
WARNING:  Invalid collation for column c1 detected. default value set
alter table test_collate4 add column c4 text charset 'aaa' collate 'aaa';
WARNING:  aaa is not a valid encoding name. default value set
WARNING:  Invalid collation for column c4 detected. default value set
alter table test_collate4 modify column c1 text collate 'bbb';
WARNING:  Invalid collation for column c1 detected. default value set
create table test_collate5(c1 text collate 'aaa', c2 text collate 'utf8mb4_bin', c3 text)collate 'aaa';
WARNING:  Invalid collation for column c1 detected. default value set
WARNING:  Invalid collation detected. default value set
-- invalid schema collate
create schema test1 charset 'aaa';
WARNING:  aaa is not a valid encoding name. default value set
set schema 'test1';
create table test_collate6(c1 text, c2 text collate 'utf8mb4_bin');
create table test_collate7(c1 text, c2 text collate 'utf8mb4_bin');
create table test_collate8(c1 text) charset 'utf8';
create table test_collate9(c1 text) charset 'aaa';
WARNING:  aaa is not a valid encoding name. default value set
create table test_collate10(c1 text);
create schema if not exists sch_ddl_0078 character set = utf8 collate utf8_unicode_ci;
drop schema sch_ddl_0078;
--test binary
set dolphin.b_compatibility_mode = true;
set bytea_output = 'escape';
drop table if exists test_binary1;
NOTICE:  table "test_binary1" does not exist, skipping
create table test_binary1(
    f1 blob collate 'binary'
);
insert into test_binary1 values('ppp'),('PpP'),('PPP'),('AAA'),('Aaa'),('aaa'),('Š'),('S');
select distinct f1 from test_binary1 order by f1;
    f1    
----------
 AAA
 Aaa
 PPP
 PpP
 S
 aaa
 ppp
 \305\240
(8 rows)

select f1 from test_binary1 where f1 = 'ppp'::blob collate 'binary';
 f1  
-----
 ppp
(1 row)

select f1 from test_binary1 where f1 = 'ppp'::blob collate 'utf8mb4_bin';
 f1  
-----
 ppp
(1 row)

alter table test_binary1 add column f2 tinyblob collate 'binary';
insert into test_binary1 (f2) values('ppp'),('PpP'),('PPP'),('AAA'),('Aaa'),('aaa'),('Š'),('S');
select distinct f2 from test_binary1 order by f2;
    f2    
----------
 AAA
 Aaa
 PPP
 PpP
 S
 aaa
 ppp
 \305\240
 
(9 rows)

select f2 from test_binary1 where f2 = 'ppp'::blob collate 'binary';
 f2  
-----
 ppp
(1 row)

select f2 from test_binary1 where f2 = 'ppp'::blob collate 'utf8mb4_bin';
 f2  
-----
 ppp
(1 row)

alter table test_binary1 add column f3 mediumblob collate 'binary';
alter table test_binary1 add column f4 binary collate 'binary';
alter table test_binary1 add column f5 varbinary collate 'binary';
alter table test_binary1 add column f6 text collate 'binary';
alter table test_binary1 add column f7 int collate 'binary';
ERROR:  collations are not supported by type integer
LINE 1: alter table test_binary1 add column f7 int collate 'binary';
                                                   ^
drop table if exists test_binary2;
NOTICE:  table "test_binary2" does not exist, skipping
create table test_binary2(c1 text, c2 varchar(10), c3 char(10), c4 tinytext) collate 'binary';
alter table test_binary2 add column c5 text;
alter table test_binary2 add column c6 varchar(10);
alter table test_binary2 add column c6 varchar(10) collate 'utf8mb4_bin';
ERROR:  column "c6" of relation "test_binary2" already exists
alter table test_binary2 add column c7 char(10);
alter table test_binary2 add column c8 tinytext;
select pg_get_tabledef('test_binary2');
                          pg_get_tabledef                           
--------------------------------------------------------------------
 SET search_path = test1;                                          +
 CREATE TABLE test_binary2 (                                       +
     c1 blob CHARACTER SET "SQL_ASCII" COLLATE "binary",           +
     c2 "varbinary"(10) CHARACTER SET "SQL_ASCII" COLLATE "binary",+
     c3 "binary"(10) CHARACTER SET "SQL_ASCII" COLLATE "binary",   +
     c4 blob CHARACTER SET "SQL_ASCII" COLLATE "binary",           +
     c5 blob CHARACTER SET "SQL_ASCII" COLLATE "binary",           +
     c6 "varbinary"(10) CHARACTER SET "SQL_ASCII" COLLATE "binary",+
     c7 "binary"(10) CHARACTER SET "SQL_ASCII" COLLATE "binary",   +
     c8 blob CHARACTER SET "SQL_ASCII" COLLATE "binary"            +
 )                                                                 +
 CHARACTER SET = "SQL_ASCII" COLLATE = "binary"                    +
 WITH (orientation=row, compression=no);
(1 row)

drop schema test_charset cascade;
NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to table test_charset.test_collate0
drop cascades to table test_charset.test_collate1
drop cascades to table test_charset.test_collate2
drop cascades to table test_charset.test_collate3
drop cascades to table test_charset.test_collate4
drop cascades to table test_charset.test_collate5
reset current_schema;
