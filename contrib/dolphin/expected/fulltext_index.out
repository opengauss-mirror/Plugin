CREATE SCHEMA fulltext_test;
set current_schema to 'fulltext_test';
CREATE TABLE test (
id int unsigned auto_increment not null primary key,
title varchar,
boby text,
name name,
FULLTEXT (title, boby) WITH PARSER ngram
);
NOTICE:  CREATE TABLE will create implicit sequence "test_id_seq" for serial column "test.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey" for table "test"
\d test
              Table "fulltext_test.test"
 Column |       Type        |        Modifiers        
--------+-------------------+-------------------------
 id     | uint4             | not null AUTO_INCREMENT
 title  | character varying | 
 boby   | text              | 
 name   | name              | 
Indexes:
    "test_pkey" PRIMARY KEY, btree (id) TABLESPACE pg_default
    "test_to_tsvector_to_tsvector1_idx" gin (to_tsvector('"ngram"'::regconfig, title::text), to_tsvector('"ngram"'::regconfig, boby)) TABLESPACE pg_default

\d test_to_tsvector_to_tsvector1_idx
       Index "fulltext_test.test_to_tsvector_to_tsvector1_idx"
    Column    | Type |                   Definition                   
--------------+------+------------------------------------------------
 to_tsvector  | text | to_tsvector('"ngram"'::regconfig, title::text)
 to_tsvector1 | text | to_tsvector('"ngram"'::regconfig, boby)
gin, for table "fulltext_test.test"

DROP INDEX test_to_tsvector_to_tsvector1_idx;
ALTER TABLE test ADD FULLTEXT INDEX test_index_1 (title, boby) WITH PARSER ngram;
DROP INDEX test_index_1;
CREATE FULLTEXT INDEX test_index_1 ON test (title, boby) WITH PARSER ngram;
\d test_index_1
                  Index "fulltext_test.test_index_1"
    Column    | Type |                   Definition                   
--------------+------+------------------------------------------------
 to_tsvector  | text | to_tsvector('"ngram"'::regconfig, title::text)
 to_tsvector1 | text | to_tsvector('"ngram"'::regconfig, boby)
gin, for table "fulltext_test.test"

INSERT INTO test(title, boby, name) VALUES('test', '&67575@gauss', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('test1', 'gauss', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('test2', 'gauss2', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('test3', 'test', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('gauss_123_@', 'test', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('', '', 'opengauss');
INSERT INTO test(title, boby, name) VALUES(' ', ' ', ' ');
SELECT * FROM TEST;
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
 6  |             |              | opengauss
 7  |             |              |  
(7 rows)

SELECT * FROM TEST WHERE MATCH (title, boby) AGAINST ('test');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
(5 rows)

SELECT * FROM TEST WHERE MATCH (title, boby) AGAINST ('gauss');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 5  | gauss_123_@ | test         | opengauss
(4 rows)

DROP INDEX test_index_1;
CREATE FULLTEXT INDEX test_index_1 ON test (boby) WITH PARSER ngram;
\d test_index_1
              Index "fulltext_test.test_index_1"
   Column    | Type |               Definition                
-------------+------+-----------------------------------------
 to_tsvector | text | to_tsvector('"ngram"'::regconfig, boby)
gin, for table "fulltext_test.test"

SELECT * FROM test WHERE MATCH (boby) AGAINST ('test');
 id |    title    | boby |   name    
----+-------------+------+-----------
 4  | test3       | test | opengauss
 5  | gauss_123_@ | test | opengauss
(2 rows)

SELECT * FROM test WHERE MATCH (boby) AGAINST ('gauss');
 id | title |     boby     |   name    
----+-------+--------------+-----------
 1  | test  | &67575@gauss | opengauss
 2  | test1 | gauss        | opengauss
 3  | test2 | gauss2       | opengauss
(3 rows)

DROP INDEX test_index_1;
CREATE FULLTEXT INDEX test_index_1 ON test (title, boby, name) WITH PARSER ngram;
\d test_index_1
                  Index "fulltext_test.test_index_1"
    Column    | Type |                   Definition                   
--------------+------+------------------------------------------------
 to_tsvector  | text | to_tsvector('"ngram"'::regconfig, title::text)
 to_tsvector1 | text | to_tsvector('"ngram"'::regconfig, boby)
 to_tsvector2 | text | to_tsvector('"ngram"'::regconfig, name::text)
gin, for table "fulltext_test.test"

SELECT * FROM test WHERE MATCH (title, boby, name) AGAINST ('test');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
(5 rows)

SELECT * FROM test WHERE MATCH (title, boby, name) AGAINST ('gauss');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
 6  |             |              | opengauss
(6 rows)

SELECT * FROM test WHERE MATCH (title, boby, name) AGAINST ('opengauss');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
 6  |             |              | opengauss
(6 rows)

drop schema fulltext_test cascade;
NOTICE:  drop cascades to table test
reset current_schema;
