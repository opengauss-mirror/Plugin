CREATE SCHEMA fulltext_test;
set current_schema to 'fulltext_test';
CREATE TABLE test (
id int unsigned auto_increment not null primary key,
title varchar,
boby text,
name name,
FULLTEXT (title, boby) WITH PARSER ngram
);
NOTICE:  CREATE TABLE will create implicit sequence "test_id_seq" for serial column "test.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey" for table "test"
\d test
              Table "fulltext_test.test"
 Column |       Type        |        Modifiers        
--------+-------------------+-------------------------
 id     | uint4             | not null AUTO_INCREMENT
 title  | character varying | 
 boby   | text              | 
 name   | name              | 
Indexes:
    "test_pkey" PRIMARY KEY, btree (id) TABLESPACE pg_default
    "test_to_tsvector_to_tsvector1_idx" gin (to_tsvector('ngram'::regconfig, title::text), to_tsvector('ngram'::regconfig, boby)) TABLESPACE pg_default

\d test_to_tsvector_to_tsvector1_idx
      Index "fulltext_test.test_to_tsvector_to_tsvector1_idx"
    Column    | Type |                  Definition                  
--------------+------+----------------------------------------------
 to_tsvector  | text | to_tsvector('ngram'::regconfig, title::text)
 to_tsvector1 | text | to_tsvector('ngram'::regconfig, boby)
gin, for table "fulltext_test.test"

DROP INDEX test_to_tsvector_to_tsvector1_idx;
ALTER TABLE test ADD FULLTEXT INDEX test_index_1 (title, boby) WITH PARSER ngram;
DROP INDEX test_index_1;
CREATE FULLTEXT INDEX test_index_1 ON test (title, boby) WITH PARSER ngram;
\d test_index_1
                 Index "fulltext_test.test_index_1"
    Column    | Type |                  Definition                  
--------------+------+----------------------------------------------
 to_tsvector  | text | to_tsvector('ngram'::regconfig, title::text)
 to_tsvector1 | text | to_tsvector('ngram'::regconfig, boby)
gin, for table "fulltext_test.test"

INSERT INTO test(title, boby, name) VALUES('test', '&67575@gauss', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('test1', 'gauss', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('test2', 'gauss2', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('test3', 'test', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('gauss_123_@', 'test', 'opengauss');
INSERT INTO test(title, boby, name) VALUES('', '', 'opengauss');
INSERT INTO test(title, boby, name) VALUES(' ', ' ', ' ');
SELECT * FROM TEST;
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
 6  |             |              | opengauss
 7  |             |              |  
(7 rows)

SELECT * FROM TEST WHERE MATCH (title, boby) AGAINST ('test');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
(5 rows)

SELECT * FROM TEST WHERE MATCH (title, boby) AGAINST ('gauss');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 5  | gauss_123_@ | test         | opengauss
(4 rows)

DROP INDEX test_index_1;
CREATE FULLTEXT INDEX test_index_1 ON test (boby) WITH PARSER ngram;
\d test_index_1
             Index "fulltext_test.test_index_1"
   Column    | Type |              Definition               
-------------+------+---------------------------------------
 to_tsvector | text | to_tsvector('ngram'::regconfig, boby)
gin, for table "fulltext_test.test"

SELECT * FROM test WHERE MATCH (boby) AGAINST ('test');
 id |    title    | boby |   name    
----+-------------+------+-----------
 4  | test3       | test | opengauss
 5  | gauss_123_@ | test | opengauss
(2 rows)

SELECT * FROM test WHERE MATCH (boby) AGAINST ('gauss');
 id | title |     boby     |   name    
----+-------+--------------+-----------
 1  | test  | &67575@gauss | opengauss
 2  | test1 | gauss        | opengauss
 3  | test2 | gauss2       | opengauss
(3 rows)

DROP INDEX test_index_1;
CREATE FULLTEXT INDEX test_index_1 ON test (title, boby, name) WITH PARSER ngram;
\d test_index_1
                 Index "fulltext_test.test_index_1"
    Column    | Type |                  Definition                  
--------------+------+----------------------------------------------
 to_tsvector  | text | to_tsvector('ngram'::regconfig, title::text)
 to_tsvector1 | text | to_tsvector('ngram'::regconfig, boby)
 to_tsvector2 | text | to_tsvector('ngram'::regconfig, name::text)
gin, for table "fulltext_test.test"

SELECT * FROM test WHERE MATCH (title, boby, name) AGAINST ('test');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
(5 rows)

SELECT * FROM test WHERE MATCH (title, boby, name) AGAINST ('gauss');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
 6  |             |              | opengauss
(6 rows)

SELECT * FROM test WHERE MATCH (title, boby, name) AGAINST ('opengauss');
 id |    title    |     boby     |   name    
----+-------------+--------------+-----------
 1  | test        | &67575@gauss | opengauss
 2  | test1       | gauss        | opengauss
 3  | test2       | gauss2       | opengauss
 4  | test3       | test         | opengauss
 5  | gauss_123_@ | test         | opengauss
 6  |             |              | opengauss
(6 rows)

-- FULLTEXT INDEX with index_name
drop table if exists articles;
NOTICE:  table "articles" does not exist, skipping
CREATE TABLE articles (
ID int,
title VARCHAR(100),
FULLTEXT INDEX ngram_idx(title)WITH PARSER ngram
);
\d articles
       Table "fulltext_test.articles"
 Column |          Type          | Modifiers 
--------+------------------------+-----------
 ID     | integer                | 
 title  | character varying(100) | 
Indexes:
    "ngram_idx" gin (to_tsvector('ngram'::regconfig, title::text)) TABLESPACE pg_default

-- FULLTEXT INDEX without index_name
drop table if exists articles;
CREATE TABLE articles (
ID int,
title VARCHAR(100),
FULLTEXT INDEX (title)WITH PARSER ngram
);
\d articles
       Table "fulltext_test.articles"
 Column |          Type          | Modifiers 
--------+------------------------+-----------
 ID     | integer                | 
 title  | character varying(100) | 
Indexes:
    "articles_to_tsvector_idx" gin (to_tsvector('ngram'::regconfig, title::text)) TABLESPACE pg_default

-- FULLTEXT KEY with index_name
drop table if exists articles;
CREATE TABLE articles (
ID int,
title VARCHAR(100),
FULLTEXT KEY keyngram_idx(title)WITH PARSER ngram
);
\d articles
       Table "fulltext_test.articles"
 Column |          Type          | Modifiers 
--------+------------------------+-----------
 ID     | integer                | 
 title  | character varying(100) | 
Indexes:
    "keyngram_idx" gin (to_tsvector('ngram'::regconfig, title::text)) TABLESPACE pg_default

-- FULLTEXT KEY without index_name
drop table if exists articles;
CREATE TABLE articles (
ID int,
title VARCHAR(100),
FULLTEXT KEY (title)WITH PARSER ngram
);
\d articles
       Table "fulltext_test.articles"
 Column |          Type          | Modifiers 
--------+------------------------+-----------
 ID     | integer                | 
 title  | character varying(100) | 
Indexes:
    "articles_to_tsvector_idx" gin (to_tsvector('ngram'::regconfig, title::text)) TABLESPACE pg_default

-- NO WITH PARSER ngram
create table table_ddl_0154(col1 int,col2 varchar(64), FULLTEXT idx_ddl_0154(col2));
create table table_ddl_0085(
id int(11) not null,
username varchar(50) default null,
sex varchar(5) default null,
address varchar(100) default null,
score_num int(11));
create fulltext index idx_ddl_0085_02 on table_ddl_0085(username);
insert into table_ddl_0085 values (1,'test','m','xi''an changanqu', 10001), (2,'tst','w','xi''an beilingqu', 10002),
(3,'es','w','xi''an yangtaqu', 10003),(4,'s','m','beijingchaoyangqu', 10004);
-- search_modifier, only gram compatibility, but not working
SELECT * FROM table_ddl_0085 WHERE MATCH (username) AGAINST ('te' IN NATURAL LANGUAGE MODE);
 id | username | sex |     address     | score_num 
----+----------+-----+-----------------+-----------
  1 | test     | m   | xi'an changanqu |     10001
(1 row)

SELECT * FROM table_ddl_0085 WHERE MATCH (username) AGAINST ('ts' IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION);
 id | username | sex |     address     | score_num 
----+----------+-----+-----------------+-----------
  2 | tst      | w   | xi'an beilingqu |     10002
(1 row)

SELECT * FROM table_ddl_0085 WHERE MATCH (username) AGAINST ('test' IN BOOLEAN MODE);
 id | username | sex |     address     | score_num 
----+----------+-----+-----------------+-----------
  1 | test     | m   | xi'an changanqu |     10001
(1 row)

SELECT * FROM table_ddl_0085 WHERE MATCH (username) AGAINST ('es' WITH QUERY EXPANSION);
 id | username | sex |     address     | score_num 
----+----------+-----+-----------------+-----------
  1 | test     | m   | xi'an changanqu |     10001
  3 | es       | w   | xi'an yangtaqu  |     10003
(2 rows)

SELECT * FROM table_ddl_0085 WHERE MATCH (username) AGAINST ('s');
 id | username | sex |      address      | score_num 
----+----------+-----+-------------------+-----------
  4 | s        | m   | beijingchaoyangqu |     10004
(1 row)

insert into table_ddl_0085 select * from table_ddl_0085 where match (username) against ('te' IN NATURAL LANGUAGE MODE);
select * from table_ddl_0085;
 id | username | sex |      address      | score_num 
----+----------+-----+-------------------+-----------
  1 | test     | m   | xi'an changanqu   |     10001
  2 | tst      | w   | xi'an beilingqu   |     10002
  3 | es       | w   | xi'an yangtaqu    |     10003
  4 | s        | m   | beijingchaoyangqu |     10004
  1 | test     | m   | xi'an changanqu   |     10001
(5 rows)

create fulltext index idx_ddl_0085_03 on table_ddl_0085(username) with parser ngram visible;
create fulltext index idx_ddl_0085_04 on table_ddl_0085(username) visible with parser ngram;
create fulltext index idx_ddl_0085_05 on table_ddl_0085(username) visible;
create fulltext index idx_ddl_0085_06 on table_ddl_0085(username) with parser ngram comment 'TEST FULLTEXT INDEX COMMENT';
create fulltext index idx_ddl_0085_07 on table_ddl_0085(username) comment 'TEST FULLTEXT INDEX COMMENT' with parser ngram;
create fulltext index idx_ddl_0085_08 on table_ddl_0085(username) comment 'TEST FULLTEXT INDEX COMMENT';
drop schema fulltext_test cascade;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table test
drop cascades to table articles
drop cascades to table table_ddl_0154
drop cascades to table table_ddl_0085
reset current_schema;
