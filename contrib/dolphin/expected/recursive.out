create schema recursive_sql;
set current_schema to 'recursive_sql';
set dolphin.b_compatibility_mode = on;
WITH RECURSIVE cte AS
(SELECT 1 AS n UNION SELECT n+1 FROM cte WHERE n<3)
SELECT * FROM cte;
 n 
---
 1
 2
 3
(3 rows)

create view view1 as WITH RECURSIVE cte AS
(SELECT 1 AS n UNION SELECT n+1 FROM cte WHERE n<3)
SELECT * FROM cte;
desc view1;
 Field |  Type  | Null | Key | Default | Extra 
-------+--------+------+-----+---------+-------
 n     | bigint | YES  |     | NULL    | 
(1 row)

-- error
create view view2 as WITH RECURSIVE cte AS
(SELECT 1 AS n UNION SELECT 'abc' FROM cte)
SELECT * FROM cte;
ERROR:  invalid input syntax for type bigint: "abc"
LINE 2: (SELECT 1 AS n UNION SELECT 'abc' FROM cte)
                                    ^
create view view2 as WITH RECURSIVE cte AS
(SELECT 'abc' AS n UNION SELECT 1 FROM cte)
SELECT * FROM cte;
desc view2;
 Field | Type | Null | Key | Default | Extra 
-------+------+------+-----+---------+-------
 n     | text | YES  |     | NULL    | 
(1 row)

create view view3 as WITH cte AS
(SELECT 1 AS n UNION SELECT 'abc')
SELECT * FROM cte;
desc view3;
 Field | Type | Null | Key | Default | Extra 
-------+------+------+-----+---------+-------
 n     | text | YES  |     | NULL    | 
(1 row)

create view view4 as select 1 union select 1;
desc view4;
  Field   |  Type  | Null | Key | Default | Extra 
----------+--------+------+-----+---------+-------
 ?column? | bigint | YES  |     | NULL    | 
(1 row)

reset current_schema;
drop schema recursive_sql cascade;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to view recursive_sql.view1
drop cascades to view recursive_sql.view2
drop cascades to view recursive_sql.view3
drop cascades to view recursive_sql.view4
