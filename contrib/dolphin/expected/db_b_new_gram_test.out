drop database if exists db_b_new_gram_test;
NOTICE:  database "db_b_new_gram_test" does not exist, skipping
create database db_b_new_gram_test dbcompatibility 'B';
\c db_b_new_gram_test
-- CREATE TABLE engine test
CREATE TABLE test_engine_1 (a int) engine = InnoDB;
CREATE TABLE  IF NOT EXISTS test_engine_2 (a int) engine = InnoDB;
CREATE TYPE test_engine_type1 AS (a int, b text);
CREATE TABLE test_engine_type_table1 OF test_engine_type1 engine = InnoDB;
CREATE TYPE test_engine_type2 AS (a int, b text);
CREATE TABLE IF NOT EXISTS test_engine_type_table2 OF test_engine_type2 engine = InnoDB;
CREATE TABLE test_engine_1_1 (a int) engine = 'InnoDB';
CREATE TABLE  IF NOT EXISTS test_engine_2_1 (a int) engine = 'InnoDB';
CREATE TYPE test_engine_type1_1 AS (a int, b text);
CREATE TABLE test_engine_type_table1_1 OF test_engine_type1_1 engine = 'InnoDB';
CREATE TYPE test_engine_type2_1 AS (a int, b text);
CREATE TABLE IF NOT EXISTS test_engine_type_table2_1 OF test_engine_type2_1 engine = 'InnoDB';
CREATE TABLE test_engine_as engine = InnoDB as select a from test_engine_1;
-- CREATE TABLE COMPRESSION test
CREATE TABLE test_compression_1_pglz (a int) COMPRESSION = pglz;
\d+ test_compression_1_pglz
               Table "public.test_compression_1_pglz"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=1

CREATE TABLE  IF NOT EXISTS test_compression_create_2_pglz (a int) COMPRESSION = pglz;
\d+ test_compression_create_2_pglz
            Table "public.test_compression_create_2_pglz"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=1

CREATE TABLE test_compression_type_table_1_pglz OF test_engine_type1 COMPRESSION = pglz;
\d+ test_compression_type_table_1_pglz
          Table "public.test_compression_type_table_1_pglz"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 a      | integer |           | plain    |              | 
 b      | text    |           | extended |              | 
Typed table of type: test_engine_type1
Has OIDs: no
Options: orientation=row, compresstype=1

CREATE TABLE IF NOT EXISTS test_compression_create_type_table_2_pglz OF test_engine_type2 COMPRESSION = pglz;
\d+ test_compression_create_type_table_2_pglz
       Table "public.test_compression_create_type_table_2_pglz"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 a      | integer |           | plain    |              | 
 b      | text    |           | extended |              | 
Typed table of type: test_engine_type2
Has OIDs: no
Options: orientation=row, compresstype=1

CREATE TABLE test_compression_as_pglz COMPRESSION = pglz as select a from test_compression_1_pglz;
\d+ test_compression_as_pglz
               Table "public.test_compression_as_pglz"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=1

CREATE TABLE test_compression_1_zstd (a int) COMPRESSION = zstd;
\d+ test_compression_1_zstd
               Table "public.test_compression_1_zstd"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=2

CREATE TABLE  IF NOT EXISTS test_compression_create_2_zstd (a int) COMPRESSION = zstd;
\d+ test_compression_create_2_zstd
            Table "public.test_compression_create_2_zstd"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=2

CREATE TABLE test_compression_type_table_1_zstd OF test_engine_type1 COMPRESSION = zstd;
\d+ test_compression_type_table_1_zstd
          Table "public.test_compression_type_table_1_zstd"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 a      | integer |           | plain    |              | 
 b      | text    |           | extended |              | 
Typed table of type: test_engine_type1
Has OIDs: no
Options: orientation=row, compresstype=2

CREATE TABLE IF NOT EXISTS test_compression_create_type_table_2_zstd OF test_engine_type2 COMPRESSION = zstd;
\d+ test_compression_create_type_table_2_zstd
       Table "public.test_compression_create_type_table_2_zstd"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 a      | integer |           | plain    |              | 
 b      | text    |           | extended |              | 
Typed table of type: test_engine_type2
Has OIDs: no
Options: orientation=row, compresstype=2

CREATE TABLE test_compression_as_zstd COMPRESSION = zstd as select a from test_compression_1_zstd;
\d+ test_compression_as_zstd
               Table "public.test_compression_as_zstd"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=2

CREATE TABLE test_compression_1_none (a int) COMPRESSION = 'none';
\d+ test_compression_1_none
               Table "public.test_compression_1_none"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=0, compression=no

CREATE TABLE  IF NOT EXISTS test_compression_create_2_none (a int) COMPRESSION = 'none';
\d+ test_compression_create_2_none
            Table "public.test_compression_create_2_none"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=0, compression=no

CREATE TABLE test_compression_type_table_1_none OF test_engine_type1 COMPRESSION = 'none';
\d+ test_compression_type_table_1_none
          Table "public.test_compression_type_table_1_none"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 a      | integer |           | plain    |              | 
 b      | text    |           | extended |              | 
Typed table of type: test_engine_type1
Has OIDs: no
Options: orientation=row, compresstype=0, compression=no

CREATE TABLE IF NOT EXISTS test_compression_create_type_table_2_none OF test_engine_type2 COMPRESSION = 'none';
\d+ test_compression_create_type_table_2_none
       Table "public.test_compression_create_type_table_2_none"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 a      | integer |           | plain    |              | 
 b      | text    |           | extended |              | 
Typed table of type: test_engine_type2
Has OIDs: no
Options: orientation=row, compresstype=0, compression=no

CREATE TABLE test_compression_as_none COMPRESSION = none as select a from test_compression_1_none;
\d+ test_compression_as_none
               Table "public.test_compression_as_none"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
Has OIDs: no
Options: orientation=row, compresstype=0, compression=no

CREATE TABLE test_compression_1_aaaa (a int) COMPRESSION = aaaa;
ERROR:  unrecognized compress type
CREATE TABLE  IF NOT EXISTS test_compression_create_2_aaaa (a int) COMPRESSION = aaaa;
ERROR:  unrecognized compress type
CREATE TABLE test_compression_type_table_1_aaaa OF test_engine_type1 COMPRESSION = aaaa;
ERROR:  unrecognized compress type
CREATE TABLE IF NOT EXISTS test_compression_create_type_table_2_aaaa OF test_engine_type2 COMPRESSION = aaaa;
ERROR:  unrecognized compress type
CREATE TABLE test_compression_as_aaaa COMPRESSION = aaaa as select a from test_compression_1_aaaa;
ERROR:  unrecognized compress type
-- ALTER TABLE COMPRESSION test
ALTER TABLE test_compression_1_pglz COMPRESSION = zstd;
ERROR:  syntax error at or near "COMPRESSION"
LINE 1: ALTER TABLE test_compression_1_pglz COMPRESSION = zstd;
                                            ^
-- DROP INDEX ... ON TABLE
CREATE TABLE test (a int);
CREATE INDEX test_index1 ON test USING btree(a);
CREATE INDEX test_index2 ON test USING btree(a);
DROP INDEX test_index1 ON test;
DROP INDEX IF EXISTS test_index2 ON test;
DROP TABLE test;
-- LIST PARTITION TEST
CREATE TABLE test_list1 (col1 int, col2 int)
PARTITION BY list(col1)
(
PARTITION p1 VALUES (2000),
PARTITION p2 VALUES (3000),
PARTITION p3 VALUES (4000),
PARTITION p4 VALUES (5000)
);
\d+ test_list1
                      Table "public.test_list1"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 col1   | integer |           | plain   |              | 
 col2   | integer |           | plain   |              | 
Partition By LIST(col1)
Number of partitions: 4 (View pg_partition to check each partition range.)
Has OIDs: no
Options: orientation=row, compression=no

CREATE TABLE test_list2 (col1 int, col2 int)
PARTITION BY list(col1)
(
PARTITION p1 VALUES IN (2000),
PARTITION p2 VALUES IN (3000),
PARTITION p3 VALUES IN (4000),
PARTITION p4 VALUES IN (5000)
);
\d+ test_list2
                      Table "public.test_list2"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 col1   | integer |           | plain   |              | 
 col2   | integer |           | plain   |              | 
Partition By LIST(col1)
Number of partitions: 4 (View pg_partition to check each partition range.)
Has OIDs: no
Options: orientation=row, compression=no

-- INSERT
INSERT test_engine_1 VALUES (1);
-- VALUES and VALUE
INSERT INTO test_engine_1 VALUES (2);
INSERT INTO test_engine_1 VALUE (3);
-- INSERT and VALUE
INSERT test_engine_1 VALUE (4);
-- SELECT DISTINCT
INSERT INTO test_engine_1 VALUES (2) ORDER BY 1;
SELECT DISTINCT * FROM test_engine_1 ORDER BY 1;
 a 
---
 1
 2
 3
 4
(4 rows)

SELECT DISTINCT ON (a % 2) * FROM test_engine_1 ORDER BY (a % 2);
 a 
---
 2
 1
(2 rows)

SELECT DISTINCTROW * FROM test_engine_1 ORDER BY 1;
 a 
---
 1
 2
 3
 4
(4 rows)

SELECT DISTINCTROW ON (a % 2) * FROM test_engine_1 ORDER BY (a % 2);
 a 
---
 2
 1
(2 rows)

-- DROP PREPARE
PREPARE instr_test_1(int) AS INSERT INTO test_engine_1 VALUES ($1);
PREPARE instr_test_2(int) AS INSERT INTO test_engine_1 VALUES ($1);
PREPARE instr_test_3(int) AS INSERT INTO test_engine_1 VALUES ($1);
SELECT count(*) FROM PG_PREPARED_STATEMENTS WHERE name LIKE '%instr_test%';
 count 
-------
     3
(1 row)

DROP PREPARE instr_test_1;
SELECT count(*) FROM PG_PREPARED_STATEMENTS WHERE name LIKE '%instr_test%';
 count 
-------
     2
(1 row)

DROP PREPARE ALL;
SELECT count(*) FROM PG_PREPARED_STATEMENTS WHERE name LIKE '%instr_test%';
 count 
-------
     0
(1 row)

DROP TEMPORARY TABLE test_engine_1 CASCADE;
\c postgres
drop database db_b_new_gram_test;
