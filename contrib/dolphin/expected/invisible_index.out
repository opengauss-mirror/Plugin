create schema invisible_index;
set current_schema to 'invisible_index';
-- create table with index
create table t1 (a int, b int, index key_a(a) visible);
create index key_b on t1 (b) invisible;
select indkey, indisvisible from pg_index where indrelid = 't1'::regclass order by indkey;
 indkey | indisvisible 
--------+--------------
 1      | t
 2      | f
(2 rows)

insert into t1 values (generate_series(1, 100), generate_series(1, 100));
analyze t1;
set enable_seqscan = off;
-- modify invisible status
explain (costs off) select * from t1 where a < 10;
          QUERY PLAN          
------------------------------
 [Bypass]
 Index Scan using key_a on t1
   Index Cond: (a < 10)
(3 rows)

alter table t1 alter index key_a invisible;
explain (costs off) select * from t1 where a < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (a < 10)
(2 rows)

explain (costs off) select * from t1 where b < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (b < 10)
(2 rows)

alter table t1 alter index key_b visible;
explain (costs off) select * from t1 where b < 10;
          QUERY PLAN          
------------------------------
 [Bypass]
 Index Scan using key_b on t1
   Index Cond: (b < 10)
(3 rows)

-- test alter table add constraint with visible
drop index key_b;
alter table t1 add constraint key_b unique (b) visible;
NOTICE:  ALTER TABLE / ADD UNIQUE will create implicit index "key_b" for table "t1"
explain (costs off) select * from t1 where b < 10;
          QUERY PLAN          
------------------------------
 [Bypass]
 Index Scan using key_b on t1
   Index Cond: (b < 10)
(3 rows)

alter table t1 alter index key_b invisible;
explain (costs off) select * from t1 where b < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (b < 10)
(2 rows)

-- test oriented-column table
create table c1 (a int, b int, index ckey_a(a) visible) with (orientation = column);
insert into c1 values (generate_series(1, 100), generate_series(1, 100));
analyze c1;
set enable_seqscan = off;
-- modify invisible status
explain (costs off) select * from c1 where a < 10;
                 QUERY PLAN                 
--------------------------------------------
 Row Adapter
   ->  CStore Index Scan using ckey_a on c1
         Index Cond: (a < 10)
(3 rows)

alter table c1 alter index ckey_a invisible;
explain (costs off) select * from c1 where a < 10;
        QUERY PLAN        
--------------------------
 Row Adapter
   ->  CStore Scan on c1
         Filter: (a < 10)
(3 rows)

-- test use_invisible_indexes
set dolphin.optimizer_switch = 'use_invisible_indexes=on';
explain (costs off) select * from t1 where a < 10;
          QUERY PLAN          
------------------------------
 [Bypass]
 Index Scan using key_a on t1
   Index Cond: (a < 10)
(3 rows)

set dolphin.optimizer_switch = 'use_invisible_indexes=invalid';  --error
ERROR:  invalid value for parameter "dolphin.optimizer_switch": "use_invisible_indexes=invalid"
DETAIL:  invalid optimizer switch value "invalid"
set dolphin.optimizer_switch = 'use_invisible_indexes=on,use_invisible_indexes=off'; --error
ERROR:  invalid value for parameter "dolphin.optimizer_switch": "use_invisible_indexes=on,use_invisible_indexes=off"
DETAIL:  duplicate optimizer switch option "use_invisible_indexes"
set dolphin.optimizer_switch = 'use_invisible_indexes=default';
explain (costs off) select * from t1 where a < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (a < 10)
(2 rows)

-- test set_var
explain (costs off) select /*+ set_var(dolphin.optimizer_switch = 'use_invisible_indexes=on') */ * from t1 where a < 10;
          QUERY PLAN          
------------------------------
 [Bypass]
 Index Scan using key_a on t1
   Index Cond: (a < 10)
(3 rows)

explain (costs off) select * from t1 where a < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (a < 10)
(2 rows)

explain (costs off) select /*+ set_var(dolphin.optimizer_switch = 'use_invisible_indexes=off') */ * from t1 where a < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (a < 10)
(2 rows)

explain (costs off) select /*+ set_var(dolphin.optimizer_switch = 'use_invisible_indexes=default') */ * from t1 where a < 10;
     QUERY PLAN     
--------------------
 Seq Scan on t1
   Filter: (a < 10)
(2 rows)

