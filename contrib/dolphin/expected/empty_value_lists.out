-- b compatibility case
drop database if exists empty_value_lists;
NOTICE:  database "empty_value_lists" does not exist, skipping
create database empty_value_lists dbcompatibility 'b';
\c empty_value_lists
create table test1(num int);
create table test2(num int default 3);
create table test3(num int not null);
create table test4(num numeric not null);
create table test5(num bool not null);
create table test6(num bytea not null);
create table test7(num char not null);
create table test8(num name not null);
create table test9(num int8 not null);
create table test10(num text not null);
create table test11(num raw not null);
create table test12(num blob not null);
create table test13(num clob not null);
create table test14(num json not null);
create table test15(num jsonb not null);
create table test16(num point not null);
create table test17(num lseg not null);
create table test18(num path not null);
create table test19(num box not null);
create table test20(num polygon not null);
create table test21(num hash16 not null);
create table test22(num float4 not null);
create table test23(num abstime not null);
create table test24(num reltime not null);
create table test25(num tinterval not null);
create table test26(num circle not null);
create table test27(num money not null);
create table test28(num bpchar not null);
create table test29(num varchar not null);
create table test30(num nvarchar2 not null);
create table test31(num date not null);
create table test32(num time not null);
create table test33(num timestamp not null);
create table test34(num timestamptz not null);
create table test35(num interval not null);
create table test36(num timetz not null);
create table test37(num bit not null);
create table test38(num varbit not null);
create table test39(num numeric not null);
create table test40(num uuid not null);
create table test41(num smalldatetime not null);
--strict_all_tables mode
insert into test1 values(),();
insert into test2 values(),();
insert into test3 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test4 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test5 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test6 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test7 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test8 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test9 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test10 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test11 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test12 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test13 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test14 values(),();    
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test15 values(),();    
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test16 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test17 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test18 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test19 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test20 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test21 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test22 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test23 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test24 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test25 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test26 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test27 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test28 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test29 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test30 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test31 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test32 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test33 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test34 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test35 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test36 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test37 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test38 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test39 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test40 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
insert into test41 values(),();
ERROR:  null value in column "num" violates not-null constraint
DETAIL:  Failing row contains (null).
--not strict_all_tables mode
set dolphin.sql_mode = '';
insert into test1 values(),();
select *from test1;
 num 
-----
    
    
    
    
(4 rows)

insert into test2 values(),();
select *from test2;
 num 
-----
   3
   3
   3
   3
(4 rows)

insert into test3 values(),();
select *from test3;
 num 
-----
   0
   0
(2 rows)

insert into test4 values(),();
WARNING:  invalid input syntax for numeric: ""
CONTEXT:  referenced column: num
WARNING:  invalid input syntax for numeric: ""
CONTEXT:  referenced column: num
select *from test4;
 num 
-----
   0
   0
(2 rows)

insert into test5 values(),();
select *from test5;
 num 
-----
 f
 f
(2 rows)

insert into test6 values(),();
select *from test6;
 num 
-----
 \x
 \x
(2 rows)

insert into test7 values(),();
select *from test7;
 num 
-----
  
  
(2 rows)

insert into test8 values(),();
select *from test8;
 num 
-----
 
 
(2 rows)

insert into test9 values(),();
select *from test9;
 num 
-----
   0
   0
(2 rows)

insert into test10 values(),();
select *from test10;
 num 
-----
 
 
(2 rows)

insert into test11 values(),();
select *from test11;
 num 
-----
 
 
(2 rows)

insert into test12 values(),();
select *from test12;
 num 
-----
 
 
(2 rows)

insert into test13 values(),();
select *from test13;
 num 
-----
 
 
(2 rows)

insert into test14 values(),();
select *from test14;
 num 
-----
 0
 0
(2 rows)

insert into test15 values(),();
select *from test15;
 num 
-----
 0
 0
(2 rows)

insert into test16 values(),();
select *from test16;
  num  
-------
 (0,0)
 (0,0)
(2 rows)

insert into test17 values(),();
select *from test17;
      num      
---------------
 [(0,0),(0,0)]
 [(0,0),(0,0)]
(2 rows)

insert into test18 values(),();
select *from test18;
   num   
---------
 ((0,0))
 ((0,0))
(2 rows)

insert into test19 values(),();
select *from test19;
     num     
-------------
 (0,0),(0,0)
 (0,0),(0,0)
(2 rows)

insert into test20 values(),();
select *from test20;
   num   
---------
 ((0,0))
 ((0,0))
(2 rows)

insert into test21 values(),();
select *from test21;
       num        
------------------
 0000000000000000
 0000000000000000
(2 rows)

insert into test22 values(),();
select *from test22;
 num 
-----
   0
   0
(2 rows)

insert into test23 values(),();
select *from test23;
             num              
------------------------------
 Wed Dec 31 16:00:00 1969 PST
 Wed Dec 31 16:00:00 1969 PST
(2 rows)

insert into test24 values(),();
select *from test24;
 num 
-----
 @ 0
 @ 0
(2 rows)

insert into test25 values(),();
select *from test25;
                               num                               
-----------------------------------------------------------------
 ["Thu Jan 01 00:00:00 1970 PST" "Thu Jan 01 00:00:00 1970 PST"]
 ["Thu Jan 01 00:00:00 1970 PST" "Thu Jan 01 00:00:00 1970 PST"]
(2 rows)

insert into test26 values(),();
select *from test26;
    num    
-----------
 <(0,0),0>
 <(0,0),0>
(2 rows)

insert into test27 values(),();
select *from test27;
--?.*num
--?.*
--?.*0.00
--?.*0.00
(2 rows)

insert into test28 values(),();
select *from test28;
 num 
-----
 
 
(2 rows)

insert into test29 values(),();
select *from test29;
 num 
-----
 
 
(2 rows)

insert into test30 values(),();
select *from test30;
 num 
-----
 
 
(2 rows)

insert into test31 values(),();
select *from test31;
    num     
------------
 01-01-1970
 01-01-1970
(2 rows)

insert into test32 values(),();
select *from test32;
   num    
----------
 00:00:00
 00:00:00
(2 rows)

insert into test33 values(),();
select *from test33;
--?.*num
--?.*
--?.*
--?.*
(2 rows)

insert into test34 values(),();
select *from test34;
--?.*num
--?.*
--?.*
--?.*
(2 rows)

insert into test35 values(),();
select *from test35;
 num 
-----
 @ 0
 @ 0
(2 rows)

set timezone to 'PRC';
insert into test36 values(),();
reset timezone;
show timezone;
 TimeZone 
----------
 PST8PDT
(1 row)

select *from test36;
     num     
-------------
 00:00:00+08
 00:00:00+08
(2 rows)

insert into test37 values(),();
select *from test37;
 num 
-----
 
 
(2 rows)

insert into test38 values(),();
select *from test38;
 num 
-----
 
 
(2 rows)

insert into test39 values(),();
WARNING:  invalid input syntax for numeric: ""
CONTEXT:  referenced column: num
WARNING:  invalid input syntax for numeric: ""
CONTEXT:  referenced column: num
select *from test39;
 num 
-----
   0
   0
(2 rows)

insert into test40 values(),();
select *from test40;
                 num                  
--------------------------------------
 00000000-0000-0000-0000-000000000000
 00000000-0000-0000-0000-000000000000
(2 rows)

insert into test41 values(),();
select *from test41;
           num            
--------------------------
 Thu Jan 01 08:00:00 1970
 Thu Jan 01 08:00:00 1970
(2 rows)

--multiple type test
create table m1(a int not null, b int, c int default 3, d int default 3 not null);
create table m2(a date not null, b datetime, c datetime default '2020-01-01', d datetime default '2020-01-01' not null);
create table m3(a box not null, b path, c circle default '0,0,3', d box default '1,2,3,4' not null);
create table m4(a text not null, b char, c nvarchar2 default 'abc', d bpchar default 'bcd' not null);
insert into m1 values(),();
select * from m1;
 a | b | c | d 
---+---+---+---
 0 |   | 3 | 3
 0 |   | 3 | 3
(2 rows)

insert into m2 values(),();
select * from m2;
     a      | b |            c             |            d             
------------+---+--------------------------+--------------------------
 01-01-1970 |   | Wed Jan 01 00:00:00 2020 | Wed Jan 01 00:00:00 2020
 01-01-1970 |   | Wed Jan 01 00:00:00 2020 | Wed Jan 01 00:00:00 2020
(2 rows)

insert into m3 values(),();
select * from m3;
      a      | b |     c     |      d      
-------------+---+-----------+-------------
 (0,0),(0,0) |   | <(0,0),3> | (3,4),(1,2)
 (0,0),(0,0) |   | <(0,0),3> | (3,4),(1,2)
(2 rows)

insert into m4 values(),();
select * from m4;
 a | b |  c  |  d  
---+---+-----+-----
   |   | abc | bcd
   |   | abc | bcd
(2 rows)

\c postgres
drop database if exists empty_value_lists;
