create schema test_json_search;
set current_schema to 'test_json_search';
--含NULL和错误参数
select json_search(1,'one',NULL);
ERROR:  Invalid data type for JSON data in argument 1 to function json_search
CONTEXT:  referenced column: json_search
select json_search('1','on',NULL);
ERROR:  The oneOrAll argument to json_search may take these values:'one'or'all'.
CONTEXT:  referenced column: json_search
select json_search('"1"','one',NULL,NULL,'$..');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
--转义符含中文
select json_search('["aset%3165adq",["asedwq_dqwet%3165adq"]]', 'all', '%a%', '且') as res;
         res         
---------------------
 ["$[0]", "$[1][0]"]
(1 row)

select json_search('["aset%3165adq",["asedwq_dqwet%3165adq"]]', 'all', '%a%', '且是') as res;
ERROR:  invalid escape string
HINT:  Escape string must be empty or one character.
CONTEXT:  referenced column: res
--json文档为对象，path为数组索引
select json_search('{"a":["1","asd138%96qwed<>?,.","asd196qwed《》？！@#￥"]}', 'all', '%s%', null, '$[0]') as res;
 res 
-----
 
(1 row)

--返回数组
select json_search('["a", ["a", "b", "c"], {"d":"ab"}]', 'all', '%a%') as res;
              res              
-------------------------------
 ["$[0]", "$[1][0]", "$[2].d"]
(1 row)

select json_search('["a", ["a", "b", "c"], {"d":"ab"}]', 'all', '%a') as res;
         res         
---------------------
 ["$[0]", "$[1][0]"]
(1 row)

select json_search('["aset%3165adq",["asedwq_dqwet%3165adq"]]','all', '%\%%');
     json_search     
---------------------
 ["$[0]", "$[1][0]"]
(1 row)

select json_search('null','one','null','&','$');
 json_search 
-------------
 
(1 row)

select json_search(null,'one','null','&','$');
 json_search 
-------------
 
(1 row)

select json_search('"null"',null,'null','&','$');
 json_search 
-------------
 
(1 row)

select json_search('null','one',null,'&','$');
 json_search 
-------------
 
(1 row)

select json_search('"null"','one','null',null,'$');
 json_search 
-------------
 "$"
(1 row)

select json_search('"null"','one','null','&','$',null);
 json_search 
-------------
 
(1 row)

select json_search('"null"','one','null','&');
 json_search 
-------------
 "$"
(1 row)

select json_search(true,'one','true','&','$');
ERROR:  Invalid data type for JSON data in argument 1 to function json_search
CONTEXT:  referenced column: json_search
select json_search('"true"',true,'true','&','$');
ERROR:  function json_search(unknown, boolean, unknown, unknown, unknown) does not exist
LINE 1: select json_search('"true"',true,'true','&','$');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
CONTEXT:  referenced column: json_search
select json_search('"true"','one',true,'&','$');
 json_search 
-------------
 
(1 row)

select json_search('"true"','one','true',true,'$');
 json_search 
-------------
 "$"
(1 row)

select json_search('"true"','one','true','&',true);
ERROR:  function json_search(unknown, unknown, unknown, unknown, boolean) does not exist
LINE 1: select json_search('"true"','one','true','&',true);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
CONTEXT:  referenced column: json_search
select json_search('"1"','one',1,'&');
 json_search 
-------------
 "$"
(1 row)

select json_search('1.2','one',1.2);
 json_search 
-------------
 
(1 row)

select json_search('"1"','one','1');
 json_search 
-------------
 "$"
(1 row)

select json_search('"abc"','one','abc');
 json_search 
-------------
 "$"
(1 row)

select json_search('"abc"','one','"abc"');
 json_search 
-------------
 
(1 row)

select json_search('"abc"','all','abc');
 json_search 
-------------
 "$"
(1 row)

select json_search('"*"','all','*');
 json_search 
-------------
 "$"
(1 row)

select json_search('"&*(%"','all','&*(%');
 json_search 
-------------
 "$"
(1 row)

select json_search('"、——》。*“”"','all','、——》。*“”');
 json_search 
-------------
 "$"
(1 row)

select json_search('"华为mate40"','all','华为mate40');
 json_search 
-------------
 "$"
(1 row)

select json_search('{"abc":"22:30:20"}','one',time'22:30:20');
 json_search 
-------------
 "$.abc"
(1 row)

select json_search('"abc"','all','a_c');
 json_search 
-------------
 "$"
(1 row)

select json_search('"abdc"','all','a_c');
 json_search 
-------------
 
(1 row)

select json_search('"abdc"','all','a__c');
 json_search 
-------------
 "$"
(1 row)

select json_search('"abdc"','all','a%c');
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','all','a\%c');
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','all','a&%c','&');
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','all','a1%c','1');
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','all','a1%c',1);
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','all','a1.2%c',1.2);
ERROR:  invalid escape string
HINT:  Escape string must be empty or one character.
CONTEXT:  referenced column: json_search
select json_search('"a%c"','all','aa%c','a');
 json_search 
-------------
 "$"
(1 row)

select json_search('"%c"','all','a%c','a');
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','all','a&@%c','&@');
ERROR:  invalid escape string
HINT:  Escape string must be empty or one character.
CONTEXT:  referenced column: json_search
select json_search('"a%c"','one','a\%c',true);
 json_search 
-------------
 "$"
(1 row)

select json_search('"a%c"','one','a\%c',false);
 json_search 
-------------
 "$"
(1 row)

select json_search('{"a":}','one','abc');
ERROR:  Invalid JSON text in argument 1 to function json_search.
CONTEXT:  referenced column: json_search
select json_search('{"a":"abc"}','one','abc');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":"abc"}aaa','one','abc');
ERROR:  Invalid JSON text in argument 1 to function json_search.
CONTEXT:  referenced column: json_search
select json_search('{"[1].a":"abc"}','one','abc');
  json_search  
---------------
 "$.\"[1].a\""
(1 row)

select json_search('{"a":"1"}','one',1);
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":"1"}','one','1');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":1}','one','1');
 json_search 
-------------
 
(1 row)

select json_search('{"":"abc"}','one','abc');
 json_search 
-------------
 "$."
(1 row)

select json_search('{" ":"abc"}','one','abc');
 json_search 
-------------
 "$.\" \""
(1 row)

select json_search('{"a":"abc"}','all','abc');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":"abc"}','all','ab');
 json_search 
-------------
 
(1 row)

select json_search('{"a":"阿斯蒂芬"}','all','阿斯蒂芬');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a c":"abc"}','one','abc');
 json_search 
-------------
 "$.\"a c\""
(1 row)

select json_search('{"a.c":"abc"}','one','abc');
 json_search 
-------------
 "$.\"a.c\""
(1 row)

select json_search('{"a[]c":"abc"}','one','abc');
 json_search  
--------------
 "$.\"a[]c\""
(1 row)

select json_search('{"0":"abc"}','one','abc');
 json_search 
-------------
 "$.\"0\""
(1 row)

select json_search('{"abc.bcd":"hello"}','one','hello',NULL,'$."abc.bcd"');
   json_search   
-----------------
 "$.\"abc.bcd\""
(1 row)

select json_search('{"abc,bcd":"hello"}','all','hello',NULL,'$."abc,bcd"');
   json_search   
-----------------
 "$.\"abc,bcd\""
(1 row)

select json_search('{"a":{"abc":{"b":"abc"}}}','one','abc',NULL,'$.a."abc".b');
 json_search 
-------------
 "$.a.abc.b"
(1 row)

select json_search('{"a":{"abc,cbd":{"b":"abc"}}}','one','abc',NULL,'$.a."abc,cbd".b');
     json_search     
---------------------
 "$.a.\"abc,cbd\".b"
(1 row)

select json_search('{"abc,bcd":"hello"}', 'all','hello');
   json_search   
-----------------
 "$.\"abc,bcd\""
(1 row)

select json_search('{"a":"abc","b":"bcd"}','all','abc');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":"abc","a":"abc"}','all','abc');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":"abc","a":"abc"}','one','abc');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":"abc","b":"bcd"}','one','bcd');
 json_search 
-------------
 "$.b"
(1 row)

select json_search('{"a":"abc","b":"abc"}','all','abc');
  json_search   
----------------
 ["$.a", "$.b"]
(1 row)

select json_search('{"a":"abc","b":"abc","c":"abc"}','all','abc');
      json_search      
-----------------------
 ["$.a", "$.b", "$.c"]
(1 row)

select json_search('["a"."abc"]','one','abc');
ERROR:  Invalid JSON text in argument 1 to function json_search.
CONTEXT:  referenced column: json_search
select json_search('["a","abc"]','one','abc');
 json_search 
-------------
 "$[1]"
(1 row)

select json_search('["a","abc"]aaa','one','abc');
ERROR:  Invalid JSON text in argument 1 to function json_search.
CONTEXT:  referenced column: json_search
select json_search('[1,"abc"]','one','1');
 json_search 
-------------
 
(1 row)

select json_search('[1,"abc"]','one',1);
 json_search 
-------------
 
(1 row)

select json_search('["1","abc"]','one','1');
 json_search 
-------------
 "$[0]"
(1 row)

select json_search('["1","abc"]','one',1);
 json_search 
-------------
 "$[0]"
(1 row)

select json_search('[" ","abc"]','one',' ');
 json_search 
-------------
 "$[0]"
(1 row)

select json_search('["","abc"]','one','');
 json_search 
-------------
 "$[0]"
(1 row)

select json_search('["abc","abc","abc"]','one','abc');
 json_search 
-------------
 "$[0]"
(1 row)

select json_search('["abc","abc","abc"]','all','abc');
       json_search        
--------------------------
 ["$[0]", "$[1]", "$[2]"]
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','all','bcd');
    json_search    
-------------------
 ["$.a[1]", "$.b"]
(1 row)

select json_search('[{"a":"abc"},"bcd"]','one','abc');
 json_search 
-------------
 "$[0].a"
(1 row)

select json_search('[{"a":"abc"},"bcd"]','one','ab');
 json_search 
-------------
 
(1 row)

select json_search('{"a":{"b":"abc"}}','all','abc');
 json_search 
-------------
 "$.a.b"
(1 row)

select json_search('{"a":{"b":["abc"]}}','all','abc');
 json_search 
-------------
 "$.a.b[0]"
(1 row)

select json_search('{"a":{"b":["abc","abc"]}}','all','abc');
       json_search        
--------------------------
 ["$.a.b[0]", "$.a.b[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]}]}','all','abc');
          json_search           
--------------------------------
 ["$.a[0].b[0]", "$.a[0].b[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"]}','all','abc');
          json_search           
--------------------------------
 ["$.a[0].b[0]", "$.a[0].b[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["abc","hij"]}','all','abc');
               json_search                
------------------------------------------
 ["$.a[0].b[0]", "$.a[0].b[1]", "$.c[0]"]
(1 row)

select json_search('{"abc.bcd":"hello"}', 'one','hello',NULL,'$.    "abc.bcd"    ');
   json_search   
-----------------
 "$.\"abc.bcd\""
(1 row)

select json_search('{"abc":"abc"}','all','abc',NULL,'$   .  abc   ');
 json_search 
-------------
 "$.abc"
(1 row)

select json_search('["abc"]','all','abc',NULL,'$   [  0  ]   ');
 json_search 
-------------
 "$[0]"
(1 row)

select json_search('"abc"','one','abc',null,'');
ERROR:  Invalid JSON path expression. The error is around character position 0.
CONTEXT:  referenced column: json_search
select json_search('"abc"','one','abc',null,'$.1');
ERROR:  Invalid JSON path expression. The error is around character position 3.
CONTEXT:  referenced column: json_search
select json_search('{"0":"abc"}','one','abc',NULL,'$.0');
ERROR:  Invalid JSON path expression. The error is around character position 3.
CONTEXT:  referenced column: json_search
select json_search('"abc"','one','abc',null,'$[a]');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
select json_search('"abc"','one','abc',null,'$[a');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
select json_search('"abc"','one','abc',null,'$[a');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
select json_search('"abc"','one','abc',null,'$.');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
select json_search('{"":"abc"}','one','abc',NULL,'$.');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
select json_search('{" ":"abc"}','one','abc',NULL,'$. ');
ERROR:  Invalid JSON path expression. The error is around character position 3.
CONTEXT:  referenced column: json_search
select json_search('[{"a":"abc"},"bcd"]','one','abc',null,'$');
 json_search 
-------------
 "$[0].a"
(1 row)

select json_search('{"a":"abc","b":"abc"}','all','abc',null,'$');
  json_search   
----------------
 ["$.a", "$.b"]
(1 row)

select json_search('"abc"','one','abc',NULL,'$','$.a');
 json_search 
-------------
 "$"
(1 row)

select json_search('"abc"','one','abc',NULL,'$.a','$');
 json_search 
-------------
 "$"
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','all','bcd',null,'$.b');
 json_search 
-------------
 "$.b"
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','all','bcd',null,'$.b','$','$.a');
    json_search    
-------------------
 ["$.b", "$.a[1]"]
(1 row)

select json_search('{"abc":["abc","bcd"],"abc":"bcd"}','all','bcd',null,'$.abc','$','$[1]');
 json_search 
-------------
 "$.abc[1]"
(1 row)

select json_search('{"a": "abc","b": {"b": "abc", "a": "abc"}}','all','abc');
        json_search        
---------------------------
 ["$.a", "$.b.b", "$.b.a"]
(1 row)

select json_search('{"a":"abc"}','all','abc',NULL,'$','$');
 json_search 
-------------
 "$.a"
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','one','bcd',null,'$.*');
 json_search 
-------------
 "$.a[1]"
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','one','bcd',null,'$[*]');
 json_search 
-------------
 
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','all','bcd',null,'$.a[*]');
 json_search 
-------------
 "$.a[1]"
(1 row)

select json_search('{"a":["abc","bcd"],"b":"bcd"}','one','bcd',null,'$.a[**]');
ERROR:  Invalid JSON path expression. The error is around character position 6.
CONTEXT:  referenced column: json_search
select json_search('["abc","bcd"]','one','bcd',null,'$[*]');
 json_search 
-------------
 "$[1]"
(1 row)

select json_search('["abc","bcd"]','one','bcd',null,'$**[1]');
 json_search 
-------------
 "$[1]"
(1 row)

select json_search('["abc","bcd"]','one','bcd',null,'$**[2]');
 json_search 
-------------
 
(1 row)

select json_search('["abc","bcd"]','one','bcd',null,'$***[2]');
ERROR:  Invalid JSON path expression. The error is around character position 3.
CONTEXT:  referenced column: json_search
select json_search('[{"a":"abc"},"bcd"]','one','bcd',null,'$**.a');
 json_search 
-------------
 
(1 row)

select json_search('[{"a":"abc"},"bcd"]','all','abc',null,'$**.a');
 json_search 
-------------
 "$[0].a"
(1 row)

select json_search('[{"a":"abc"},"bcd"]','one','abc',null,'$**.a[*]');
 json_search 
-------------
 
(1 row)

select json_search('[{"a":"abc"},"bcd"]','one','bcd',null,'$**a[*]');
ERROR:  Invalid JSON path expression. The error is around character position 3.
CONTEXT:  referenced column: json_search
select json_search('{"a":["abc","bcd"],"b":"bcd"}','one','bcd',null,'$**[1]');
 json_search 
-------------
 "$.a[1]"
(1 row)

select json_search('[{"a":"abc"},{"a":"abc"}]','one','abc',null,'$**.a');
 json_search 
-------------
 "$[0].a"
(1 row)

select json_search('[{"a":"abc"},{"a":"abc"}]','all','abc',null,'$**.a');
     json_search      
----------------------
 ["$[0].a", "$[1].a"]
(1 row)

select json_search('[{"a":"abc"},{"a":"abc"}]','all','abc',null,'$**.b');
 json_search 
-------------
 
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$','$');
               json_search                
------------------------------------------
 ["$.a[0].b[0]", "$.a[0].b[1]", "$.c[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","bcd"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$');
        json_search        
---------------------------
 ["$.a[0].b[0]", "$.c[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$**[1]');
        json_search        
---------------------------
 ["$.a[0].b[1]", "$.c[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$**.*[*].*[*]');
          json_search           
--------------------------------
 ["$.a[0].b[0]", "$.a[0].b[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$**.*[*].*[*].*');
 json_search 
-------------
 
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$**.*[*].*[*].*','$**.*[*].*[*]');
          json_search           
--------------------------------
 ["$.a[0].b[0]", "$.a[0].b[1]"]
(1 row)

select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','all','abc',null,'$**.*[*].*[*].*','$.');
ERROR:  Invalid JSON path expression. The error is around character position 2.
CONTEXT:  referenced column: json_search
select json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","abc"]}','one','abc',null,'$','$.*.*');
  json_search  
---------------
 "$.a[0].b[0]"
(1 row)

select json_search('[{"a":"abc","b":"abc"},"abc"]','all','abc',NULL,'$**.b','$[*]','$**.a');
         json_search          
------------------------------
 ["$[0].b", "$[0].a", "$[1]"]
(1 row)

select json_search('[{"a":"abc","b":"abc"},"abc"]','all','abc',NULL,'$**.b','$[*]','$**.a','$[0]','$[1]','$[0].a','$[0].b');
         json_search          
------------------------------
 ["$[0].b", "$[0].a", "$[1]"]
(1 row)

create table student(name VARCHAR(20) PRIMARY KEY);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "student_pkey" for table "student"
insert into student (name) value(json_search('{"a":[{"b":["abc","abc"]},"ced"],"c":["efg","hij"]}','all','abc',null,'$**[1]'));
select name from student;
     name      
---------------
 "$.a[0].b[1]"
(1 row)

drop table student;
create table c (
    doc text);
insert into c values('{"a":"abc"}');
select json_search(doc,'one','abc') from c;
 json_search 
-------------
 "$.a"
(1 row)

drop table a;
ERROR:  table "a" does not exist
create temp table test (
    doc text
);
insert into test values
('{"a": {"b": 32, "c":"hello"}, "d": 0.3443}'),
('["dog", "pig", {"a": "here"}]'),
('["pig", "dog", {"a": "there"}]'),
('{"a": "abc","b": {"b": "abc", "a": "abc"}}');
select *,json_search(doc, 'one','hello',NULL,'$**.c') from test;
                    doc                     | json_search 
--------------------------------------------+-------------
 {"a": {"b": 32, "c":"hello"}, "d": 0.3443} | "$.a.c"
 ["dog", "pig", {"a": "here"}]              | 
 ["pig", "dog", {"a": "there"}]             | 
 {"a": "abc","b": {"b": "abc", "a": "abc"}} | 
(4 rows)

create temp table test1 (
    doc text,
    one_or_all text,
    path text
);
insert into test1 values
('{"a": {"b": 32, "c":"hello"}, "d": 0.3443}','one','$**.c'),
('["dog", "pig", {"a": "here"}]','one','$'),
('["pig", "there", {"a": "there"}]','all','$'),
('{"a": "abc","b": {"b": "abc", "a": "abc"}}','all','$**.a');
select *,json_search(doc, one_or_all,'abc',NULL,path) from test1;
                    doc                     | one_or_all | path  |   json_search    
--------------------------------------------+------------+-------+------------------
 {"a": {"b": 32, "c":"hello"}, "d": 0.3443} | one        | $**.c | 
 ["dog", "pig", {"a": "here"}]              | one        | $     | 
 ["pig", "there", {"a": "there"}]           | all        | $     | 
 {"a": "abc","b": {"b": "abc", "a": "abc"}} | all        | $**.a | ["$.a", "$.b.a"]
(4 rows)

create table json_search_test (
    a text
);
insert into json_search_test values
('{"a":[{"d":["abc","bcd"]},"ced"],"c":["efg","hij"]}'),
('["abc","bcd"]'),
('"abc"'),
('{"a":"阿斯蒂芬"}'),
('[" ","abc"]');
insert into json_search_test values
(json_search('{"a": 43, "b": {"c": "true"}}', 'one','true',NULL,'$.b'));
select * from json_search_test;
                          a                          
-----------------------------------------------------
 {"a":[{"d":["abc","bcd"]},"ced"],"c":["efg","hij"]}
 ["abc","bcd"]
 "abc"
 {"a":"阿斯蒂芬"}
 [" ","abc"]
 "$.b.c"
(6 rows)

drop table json_search_test;
drop schema test_json_search cascade;
NOTICE:  drop cascades to table c
reset current_schema;
