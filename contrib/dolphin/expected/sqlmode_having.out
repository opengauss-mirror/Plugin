create schema issue_online;
set current_schema to 'issue_online';
set dolphin.sql_mode='';
drop table if exists tt01;
NOTICE:  table "tt01" does not exist, skipping
create table tt01(a int, b int, c int);
insert into tt01 values(1, 1, 1);
insert into tt01 values(1, 2, 2);
insert into tt01 values(1, 3, 3);
insert into tt01 values(1, 4, 4);
insert into tt01 values(1, 5, 5);
insert into tt01 values(2, 6, 6);
insert into tt01 values(2, 7, 7);
insert into tt01 values(2, 8, 8);
insert into tt01 values(2, 9, 9);
insert into tt01 values(2, 10, 10);
--包含having子句，不包含grouping by子句。
explain (costs off)select * from tt01 having a = 1;
       QUERY PLAN        
-------------------------
 Result
   ->  Seq Scan on tt01
         Filter: (a = 1)
(3 rows)

select * from tt01 having a = 1;
 a | b | c 
---+---+---
 1 | 1 | 1
 1 | 2 | 2
 1 | 3 | 3
 1 | 4 | 4
 1 | 5 | 5
(5 rows)

--包含having子句和where子句，不包含grouping by子句。
explain (costs off)select * from tt01 where a = 1 having b < 3;
              QUERY PLAN               
---------------------------------------
 Result
   ->  Seq Scan on tt01
         Filter: ((b < 3) AND (a = 1))
(3 rows)

select * from tt01 where a = 1 having b < 3;
 a | b | c 
---+---+---
 1 | 1 | 1
 1 | 2 | 2
(2 rows)

--包含having子句，不包含grouping by子句, having子句中包含agg函数
explain (costs off)select * from tt01 where a = 1 having avg(b) > 1;
           QUERY PLAN            
---------------------------------
 Aggregate
   Filter: (avg(b) > 1::numeric)
   ->  Seq Scan on tt01
         Filter: (a = 1)
(4 rows)

select * from tt01 where a = 1 having avg(b) > 1;
 a | b | c 
---+---+---
 1 | 1 | 1
(1 row)

explain (costs off)select sum(b), avg(b) from tt01 where a = 1 having avg(b) > 1;
           QUERY PLAN            
---------------------------------
 Aggregate
   Filter: (avg(b) > 1::numeric)
   ->  Seq Scan on tt01
         Filter: (a = 1)
(4 rows)

select sum(b), avg(b) from tt01 where a = 1 having avg(b) > 1;
 sum |        avg         
-----+--------------------
  15 | 3.0000000000000000
(1 row)

--包含having子句，包含grouping by子句
explain (costs off)select * from tt01 group by a having b < 3;
       QUERY PLAN        
-------------------------
 HashAggregate
   Group By Key: a
   ->  Seq Scan on tt01
         Filter: (b < 3)
(4 rows)

select * from tt01 group by a having b < 3;
 a | b | c 
---+---+---
 1 | 1 | 1
(1 row)

explain (costs off)select * from tt01 group by a having avg(b) > 1;
           QUERY PLAN            
---------------------------------
 HashAggregate
   Group By Key: a
   Filter: (avg(b) > 1::numeric)
   ->  Seq Scan on tt01
(4 rows)

select * from tt01 group by a having avg(b) > 1;
 a | b | c 
---+---+---
 1 | 1 | 1
 2 | 6 | 6
(2 rows)

explain (costs off)select sum(b), avg(b) from tt01 group by a having avg(b) > 1;
           QUERY PLAN            
---------------------------------
 HashAggregate
   Group By Key: a
   Filter: (avg(b) > 1::numeric)
   ->  Seq Scan on tt01
(4 rows)

select sum(b), avg(b) from tt01 group by a having avg(b) > 1;
 sum |        avg         
-----+--------------------
  15 | 3.0000000000000000
  40 | 8.0000000000000000
(2 rows)

--包含grouping sets
explain (costs off)select * from tt01 group by grouping sets((a), ());
          QUERY PLAN          
------------------------------
 GroupAggregate
   Group By Key: a
   Group By Key: ()
   ->  Sort
         Sort Key: a
         ->  Seq Scan on tt01
(6 rows)

select * from tt01 group by grouping sets((a), ());
 a | b | c 
---+---+---
 1 | 1 | 1
 2 | 6 | 6
   | 6 | 6
(3 rows)

--sql_mode_full_group 模式下，直接报错
set dolphin.sql_mode='sql_mode_full_group';
select * from tt01 having a = 1;  --error
ERROR:  column "tt01.a" must appear in the GROUP BY clause or be used in an aggregate function
LINE 1: select * from tt01 having a = 1;
               ^
set dolphin.sql_mode='sql_mode_strict,sql_mode_full_group,pipes_as_concat,ansi_quotes,no_zero_date,pad_char_to_full_length';
drop schema issue_online cascade;
NOTICE:  drop cascades to table tt01
reset current_schema;
