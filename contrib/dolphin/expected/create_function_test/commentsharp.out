drop database if exists db_comment_sharp;
NOTICE:  database "db_comment_sharp" does not exist, skipping
create database db_comment_sharp dbcompatibility 'B';
\c db_comment_sharp
create table t1(a int,b int);
insert into t1 values(10,11);
insert into t1 values(12,13);
set B_COMPATIBILITY_MODE  = 0;
select a # b from t1;
 ?column? 
----------
        1
        1
(2 rows)

select a -- b from t1;
;
ERROR:  column "a" does not exist
LINE 1: select a 
               ^
CONTEXT:  referenced column: a
set B_COMPATIBILITY_MODE  = 1;
select 2 # b from t1 ;
 ?column? 
----------
        2
(1 row)

select a +# b from t1;
ERROR:  syntax error at end of input
LINE 1: select a +# b from t1;
                              ^
;
#select a + b from t1;
select a + b from t1;#comment aaa
 ?column? 
----------
       21
       25
(2 rows)

select a + b from t1;#+===- comment aaa
 ?column? 
----------
       21
       25
(2 rows)

select a + b from t1;=#- comment aaa
 ?column? 
----------
       21
       25
(2 rows)

;
ERROR:  syntax error at or near "="
LINE 1: =#- comment aaa
        ^
set B_COMPATIBILITY_MODE  = 0;
create table t1#t2 (a int);
insert into t1#t2 values(1),(2);
select * from t1#t2;
 a 
---
 1
 2
(2 rows)

set B_COMPATIBILITY_MODE  = 1;
create table t3#t2
(a int);
insert  into t3 values(1),(2);
select * from t3;
 a 
---
 1
 2
(2 rows)

create table t4 (a#b
int );
insert into t4 values(1),(3);
select * from t4;
 a 
---
 1
 3
(2 rows)

set B_COMPATIBILITY_MODE  = 0;
--test inside plpgsql 
set B_COMPATIBILITY_MODE  = 1;
create table test(a varchar(10));
CREATE FUNCTION testfunc3() return int as
begin
insert into test values ('bbbbbb');# 
insert into test values ('c#
d');
return 1;
end;
/
call testfunc3();
 testfunc3 
-----------
         1
(1 row)

CREATE FUNCTION testfunc2() return int as
declare
a#b int := 5
int :=4;
begin
insert into test values (a);
return 1;
end;
/
call testfunc2();
 testfunc2 
-----------
         1
(1 row)

set B_COMPATIBILITY_MODE  = 0;
CREATE FUNCTION testfunc12() return int as
declare
a#b int := 5
int :=4;
begin
insert into test values (a);
return 1;
end;
/
ERROR:  syntax error at or near "int"
LINE 4: int :=4;
        ^
QUERY:  
declare
a#b int := 5
int :=4;
begin
insert into test values (a);
return 1;
end
call testfunc12();
ERROR:  function "testfunc12" doesn't exist 
--bug fix when use sharp after  keyword without space
set b_compatibility_mode = on;
create or replace function testfunc() returns trigger as
$$
declare
begin
insert into t_trig values(new.id);
return new;
end
$$ language plpgsql;
create table t_test (a int);
create table t_test2 (a int);
-- after keyword 
create trigger test_trig
after insert on t_test
for each row#
execute procedure testfunc();
create trigger test_trig2
after insert on t_test2
for each row# 123123123
execute procedure testfunc();
create#
table t_test3 (a int);
create trigger test_trig3
after insert on t_test3
for each row
execute# 
procedure testfunc();
--turn off parameter,has error 
set b_compatibility_mode = off;
create trigger test_trig4
after insert on t_test
for each row#
execute procedure testfunc();
ERROR:  syntax error at or near "row#"
LINE 3: for each row#
                 ^
--clear enverment
drop table t_test;
drop table t_test2;
drop table t_test3;
\c postgres
drop database if exists db_comment_sharp;
