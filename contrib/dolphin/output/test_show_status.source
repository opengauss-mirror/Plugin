create schema db_show_status;
set current_schema to 'db_show_status';
set dolphin.sql_mode='';
\! gsql -d contrib_regression -r -p @portstring@ -c "show status" > /dev/null; echo $?
WARNING:  [SS] dms not init!
CONTEXT:  PL/pgSQL function dbe_perf.get_global_wait_events() line 12 at FOR over EXECUTE statement
PL/pgSQL function show_status(boolean) line 6 at RETURN QUERY
0
\! gsql -d contrib_regression -r -p @portstring@ -c "show session status" > /dev/null; echo $?
WARNING:  [SS] dms not init!
CONTEXT:  PL/pgSQL function dbe_perf.get_global_wait_events() line 12 at FOR over EXECUTE statement
PL/pgSQL function show_status(boolean) line 6 at RETURN QUERY
0
\! gsql -d contrib_regression -r -p @portstring@ -c "show global status" > /dev/null; echo $?
WARNING:  [SS] dms not init!
CONTEXT:  PL/pgSQL function dbe_perf.get_global_wait_events() line 12 at FOR over EXECUTE statement
PL/pgSQL function show_status(boolean) line 6 at RETURN QUERY
0
show session status like 'buffers_backend';
WARNING:  [SS] dms not init!
CONTEXT:  PL/pgSQL function dbe_perf.get_global_wait_events() line 12 at FOR over EXECUTE statement
PL/pgSQL function show_status(boolean) line 6 at RETURN QUERY
  Variable_name  | Value 
-----------------+-------
--?.*
--?.*

show global status where variable_name = 'buffers_backend';
WARNING:  [SS] dms not init!
CONTEXT:  PL/pgSQL function dbe_perf.get_global_wait_events() line 12 at FOR over EXECUTE statement
PL/pgSQL function show_status(boolean) line 6 at RETURN QUERY
  Variable_name  | Value 
-----------------+-------
--?.*
--?.*

show dolphin.sql_mode;
 dolphin.sql_mode 
------------------
 
(1 row)

reset dolphin.sql_mode;
drop schema db_show_status cascade;
reset current_schema;
