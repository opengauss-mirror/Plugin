--insert语法测试
drop database if exists dump_insert_db;
NOTICE:  database "dump_insert_db" does not exist, skipping
drop database if exists restore_insert_db;
NOTICE:  database "restore_insert_db" does not exist, skipping
create database dump_insert_db with dbcompatibility = 'B';
create database restore_insert_db with dbcompatibility = 'B';
\c dump_insert_db
--test insert set
create table t_insert_001(id int);
insert into t_insert_001() values(1);
insert t_insert_001 set id = id + 1;
select id from t_insert_001 order by id;
 id 
----
  1
   
(2 rows)

--导入导出
\! @abs_bindir@/gs_dump dump_insert_db -p @portstring@ -f @abs_bindir@/dump_insert.sql -F p >/dev/null 2>&1; echo $?
0
drop table t_insert_001;
\! @abs_bindir@/gsql restore_insert_db -p @portstring@ -f @abs_bindir@/dump_insert.sql >/dev/null 2>&1; echo $?
0
\c restore_insert_db
select id from t_insert_001 order by id;
 id 
----
  1
   
(2 rows)

\c postgres
drop database if exists restore_insert_db;
drop database if exists dump_insert_db;
