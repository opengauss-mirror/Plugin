set dolphin.b_compatibility_mode to off;
drop database if exists b_databaselock;
NOTICE:  database "b_databaselock" does not exist, skipping
create database b_databaselock dbcompatibility 'b';
\c b_databaselock
create table b_database_lock_t1(c1 int);
insert into b_database_lock_t1 values (9);
select get_lock('b_databasetest_lock', 100);
 get_lock 
----------
        1
(1 row)

update b_database_lock_t1 set c1 = 2 and get_lock('b_databasetest_lock', 100);
select * from b_database_lock_t1;
 c1 
----
  1
(1 row)

update b_database_lock_t1 set c1 = 4;
select c1 from b_database_lock_t1;
 c1 
----
  4
(1 row)

select release_lock('b_databasetest_lock');
 release_lock 
--------------
            1
(1 row)

select release_lock('b_databasetest_lock');
 release_lock 
--------------
            1
(1 row)

select * from b_database_lock_t1;
 c1 
----
  4
(1 row)

drop table b_database_lock_t1;
create table b_database_lock_t1(c1 int);
\parallel on 3
declare
i int;
begin
select get_lock('b_databasetest_lock', 100) into i;
raise notice 'session1_1:%',i;
perform pg_sleep(1);
select release_lock('b_databasetest_lock') into i;
raise notice 'session1_1:%',i;
end;
/
declare
i int;
begin
perform pg_sleep(1);
insert into b_database_lock_t1 select get_lock('b_databasetest_lock', 5);
select * into i from b_database_lock_t1;
raise notice 'session1_2:%',i;
select release_lock('b_databasetest_lock') into i;
raise notice 'session1_2:%',i;
end;
/
declare
i int;
begin
perform pg_sleep(3);
update b_database_lock_t1 set c1 = 4;
select * into i from b_database_lock_t1;
raise notice 'session1_3:%',i;
end;
/
\parallel off
NOTICE:  session1_1:1
NOTICE:  session1_1:1
NOTICE:  session1_2:1
NOTICE:  session1_2:1
NOTICE:  session1_3:4
drop table b_database_lock_t1;
create table b_database_lock_t1(c1 int,c2 text);
create table b_database_lock_t2(c1 int,c2 text);
\parallel on 2
begin
raise notice 'session2_1';
insert into b_database_lock_t1(c1,c2) values(1,'a');
insert into b_database_lock_t1(c1,c2) values(2,'b');
insert into b_database_lock_t2(c1,c2) values(3,'c');
insert into b_database_lock_t2(c1,c2) values(4,'d');
perform pg_sleep(1);
end;
/
declare
j int;
begin
perform pg_sleep(2);
perform get_lock('b_databasetest_lock', 100) FROM b_database_lock_t1, b_database_lock_t2;
perform get_lock('b_databasetest_lock', 100) FROM b_database_lock_t1;
perform get_lock('b_databasetest_lock', 100) FROM b_database_lock_t2;
select release_lock('b_databasetest_lock') into j;
raise notice 'session2_2:%',j;
select release_lock('b_databasetest_lock') into j;
raise notice 'session2_2:%',j;
select release_lock('b_databasetest_lock') into j;
raise notice 'session2_2:%',j;
select release_lock('b_databasetest_lock') into j;
raise notice 'session2_2:%',j;
select release_lock('b_databasetest_lock') into j;
raise notice 'session2_2:%',j;
end;
/
\parallel off
NOTICE:  session2_1
NOTICE:  session2_2:1
NOTICE:  session2_2:1
NOTICE:  session2_2:1
NOTICE:  session2_2:<NULL>
NOTICE:  session2_2:<NULL>
drop table b_database_lock_t1;
drop table b_database_lock_t2;
\c postgres
set dolphin.b_compatibility_mode to off;
drop database if exists b_databaselock;
